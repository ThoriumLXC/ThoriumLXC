{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ThoriumLXC","text":"<p>Opinionated containerized environments.</p>"},{"location":"cmangos-classic/client-data/","title":"Client Data","text":"<p>CMangos relies on client data to accurately represent the virtual world's physical environment. This data includes critical details such as terrain heights, road layouts, object positioning, and other environmental features. It enables the server to make informed decisions, especially when it comes to NPC pathfinding, collision detection, and other mechanics that depend on the spatial layout of the game world.</p>"},{"location":"cmangos-classic/client-data/#what-is-client-data","title":"What is Client Data?","text":"<p>Client data refers to information about the virtual world\u2019s structure, including:</p> <ul> <li>Terrain Heights: The elevation of hills, valleys, and flatlands.</li> <li>Road Networks: Pathways and roads that guide NPCs and players.</li> <li>Object Positioning: The placement of static objects like buildings, trees, and other world assets.</li> </ul> <p>This data is not pre-baked into the server code. Instead, the server relies on external files generated from the game client to understand the world\u2019s geography. Without this data, the server would lack context for NPC movement, environmental interactions, and spatial awareness.</p>"},{"location":"cmangos-classic/client-data/#why-client-data-is-important","title":"Why Client Data is Important","text":"<p>The extracted client data allows the server to:</p> <ul> <li>Improve NPC Pathfinding: NPCs can navigate complex terrain more realistically.</li> <li>Handle Collisions Accurately: Ensures characters and objects behave correctly when interacting with the environment.</li> <li>Optimize Server Performance: Reduces the need for complex runtime calculations by referencing pre-processed data.</li> </ul>"},{"location":"cmangos-classic/client-data/#how-client-data-is-extracted","title":"How Client Data is Extracted","text":"<p>The extraction process involves analyzing the game client files to pull out relevant data, such as height maps and 3D models. This is done using tools provided within the CMangos Docker setup.</p>"},{"location":"cmangos-classic/client-data/#steps-to-extract-client-data","title":"Steps to Extract Client Data","text":"<ol> <li> <p>Prepare Your Game Client:    Ensure you have a compatible version of the World of Warcraft client. The client version must match the CMangos server version you're working with.</p> </li> <li> <p>Mount the Client Directory:    Using Docker, mount the directory containing your game client into a Docker volume. This makes the client\u2019s data accessible to the extraction tools.</p> </li> </ol> <p>Example:    <pre><code>docker volume create cmangos-client-data\ndocker run -v /path/to/client:/client -v cmangos-client-data:/data cmangos/tools extract\n</code></pre></p> <p>In this example:    - <code>/path/to/client</code> is the path to your local game client files.    - <code>cmangos-client-data</code> is the Docker volume where the extracted data will be stored.</p> <ol> <li> <p>Run the Extraction Tool:    The <code>extract</code> tool scans the client\u2019s data, processes the models, height maps, and other files, and populates the Docker volume with the necessary data.</p> </li> <li> <p>Verify the Extraction:    After the process completes, check the <code>/data</code> volume to ensure the data has been successfully extracted.</p> </li> </ol>"},{"location":"cmangos-classic/client-data/#using-extracted-client-data","title":"Using Extracted Client Data","text":"<p>Once the client data has been extracted:</p> <ul> <li>The Docker volume containing the data will be automatically mounted when you bring up the CMangos server with <code>docker-compose up</code>.</li> <li>The server will reference this data for tasks like NPC movement, environmental interactions, and collision detection\u2014without requiring any additional setup from you.</li> </ul> <p>This approach ensures that the server can manage world data seamlessly, reducing the need for complex manual configurations.</p>"},{"location":"cmangos-classic/client-data/#summary","title":"Summary","text":"<ul> <li>Client Data represents the physical layout of the game world (terrain, objects, roads).</li> <li>The data is extracted from the game client using Docker-based tools.</li> <li>Docker volumes simplify the process by storing extracted data for easy reuse.</li> <li>The server uses this data automatically during runtime to improve pathfinding, collision detection, and world interaction logic.</li> </ul> <p>By following this process, you ensure that your CMangos server has accurate, detailed knowledge of the game world, enhancing gameplay quality and server performance.</p>"},{"location":"cmangos-classic/clients/","title":"Supported Clients","text":"<p>CMangos is designed to work with specific versions of the World of Warcraft client. The following list includes the environments where CMangos has been tested and confirmed to work reliably. While it may function on other versions or setups, these are the officially supported clients for the best experience.</p>"},{"location":"cmangos-classic/clients/#supported-world-of-warcraft-clients","title":"Supported World of Warcraft Clients","text":"Version Expansion Build Number Status 1.12.1 Classic 5875 \u2705 Supported <p>Note: Only full, unmodified clients are supported. Custom clients or repacks may cause compatibility issues.</p>"},{"location":"cmangos-classic/clients/#compatibility-notes","title":"Compatibility Notes","text":"<ul> <li> <p>Localization:   CMangos supports clients in various languages, but core functionality is tested primarily on English clients.</p> </li> <li> <p>Patches &amp; Updates:   Ensure your client matches the exact supported build number. Partial updates or mismatched patches may lead to instability.</p> </li> <li> <p>Legacy Clients:   While older clients may connect, features and stability cannot be guaranteed outside the supported versions listed above.</p> </li> </ul>"},{"location":"cmangos-classic/clients/#system-requirements-for-clients","title":"System Requirements for Clients","text":"<p>Although CMangos itself runs in Docker, the World of Warcraft client has its own requirements depending on the version. Here\u2019s a general guideline:</p> <ul> <li> <p>Operating Systems:   Windows XP, Windows 7, Windows 10 (for older clients, compatibility mode may be required)   macOS (for older PowerPC or Intel-based versions)</p> </li> <li> <p>Hardware:   Minimal requirements based on the client version. Modern systems will easily exceed these requirements.</p> </li> </ul>"},{"location":"cmangos-classic/clients/#known-issues-with-unsupported-clients","title":"Known Issues with Unsupported Clients","text":"<ul> <li>Connection instability</li> <li>Broken NPC pathfinding</li> <li>UI inconsistencies</li> <li>Incompatible database interactions</li> </ul> <p>For the best results, always use one of the supported client versions listed above.</p>"},{"location":"cmangos-classic/overview/","title":"cMaNGOS Classic","text":"<p>Welcome to the CMangos Getting Started guide. This section will walk you through the process of setting up your CMangos server using Docker. Whether you're new to server emulation or Docker itself, this guide is designed to help you get up and running quickly and smoothly.</p>"},{"location":"cmangos-classic/overview/#1-prerequisites","title":"1. Prerequisites","text":"<p>Before you begin, make sure you have the following installed on your system:</p> <ul> <li> <p>Docker: Required to run the CMangos server in isolated containers.   Download Docker</p> </li> <li> <p>Docker Compose: Simplifies the process of managing multi-container Docker applications.   Learn about Docker Compose</p> </li> <li> <p>Git (optional but recommended): Helps clone the CMangos repository easily.   Get Git</p> </li> </ul>"},{"location":"cmangos-classic/overview/#2-cloning-the-cmangos-repository","title":"2. Cloning the CMangos Repository","text":"<p>You'll need to download the CMangos Docker configuration files. The easiest way to do this is by cloning the repository:</p> <pre><code>git clone https://github.com/your-cmangos-repo.git\ncd your-cmangos-repo\n</code></pre> <p>If you prefer not to use Git, you can also download the repository as a ZIP file from GitHub and extract it.</p>"},{"location":"cmangos-classic/overview/#3-understanding-the-project-structure","title":"3. Understanding the Project Structure","text":"<p>After downloading the repository, you\u2019ll see a few important files and folders:</p> <ul> <li><code>docker-compose.yml</code>: Defines how the CMangos server and its database are run using Docker.</li> <li><code>configs/</code>: Holds configuration files like <code>mangosd.conf</code> and <code>realmd.conf</code>.</li> <li><code>data/</code>: Where map data and client files will be stored.</li> <li><code>logs/</code>: For server logs to help with diagnostics and troubleshooting.</li> </ul>"},{"location":"cmangos-classic/overview/#4-configuring-the-server-optional","title":"4. Configuring the Server (Optional)","text":"<p>Before starting the server, you can adjust settings in the configuration files if needed:</p> <ul> <li><code>configs/mangosd.conf</code>: Controls gameplay mechanics, server rates, and more.</li> <li><code>configs/realmd.conf</code>: Manages login server settings.</li> </ul> <p>You can modify these files using any text editor. If you\u2019re unsure about changes, the default settings will work fine to start.</p>"},{"location":"cmangos-classic/overview/#5-starting-the-server","title":"5. Starting the Server","text":"<p>Once everything is set up, start the server using Docker Compose:</p> <pre><code>docker-compose up -d\n</code></pre> <p>This command will:</p> <ul> <li>Pull the necessary Docker images (if not already downloaded).</li> <li>Start both the CMangos server and the database in the background.</li> </ul> <p>To verify that everything is running:</p> <pre><code>docker-compose ps\n</code></pre> <p>You should see services like <code>mangosd</code> and <code>realmd</code> listed as \"Up.\"</p>"},{"location":"cmangos-classic/overview/#6-connecting-to-your-server","title":"6. Connecting to Your Server","text":"<ol> <li>Launch your World of Warcraft client (compatible with the server version).</li> <li>Edit the <code>realmlist.wtf</code> file in your client\u2019s directory to point to your server:</li> </ol> <pre><code>set realmlist 127.0.0.1\n</code></pre> <ol> <li>Save the file and start the game.</li> </ol> <p>You\u2019ll need to create an account to log in:</p> <pre><code>docker-compose exec mangosd account create username password\n</code></pre> <p>Replace <code>username</code> and <code>password</code> with your preferred credentials.</p>"},{"location":"cmangos-classic/overview/#7-managing-the-server","title":"7. Managing the Server","text":"<p>Here are some common Docker Compose commands to manage your CMangos server:</p> <ul> <li> <p>View server logs: <pre><code>docker-compose logs -f\n</code></pre></p> </li> <li> <p>Stop the server: <pre><code>docker-compose down\n</code></pre></p> </li> <li> <p>Restart the server: <pre><code>docker-compose restart\n</code></pre></p> </li> <li> <p>Update the server to the latest version: <pre><code>docker-compose pull\ndocker-compose up -d\n</code></pre></p> </li> </ul>"},{"location":"cmangos-classic/overview/#8-troubleshooting-tips","title":"8. Troubleshooting Tips","text":"<ul> <li> <p>Check for Errors:   If the server doesn\u2019t start correctly, use <code>docker-compose logs</code> to review the output for errors.</p> </li> <li> <p>Database Issues:   Ensure the database container (<code>db</code>) is running using <code>docker-compose ps</code>.</p> </li> <li> <p>Port Conflicts:   Make sure ports used by CMangos (default: 3724 for login, 8085 for the game server) are not in use by other applications.</p> </li> </ul>"},{"location":"cmangos-classic/overview/#9-next-steps","title":"9. Next Steps","text":"<p>After you\u2019re comfortable with the basics, you can explore:</p> <ul> <li>Customizing Server Settings in <code>mangosd.conf</code> for gameplay tweaks.</li> <li>Managing Accounts with in-game commands or the database.</li> <li>Advanced Configuration for multiple realms or remote access.</li> </ul> <p>For more details, check out the other sections of the documentation, including Installation, Configuration, and Database Management.</p> <p>With this guide, you should now have a fully functional CMangos server running in Docker. Enjoy your journey into Azeroth!</p>"},{"location":"cmangos-classic/versions/","title":"Versions","text":"<p>CMangos Docker images are published using a versioning system called CalVer. This section explains how the CalVer format works, how to use these versions in your Docker Compose setup, and where to find the images across different container registries.</p>"},{"location":"cmangos-classic/versions/#what-is-calver","title":"What is CalVer?","text":"<p>CalVer stands for \"Calendar Versioning\". It\u2019s a simple, easy-to-understand versioning format designed to help you know exactly when an image was created and if there have been any updates to it.</p>"},{"location":"cmangos-classic/versions/#calver-format","title":"CalVer Format:","text":"<pre><code>YYYY.MM.DD-R\n</code></pre> <ul> <li><code>YYYY</code> - The year the image was published.</li> <li><code>MM</code> - The month of publication.</li> <li><code>DD</code> - The day the image was created.</li> <li><code>R</code> - The revision number for that day. If changes are made to the image on the same day, this number increases.</li> </ul>"},{"location":"cmangos-classic/versions/#example","title":"Example:","text":"<pre><code>2024.02.03-1\n</code></pre> <ul> <li>2024 - Published in the year 2024</li> <li>02 - In February</li> <li>03 - On the 3rd day of the month</li> <li>-1 - This is the first version released on that day</li> </ul> <p>If the image was updated later the same day, it would be:</p> <pre><code>2024.02.03-2\n</code></pre> <p>This system makes it easy to track when an image was last updated and if any quick fixes or patches were applied on the same day.</p>"},{"location":"cmangos-classic/versions/#using-calver-versions-in-docker-compose","title":"Using CalVer Versions in Docker Compose","text":"<p>To use a specific CMangos image version in your <code>docker-compose.yml</code>, you\u2019ll reference the CalVer tag like this:</p> <pre><code>version: \"3.8\"\nservices:\n  cmangos-server:\n    image: mockorg/cmangos:2024.02.03-1\n    ports:\n      - \"8085:8085\"\n      - \"3724:3724\"\n    volumes:\n      - cmangos-data:/data\n    environment:\n      - SERVER_CONFIG=/configs/mangosd.conf\n\nvolumes:\n  cmangos-data:\n</code></pre> <p>In this example:</p> <ul> <li><code>mockorg/cmangos</code> is the mock organization and repository name.</li> <li><code>2024.02.03-1</code> is the specific CalVer version tag.</li> </ul> <p>If you want to always pull the latest image, you can use:</p> <pre><code>image: mockorg/cmangos:latest\n</code></pre> <p>However, using a specific CalVer version is recommended for stability, so you always know exactly which version is running.</p>"},{"location":"cmangos-classic/versions/#where-to-find-cmangos-images","title":"Where to Find CMangos Images","text":"<p>You can find CMangos Docker images hosted on popular container registries. Here are mock links to give you an idea of where they would be available:</p> <ul> <li>Docker Hub</li> <li>GitHub Container Registry</li> <li>GitLab Container Registry</li> </ul> <p>Each registry hosts the same images, tagged with their CalVer versions.</p>"},{"location":"cmangos-classic/versions/#most-recent-version","title":"Most Recent Version","text":"<p>For quick reference, here\u2019s the most recent CMangos image:</p> <ul> <li>Latest Version: <code>2024.02.03-1</code></li> <li>Tag: <code>latest</code> (if you prefer to automatically use the newest version)</li> <li>Published On: February 3, 2024</li> </ul> <p>You can always find the most recent version by checking the registries linked above.</p>"},{"location":"cmangos-classic/versions/#summary","title":"Summary","text":"<ul> <li>CalVer helps you easily identify when an image was created and if it\u2019s been updated.</li> <li>Use CalVer tags in your <code>docker-compose.yml</code> for version control.</li> <li>Images are available on Docker Hub, GitHub Container Registry, and GitLab Registry.</li> <li>For stability, pin to specific versions instead of <code>latest</code> unless you\u2019re okay with automatic updates.</li> </ul>"},{"location":"cmangos-classic/bots/ahbot/","title":"AH Bots","text":"<p>The AHBot (Auction House Bot) in CMaNGOS is a built-in feature designed to simulate player-driven activity in the in-game Auction House. On single-player servers or servers with low populations, the Auction House can appear empty or stagnant, which detracts from the normal gameplay experience.</p> <p>AHBot helps address this by automatically posting auctions for a variety of items\u2014ranging from common consumables and crafting materials to high-level gear\u2014ensuring that players have a selection of goods to buy and sell. It can also purchase items listed by real players, injecting gold back into the economy and mimicking organic market demand.</p> <p>The behaviour of the bot can be configured within the <code>ahbot.conf</code> file, which will align the bot to the server's needs.</p> <p>For example, you can set the minimum and maximum quantity of items listed, define price ranges or bidding increments, and even designate which item categories are more frequently posted. You might tweak the bot to create a bustling market with plentiful resources for solo leveling characters, or limit the number of high-tier gear pieces to preserve a sense of rarity.</p>"},{"location":"cmangos-classic/bots/ahbot/#configuration-options","title":"Configuration Options","text":"<p>Below is a table of the most common (and essential) AHBot-related configuration options found in this file. Note that some options appear multiple times for different item categories or rarities; each category can be customized independently using the same parameter names but with category and rarity suffixes (e.g., <code>AhBot.MaxAuctionCount.equip.blue</code>).</p> Option Description Example Values <code>AuctionHouseBot.Seller.Enabled</code> Enables or disables the old <code>AuctionHouseBot</code> (the legacy bot). Setting to <code>0</code> disables it. <code>0</code> (disabled) <code>1</code> (enabled) <code>AuctionHouseBot.Buyer.Enabled</code> Enables or disables the old <code>AuctionHouseBot</code> buyer logic. Also part of the legacy bot system. <code>0</code> (disabled) <code>1</code> (enabled) <code>AhBot.Enabled</code> Enables or disables the <code>new</code> AhBot system. <code>0</code> (disabled) <code>1</code> (enabled) <code>AhBot.MaxItemLevel</code> The maximum item level of items that AhBot is allowed to post or buy. <code>500</code> <code>AhBot.MaxRequiredLevel</code> The maximum required player level for items AhBot will list or purchase. <code>80</code> <code>AhBot.PriceMultiplier</code> A <code>global</code> pricing multiplier applied to all items (unless overridden by category-specific multipliers). This affects how much items are listed or bought for, relative to their default value. <code>0.35</code> (35% of default) Typical range: <code>0.1</code>\u2013<code>2.0</code> <code>AhBot.DefaultMinPrice</code> The fallback minimum price in copper (if the price calculation falls below this value). Helps avoid near-zero listings. <code>20</code> (which is actually 20 copper = 0.20 silver) <code>AhBot.PriceQualityMultiplier</code> Applies an additional multiplier based on item quality; if <code>1.0</code>, there is no added factor. Some server admins increase this to make higher-quality items more expensive. <code>1.0</code> (no change to prices) Could be <code>1.5</code>, <code>2.0</code>, etc. <code>AhBot.AlwaysAvailableMoney</code> How much gold (in copper) the bot can always access for buying items. If set high, the bot effectively never runs out of funds. <code>2000000</code> (20,000 gold) Any large integer <code>AhBot.SendMail</code> Determines whether the bot sends out mail (for instance, returning unsold items). <code>0</code> (off) <code>1</code> (on) <code>AhBot.ItemBuyMinInterval</code> The minimum time in seconds between the bot purchasing items of the same type/category. If commented out, defaults apply internally. <code>600</code> (10 minutes) <code>7200</code> (2 hours) <code>AhBot.ItemSellMinInterval</code> The minimum time in seconds between the bot posting items of the same type/category. <code>600</code> (10 minutes) <code>7200</code> (2 hours) <code>AhBot.ItemSellMaxInterval</code> The maximum time in seconds between the bot posting items of the same type/category. If random posting is used, this helps define the upper limit of time. <code>7200</code> (2 hours) <code>AhBot.MaxSellInterval</code> The maximum time in seconds the bot will wait before selling additional items (global cap). <code>28800</code> (8 hours) <p>Tip</p> <p>Values involving currency are in the lowest currency option, like <code>copper</code>. For example, <code>20</code> means 20 copper.</p>"},{"location":"cmangos-classic/bots/ahbot/#category","title":"Category","text":"<p>Categories can be <code>equip</code>, <code>reagent</code>, <code>consumables</code>, <code>container</code>, <code>recipe</code>, <code>quest</code>, <code>devices</code>, <code>trade</code>.</p> Option Description Example Values <code>AhBot.MaxAuctionCount.&lt;category&gt;</code> The <code>maximum number</code> of items the bot can have on auction at one time for a given category. Typically broken down further by rarity suffix (<code>white</code>, <code>green</code>, <code>blue</code>, <code>epic</code>). <code>AhBot.MaxAuctionCount.equip.epic = 10</code> <code>AhBot.MaxAuctionCount.recipe.green = 4</code> <code>AhBot.MaxItemTypeCount.&lt;category&gt;</code> The <code>maximum number</code> of individual item types (of a certain rarity) in a category the bot can list concurrently. For example, limiting the total number of a specific blue item. <code>AhBot.MaxItemTypeCount.equip.blue = 5</code> <code>AhBot.MaxItemTypeCount.equip.epic = 2</code> <code>AhBot.PriceMultiplier.Sell.&lt;category&gt;</code> A <code>category-specific</code> multiplier for selling items. Multiplies the base price or global multiplier to adjust how much the bot charges when listing auctions in that category. <code>AhBot.PriceMultiplier.Sell.recipe = 5.0</code> <code>AhBot.PriceMultiplier.Sell.equip = 2.5</code> <code>AhBot.PriceMultiplier.Buy.&lt;category&gt;</code> A <code>category-specific</code> multiplier for buying items. Similar concept to <code>Sell</code> but for when the bot is purchasing player-posted items. <code>AhBot.PriceMultiplier.Buy.recipe = 5.0</code> <code>AhBot.PriceMultiplier.Buy.equip = 2.5</code> <code>AhBot.PricingStrategy.&lt;category&gt;</code> Determines how the bot approaches pricing for certain categories. For example, <code>buyOnlyRare</code> might prevent the bot from buying items below a certain rarity threshold. <code>AhBot.PricingStrategy.equip = buyOnlyRare</code> Other strategies depend on your core\u2019s code"},{"location":"cmangos-classic/bots/playerbots/","title":"Playerbots","text":"<p>Playerbot is an optional feature in CMaNGOS that introduces AI-controlled \u201cplayer\u201d characters into the game world. These bots can function much like real players, forming or joining parties, helping with quests, running dungeons, and even using class-specific abilities. This is particularly valuable on servers with low population or for those who want to experience group-based content while playing single player.</p> <p>Playerbots aim to simulate player-like behavior as closely as possible, making the world feel more alive and offering a more dynamic leveling and endgame experience.</p> <p>Playerbots can be configured in many ways to tailor their behavior. For example, you might tweak how aggressively they pull mobs, what spells or abilities they prioritize, and whether they can follow certain quest lines automatically. You could decide how many bots can be active at once, define individual roles (tank, healer, DPS), and configure class-specific AI preferences to ensure each bot plays optimally.</p>"},{"location":"cmangos-classic/bots/playerbots/#configuration-options","title":"Configuration Options","text":"<p>Below is a reference table summarizing the Playerbot configuration options. It is grouped by general categories as many options share a similar pattern (e.g., <code>AiPlayerbot.RandomBotXYZ</code>, <code>AiPlayerbot.PremadeSpecName.&lt;class&gt;.&lt;specno&gt;</code>, etc.), so rather than list every single line, the table focuses on the key config parameters, their purpose, and typical or example values.</p> <p>Tip</p> <p>Many configuration options exist based on <code>&lt;class&gt;</code> or <code>&lt;race&gt;</code>. This will appear one per class-race combination.</p> Class ID Race ID Warrior <code>1</code> Human <code>1</code> Paladin <code>2</code> Orc <code>2</code> Hunter <code>3</code> Dwarf <code>3</code> Rogue <code>4</code> Night Elf <code>4</code> Priest <code>5</code> Undead <code>5</code> Shaman <code>7</code> Tauren <code>6</code> Mage <code>8</code> Gnome <code>7</code> Warlock <code>9</code> Troll <code>8</code> Druid <code>11</code>"},{"location":"cmangos-classic/bots/playerbots/#general-bot-activation-behavior","title":"General Bot Activation &amp; Behavior","text":"Option Description Example Values <code>AiPlayerbot.Enabled</code> Master switch to enable or disable the entire Playerbot system. <code>0</code> (disabled) or <code>1</code> (enabled) <code>AiPlayerbot.RandomBotAutologin</code> Allows random bots to automatically log in. <code>0</code> (off), <code>1</code> (on) <code>AiPlayerbot.RandomBotLoginAtStartup</code> If set, logs on all random bots at server startup. <code>0</code> or <code>1</code> <code>AiPlayerbot.BotAutologin</code> Auto-log in \u201calt\u201d bots on the same account when the player logs in. <code>0</code> (off), <code>1</code> or <code>2</code> (levels of automatic login) <code>AiPlayerbot.DeleteRandomBotAccounts</code> If <code>1</code>, deletes all random bot accounts on server start (clean slate). <code>0</code> or <code>1</code> <code>AiPlayerbot.MinRandomBots</code>/<code>MaxRandomBots</code> Minimum/maximum number of random bots that should be kept online. <code>1000</code> and <code>1000</code> (example); any positive integer <code>AiPlayerbot.RandomBotMinLevel</code>/<code>\u2026MaxLevel</code> Limits for the randomly generated bot levels. <code>1</code>\u2013<code>60</code>, for Classic <code>AiPlayerbot.RandomBotAccountPrefix</code> Prefix used when creating random bot accounts. <code>\"RNDBOT\"</code> <code>AiPlayerbot.RandomBotAccountCount</code> How many random bot accounts to create (if they do not already exist). <code>200</code> <code>AiPlayerbot.RandomBotQuestIds</code> Auto-completed or \u201cfree reward\u201d quests for random bots. E.g. <code>7848,3802,5505\u2026</code>"},{"location":"cmangos-classic/bots/playerbots/#random-bot-loginlogout-management","title":"Random Bot Login/Logout Management","text":"Option Description Example Values <code>AiPlayerbot.RandomBotTimedLogout</code> If enabled, random bots log out automatically after <code>BotInWorldTime</code>. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotLoginWithPlayer</code> Log in some or all random bots when real players log in. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotMaps</code> Restricts or allows certain map IDs for random bot teleports/logins. <code>0,1,530,571</code> <code>AiPlayerbot.RandomBotGuildCount</code> How many random bot guilds to form. <code>20</code> <code>AiPlayerbot.DeleteRandomBotGuilds</code> If set to <code>1</code>, deletes all random bot guilds at startup. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotArenaTeamCount</code> How many random bot arena teams to create. <code>20</code> <code>AiPlayerbot.DeleteRandomBotArenaTeams</code> If set to <code>1</code>, deletes all random bot arena teams at startup. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotMaxLevelChance</code> Probability that a randomly generated bot spawns at the maximum level. <code>0.15</code> (15%), etc. <code>AiPlayerbot.RandomBotRpgChance</code> Probability that a bot chooses \u201cRPG\u201d (roleplay) mode instead of grinding. <code>0.20</code> (20%)"},{"location":"cmangos-classic/bots/playerbots/#random-bot-creation-gear","title":"Random Bot Creation &amp; Gear","text":"Option Description Example Values <code>AiPlayerbot.RandomBotAutoCreate</code> Automatically create random bot characters if they do not exist. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotRandomLevels</code> / <code>DisableRandomLevels</code> If disabled, random bots start at a fixed level (you can specify) and then level up normally. <code>0</code> (allow random levels), <code>1</code> (disable random levels) <code>AiPlayerbot.randombotStartingLevel</code> If \u201cDisableRandomLevels=1,\u201d sets the default starting level for bots. e.g., <code>5</code>, <code>10</code> <code>AiPlayerbot.RandomGearMaxLevel</code> Maximum item level used in random gear generation for bots. <code>500</code>, or other large number <code>AiPlayerbot.RandomGearMaxDiff</code> Max difference between bot level and the item\u2019s required level. <code>9</code> (default) <code>AiPlayerbot.RandomGearAutoCreate</code> / <code>RandomGearUpgradeEnabled</code> Allow or disallow the system to periodically upgrade random bot gear for their level. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomGearBlacklist</code> List of item IDs that bots should never equip from the random gear system. e.g. <code>0</code>, or comma-separated list of item IDs <code>AiPlayerbot.RandomGearCountChangeMinInterval</code> Interval in seconds controlling how often random gear (or random gear sets) can change for bots. <code>7200</code> (2 hours), etc."},{"location":"cmangos-classic/bots/playerbots/#class-race-probability","title":"Class &amp; Race Probability","text":"Option Description Example Values <code>AiPlayerbot.ClassRaceProb.&lt;class&gt;.&lt;race&gt;</code> Controls how likely the system is to generate a bot of a given class and race combo. E.g. <code>AiPlayerbot.ClassRaceProb.1.1 = 40</code> <code>AiPlayerbot.LevelProbability.&lt;level&gt;</code> Probability distribution for each possible level the bot can spawn at (relative weighting). <code>AiPlayerbot.LevelProbability.60 = 100</code> Notes The system uses these probabilities to decide how many random bots of each race/class/level appear in the world. -"},{"location":"cmangos-classic/bots/playerbots/#lfg-battlegrounds-arena","title":"LFG / Battlegrounds / Arena","text":"Option Description Example Values <code>AiPlayerbot.RandomBotJoinLfg</code> Random bots will sign up for the LFG system. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotJoinBG</code> Random bots can queue/join battlegrounds. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotAutoJoinBG</code> If nonzero, bots automatically join BG queues under certain conditions (e.g., if not lagging). <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotArenaTeamCount</code> Number of arena teams formed by random bots. <code>20</code>"},{"location":"cmangos-classic/bots/playerbots/#movement-rpg-combat-behavior","title":"Movement, RPG, &amp; Combat Behavior","text":"Option Description Example Values <code>AiPlayerbot.SightDistance</code> How far bots can see/scan for targets (in yards). <code>60.0</code> (default example) <code>AiPlayerbot.SpellDistance</code> Range for casting spells if a bot is a caster. <code>26.0</code> <code>AiPlayerbot.ShootDistance</code> Distance for ranged attacks if the bot has ranged ability. <code>26.0</code> <code>AiPlayerbot.ReactDelay</code> Delay (in milliseconds) before a bot reacts to an event. <code>100</code> (default) <code>AiPlayerbot.PassiveDelay</code> If inactive for this many ms, the bot acts passively or stops. <code>10000</code> <code>AiPlayerbot.RpgDelay</code> Typical delay in ms for certain \u201cRPG\u201d interactions. <code>10000</code> <code>AiPlayerbot.JumpNoCombatChance</code> Probability that a non-combat bot occasionally jumps around while moving. <code>0.50</code> (50%), etc. <code>AiPlayerbot.JumpMeleeInCombatChance</code> Probability that a melee-range bot uses jump tactics in combat. <code>0.50</code>, etc. <code>AiPlayerbot.FleeingEnabled</code> If <code>1</code>, bots may flee when low on health. <code>0</code> or <code>1</code>"},{"location":"cmangos-classic/bots/playerbots/#bot-ai-strategies-commands","title":"Bot AI Strategies &amp; Commands","text":"Option Description Example Values <code>AiPlayerbot.AutoPickReward</code> Governs how bots handle quest reward pickups: <code>yes</code>, <code>no</code>, or <code>ask</code>. <code>yes</code>, <code>no</code>, or <code>ask</code> <code>AiPlayerbot.AutoEquipUpgradeLoot</code> Whether bots automatically equip better loot they find. <code>0</code> (off) or <code>1</code> (on) <code>AiPlayerbot.AutoTrainSpells</code> How bots automatically train spells from trainers. <code>yes</code>, <code>no</code>, or <code>free</code>. <code>\"yes\"</code> = normal training, <code>\"free\"</code> = no gold cost, <code>\"no\"</code> = manual <code>AiPlayerbot.AutoPickTalents</code> Whether (and how) bots choose talents automatically. <code>no</code>, <code>semi</code>, or <code>full</code> <code>AiPlayerbot.AutoDoQuests</code> If <code>1</code>, random bots pick up and try to do random quests on their own. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotCombatStrategies</code> Default AI strategy tags for random bots in combat (e.g. <code>+dps</code>,<code>-threat</code>, etc.). <code>+dps, +dps assist, -threat</code>, etc. <code>AiPlayerbot.RandomBotNonCombatStrategies</code> Default non-combat AI strategies (e.g. <code>+grind</code>, <code>+rpg</code>). <code>+rpg, +loot, +custom::say</code> <code>AiPlayerbot.UseKnockback</code> If <code>1</code>, knockback spells/abilities can affect bots. <code>0</code> or <code>1</code> <code>AiPlayerbot.EnableGreet</code> Bots greet real players or do certain emotes upon meeting. <code>0</code> or <code>1</code> <code>AiPlayerbot.EnableBroadcasts</code> Toggles whether bots broadcast events (looting items, leveling up, killing mobs) in chat channels. <code>0</code> or <code>1</code> <code>AiPlayerbot.LLMEnabled</code> / <code>LLMApiEndpoint</code> etc. (Experimental) integration with large language models for more immersive AI chat. Varies\u2014used for custom AI endpoints"},{"location":"cmangos-classic/bots/playerbots/#pre-made-talent-builds-premadespec","title":"Pre-Made Talent Builds (PremadeSpec)","text":"Option Description Example Values <code>AiPlayerbot.PremadeSpecName.&lt;class&gt;.&lt;spec&gt;</code> The display name for a pre-configured talent build. e.g. <code>AiPlayerbot.PremadeSpecName.4.0 = pve dps assasination</code> <code>AiPlayerbot.PremadeSpecProb.&lt;class&gt;.&lt;spec&gt;</code> Probability that a bot picks that premade specialization (if multiple specs exist). <code>100</code>, <code>80</code>, etc. <code>AiPlayerbot.PremadeSpecLink.&lt;class&gt;.&lt;spec&gt;.&lt;level&gt;</code> Actual talent-tree path (encoded) for the bot. The bot invests points along this path as it levels. e.g. <code>005302105041</code> or <code>30305001302\u2026</code> (talent link strings) Usage These lines help the bot auto-assign talents in a more \u201cbuild-aware\u201d manner. -"},{"location":"cmangos-classic/bots/playerbots/#gear-progression-system","title":"Gear Progression System","text":"Option Description Example Values <code>AiPlayerbot.GearProgressionSystem.Enable</code> Master switch for the gear progression system that upgrades bots\u2019 gear as players progress. <code>0</code> (off) or <code>1</code> (on) <code>AiPlayerbot.GearProgressionSystem.X.MinItemLevel</code>/<code>MaxItemLevel</code> Defines item-level brackets. For instance, \u201c0\u201d bracket is base gear; \u201c1\u201d bracket is pre-raid, etc. e.g. <code>AiPlayerbot.GearProgressionSystem.1.MinItemLevel = 50</code> <code>AiPlayerbot.GearProgressionSystem.X.Class.Spec.Slot</code> Item IDs for each slot of that bracket. The system automatically upgrades a bot\u2019s equipment to these IDs. e.g. <code>AiPlayerbot.GearProgressionSystem.0.1.0.0 = 20521</code> Usage Lets you specify exactly what gear bots get at certain gear \u201ctiers.\u201d -"},{"location":"cmangos-classic/bots/playerbots/#other-notable-settings","title":"Other Notable Settings","text":"Option Description Example Values <code>AiPlayerbot.SendMail</code> Whether bots can send mail (like returning unsold items). <code>0</code> or <code>1</code> <code>AiPlayerbot.ShowProgressBars</code> Displays a progress bar for random bot actions in console or logs. <code>0</code> or <code>1</code> <code>AiPlayerbot.FleeDistance</code> / <code>AiPlayerbot.TooCloseDistance</code> Distances controlling when bots flee or consider themselves too close to a target. E.g. <code>8.0</code> / <code>5.0</code> <code>AiPlayerbot.ImmuneSpellIds</code> Spell IDs that bots should be immune to. e.g. <code>19428</code> <code>AiPlayerbot.AllowGuildBots</code> Whether bots from your guild are allowed to be used. <code>0</code> or <code>1</code> <code>AiPlayerbot.AllowMultiAccountAltBots</code> If <code>1</code>, allows bots from other accounts in the same guild (not just the master\u2019s account). <code>0</code> or <code>1</code> <code>AiPlayerbot.PerfMonEnabled</code> Enables performance monitoring logs for the AI if needed. <code>0</code> or <code>1</code> <code>AiPlayerbot.RespawnModNeutral</code> / <code>\u2026Hostile</code> Accelerates or decelerates mob respawn rates around bots for neutral / hostile mobs. e.g. <code>10.0</code>, <code>5.0</code> <code>AiPlayerbot.GearScoreCheck</code> If nonzero, a bot compares the gear score of a potential group invite. <code>0</code> (off) or a numeric threshold <code>AiPlayerbot.LevelCheck</code> If nonzero, bots check level differences when grouping with real players. <code>30</code> (default)"},{"location":"cmangos-classic/build/building/","title":"Building cMaNGOS Classic","text":"<p>ThoriumLXC publishes container images that include the <code>cmangos-classic</code> source, along with build processes. These images can be used to create emulator server binaries.</p> <p>The Builder Image is the core component responsible for compiling the CMangos server. It handles the entire build process, from source code to final binary artifacts, ensuring consistency and reliability across different environments.</p> <p>Info</p> <p>If you are uncertain how to run these commands, or what they are doing, check out the build architecture overview. It'll help you understand the high-level concepts behind this.</p>"},{"location":"cmangos-classic/build/building/#running-a-build","title":"Running a build","text":"<p>To build cmangos-classic using the builder image, you can use the following command for the <code>latest</code> version. This will download the image, and run the build. Builder images are built to support argumentless builds.</p>  GitHub Container Registry DockerHub GitLab <pre><code>docker run --name cmangos-classic-build ghcr.io/thoriumlxc/cmangos-builder:latest\n</code></pre> <pre><code>docker run --name cmangos-classic-build thoriumlxc/cmangos-builder:latest\n</code></pre> <pre><code>docker run --name cmangos-classic-build gitlab.org/thoriumlxc/cmangos-builder:latest\n</code></pre> <p>Tip</p> <p>These are different container registries that the ThoriumLXC container images can be downloaded from.</p> <p>Depending on the capabilities of your system, this can take a while to download the images, and run the build processes. The outputs from the build will be written to the directory <code>/opt/mangos</code> within the container image.</p> <p>To extract these artifacts, we'll need to copy the files from the <code>cmangos-classic-build</code> container. In a terminal, run the following command to copy the files to a folder named <code>cmangos-classic</code>:</p> <pre><code>docker cp cmangos-classic-build:/opt/mangos cmangos-classic\n</code></pre> <p>This will look like the following:</p> <pre><code>.\n\u2514\u2500\u2500 mangos\n    \u251c\u2500\u2500 bin\n    \u2502   \u251c\u2500\u2500 mangosd\n    \u2502   \u251c\u2500\u2500 realmd\n    \u2502   \u251c\u2500\u2500 run-mangosd\n    \u2502   \u251c\u2500\u2500 run-realmd\n    \u2502   \u251c\u2500\u2500 tools\n    \u2502   \u2502   \u251c\u2500\u2500 ad\n    \u2502   \u2502   \u251c\u2500\u2500 ExtractResources.sh\n    \u2502   \u2502   \u251c\u2500\u2500 MoveMapGen\n    \u2502   \u2502   \u251c\u2500\u2500 MoveMapGen.sh\n    \u2502   \u2502   \u251c\u2500\u2500 offmesh.txt\n    \u2502   \u2502   \u251c\u2500\u2500 vmap_assembler\n    \u2502   \u2502   \u2514\u2500\u2500 vmap_extractor\n    \u2502   \u2514\u2500\u2500 warden_modules\n    \u251c\u2500\u2500 etc\n    \u2502   \u251c\u2500\u2500 ahbot.conf\n    \u2502   \u251c\u2500\u2500 aiplayerbot.conf\n    \u2502   \u251c\u2500\u2500 anticheat.conf\n    \u2502   \u251c\u2500\u2500 anticheat.conf.dist\n    \u2502   \u251c\u2500\u2500 mangosd.conf\n    \u2502   \u251c\u2500\u2500 mangosd.conf.dist\n    \u2502   \u251c\u2500\u2500 realmd.conf\n    \u2502   \u2514\u2500\u2500 realmd.conf.dist\n    \u2514\u2500\u2500 run\n</code></pre>"},{"location":"cmangos-classic/config/accounts/","title":"Default User Accounts","text":"<p>When you set up your server environment, you\u2019ll find several pre-configured user accounts ready to go. These accounts are designed to help you get started quickly without needing to configure detailed login information. Whether you're interested in exploring mechanics, running tests, or just jumping into gameplay, these accounts make it easy to log in and start experimenting immediately.</p> Username Password administrator administrator gamemaster gamemaster moderator moderator player player <p>Each default account is tailored for different levels of access and control. Some accounts offer Game Master privileges, giving you the ability to test commands and manage settings, while others simulate a more standard player experience.</p> <p>Recommended for players is to just use the <code>player:player</code> login.</p>"},{"location":"cmangos-classic/config/commands/","title":"Commands","text":"<p>Commands within cmangos-classic are restricted based on the account type you are on. If you'd like to to experiment with these commands, you can consult the default user accounts.</p> <ul> <li> Player Account Level</li> <li> Moderator Account Level</li> <li> GameMaster Account Level</li> <li> Administrator Account Level</li> <li> Console Account Level</li> </ul>"},{"location":"cmangos-classic/config/commands/#account","title":"account","text":"<ul> <li> Player Account Level</li> </ul> <p>Display the access level of your account</p> <pre><code>.account\n</code></pre>"},{"location":"cmangos-classic/config/commands/#account-characters","title":"account characters","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Displays a list of all characters for an account either by provided #accountId or $accountName, or the account of a selected player</p> <pre><code>.account characters [\\#accountId|$accountName]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#account-set-addon","title":"account set addon","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set the allowed expansion for a given account ID,username or selected characters account. Allowed values are 0 for vanilla,1 for The Burning Crusade,and 2 for Wrath of the Lich King</p> <pre><code>.account set addon [\\#accountId|$accountName] \\#addon\n</code></pre>"},{"location":"cmangos-classic/config/commands/#additem","title":"additem","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Adds the specified number of items of id #itemid (or exact (!) name $itemname in brackets,or link created by shift-click at item in inventory or recipe) to your or selected character inventory. If #itemcount is omitted,only one item will be added.</p> <pre><code>.additem \\#itemid/[\\#itemname]/\\#shift-click-item-link \\#itemcount\n</code></pre>"},{"location":"cmangos-classic/config/commands/#account-lock","title":"account lock","text":"<ul> <li> Player Account Level</li> </ul> <p>Restrict logins to an account from the current IP address,or remove the restriction if active</p> <pre><code>.account lock [on|off]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#additemset","title":"additemset","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Add items from itemset of id #itemsetid to your or selected character inventory. Will add by one example each item from itemset</p> <pre><code>.additemset \\#itemsetid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#account-password","title":"account password","text":"<ul> <li> Player Account Level</li> </ul> <p>Change your accounts password from given $old_password to $new_password</p> <pre><code>.account password $old_password $new_password $new_password\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-items-amount","title":"ahbot items amount","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set amount of each items color be selled on auction</p> <pre><code>.ahbot items amount $GreyItems $WhiteItems $GreenItems $BlueItems $PurpleItems $OrangeItems $YellowItems\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-items-amount-blue","title":"ahbot items amount blue","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set amount of Blue color items be selled on auction</p> <pre><code>.ahbot items amount blue $BlueItems\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-items-amount-green","title":"ahbot items amount green","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set amount of Green color items be selled on auction</p> <pre><code>.ahbot items amount green $GreenItems\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-items-amount-grey","title":"ahbot items amount grey","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set amount of Grey color items be selled on auction</p> <pre><code>.ahbot items amount grey $GreyItems\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-items-amount-orange","title":"ahbot items amount orange","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set amount of Orange color items be selled on auction</p> <pre><code>.ahbot items amount orange $OrangeItems\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-items-amount-purple","title":"ahbot items amount purple","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set amount of Purple color items be selled on auction</p> <pre><code>.ahbot items amount purple $PurpleItems\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-items-amount-white","title":"ahbot items amount white","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set amount of White color items be selled on auction</p> <pre><code>.ahbot items amount white $WhiteItems\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-items-amount-yellow","title":"ahbot items amount yellow","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set amount of Yellow color items be selled on auction</p> <pre><code>.ahbot items amount yellow $YellowItems\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-items-ratio","title":"ahbot items ratio","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set ratio of items in 3 auctions house</p> <pre><code>.ahbot items ratio $allianceratio $horderatio $neutralratio\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-items-ratio-alliance","title":"ahbot items ratio alliance","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set ratio of items in alliance auction house</p> <pre><code>.ahbot items ratio alliance $allianceratio\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-items-ratio-horde","title":"ahbot items ratio horde","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set ratio of items in horde auction house</p> <pre><code>.ahbot items ratio horde $horderatio\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-items-ratio-neutral","title":"ahbot items ratio neutral","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set ratio of items in $neutral auction house</p> <pre><code>.ahbot items ratio neutral $neutralratio\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-rebuild","title":"ahbot rebuild","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Expire all actual auction of ahbot except bided by player. Binded auctions included to expire if all option used. Ahbot re-fill auctions base at current settings then</p> <pre><code>.ahbot rebuild [all]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-reload","title":"ahbot reload","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reload AHBot settings from configuration file</p> <pre><code>.ahbot reload\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ahbot-status","title":"ahbot status","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Show current ahbot state data in short form, and with all with details</p> <pre><code>.ahbot status [all]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#auction","title":"auction","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Show your team auction store</p> <pre><code>.auction\n</code></pre>"},{"location":"cmangos-classic/config/commands/#auction-alliance","title":"auction alliance","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Show alliance auction store independent from your team</p> <pre><code>.auction alliance\n</code></pre>"},{"location":"cmangos-classic/config/commands/#auction-goblin","title":"auction goblin","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Show goblin auction store common for all teams</p> <pre><code>.auction goblin\n</code></pre>"},{"location":"cmangos-classic/config/commands/#auction-horde","title":"auction horde","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Show horde auction store independent from your team</p> <pre><code>.auction horde\n</code></pre>"},{"location":"cmangos-classic/config/commands/#auction-item","title":"auction item","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Add new item (in many stackes if amount grater stack size) to specific auction house at short|long|verylogn perios similar same settings in auction in game dialog. Created auction not have owner</p> <pre><code>.auction item (alliance|horde|goblin) \\#itemid[:\\#itemcount] [[[\\#minbid] \\#buyout] [short|long|verylong]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#announce","title":"announce","text":"<ul> <li> Moderator Account Level</li> </ul> <p>null</p> <pre><code>.announce $MessageToBroadcastSend a global message to all players online in chat log\n</code></pre>"},{"location":"cmangos-classic/config/commands/#aura","title":"aura","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Add the aura from spell #spellid to the selected Unit</p> <pre><code>.aura \\#spellid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ban-account","title":"ban account","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Ban account kick player.$bantime negative value leads to permban,\"otherwise use a timestring like 4d20h3s</p> <pre><code>.ban account $Name $bantime $reason\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ban-character","title":"ban character","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Ban account and kick player. $bantime negative value leads to permban,\"otherwise use a timestring like 4d20h3s</p> <pre><code>.ban character $Name $bantime $reason\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ban-ip","title":"ban ip","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Ban IP. $bantime negative value leads to permban,\"otherwise use a timestring like 4d20h3s</p> <pre><code>.ban ip $Ip $bantime $reason\n</code></pre>"},{"location":"cmangos-classic/config/commands/#baninfo-account","title":"baninfo account","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Watch full information about a specific ban</p> <pre><code>.baninfo account $accountid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#baninfo-character","title":"baninfo character","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Watch full information about a specific ban</p> <pre><code>.baninfo character $charactername\n</code></pre>"},{"location":"cmangos-classic/config/commands/#baninfo-ip","title":"baninfo ip","text":"<ul> <li> Administrator Account Level</li> </ul> <p>full information about a specific ban</p> <pre><code>.baninfo ip $ipWatch\n</code></pre>"},{"location":"cmangos-classic/config/commands/#bank","title":"bank","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Show your bank inventory</p> <pre><code>.bank\n</code></pre>"},{"location":"cmangos-classic/config/commands/#banlist-account","title":"banlist account","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Searches the banlist for a account name pattern or show full list account bans</p> <pre><code>.banlist account [$Name]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#banlist-character","title":"banlist character","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Searches the banlist for a character name pattern. Pattern required</p> <pre><code>.banlist character $Name\n</code></pre>"},{"location":"cmangos-classic/config/commands/#banlist-ip","title":"banlist ip","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Searches the banlist for a IP pattern or show full list of IP bans</p> <pre><code>.banlist ip [$Ip]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#cast","title":"cast","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Cast #spellid to selected target. If no target selected cast to self. If trigered or part provided then spell casted with triggered flag</p> <pre><code>.cast \\#spellid [triggered]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#cast-back","title":"cast back","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Selected target will cast #spellid to your character. If trigered or part provided then spell casted with triggered flag</p> <pre><code>.cast back \\#spellid [triggered]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#cast-dist","title":"cast dist","text":"<ul> <li> Administrator Account Level</li> </ul> <p>You will cast spell to pint at distance #dist. If trigered or part provided then spell casted with triggered flag. Not all spells can be casted as area spells</p> <pre><code>.cast dist \\#spellid [\\#dist [triggered]]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#cast-self","title":"cast self","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Cast #spellid by target at target itself. If trigered or part provided then spell casted with triggered flag</p> <pre><code>.cast self \\#spellid [triggered]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#cast-target","title":"cast target","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Selected target will cast #spellid to his victim. If trigered or part provided then spell casted with triggered flag</p> <pre><code>.cast target \\#spellid [triggered]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#character-deleted-list","title":"character deleted list","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Shows a list with all deleted characters. If $name is supplied,only characters with that string in their name will be selected,if #guid is supplied, only the character with that GUID will be selected</p> <pre><code>.character deleted list [\\#guid|$name]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#character-deleted-restore","title":"character deleted restore","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Restores deleted characters. If $name is supplied,only characters with that string in their name will be restored,if $guid is supplied,only the character with that GUID will be restored. If $newname is set,the character will be restored with that name instead of the original one. If #newaccount is set,the character will be restored to specific account character list. This works only with one character</p> <pre><code>.character deleted restore \\#guid|$name [$newname] [\\#new account]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#character-level","title":"character level","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set the level of character with $playername (or the selected if not name provided) by #numberoflevels Or +1 if no #numberoflevels provided). If #numberoflevels is omitted,the level will be increase by 1. If #numberoflevels is 0,the same level will be restarted. If no character is selected and name not provided,increase your level. Command can be used for offline character. All stats and dependent values recalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost</p> <pre><code>.character level [$playername] [\\#level]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#cooldown","title":"cooldown","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Remove all (if spell_id not provided) or #spel_id spell cooldown from selected character or you (if no selection)</p> <pre><code>.cooldown [\\#spell_id]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#damage","title":"damage","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Apply $damage to target. If not $school and $spellid provided then this flat clean melee damage without any modifiers. If $school provided then damage modified by armor reduction (if school physical),and target absorbing modifiers and result applied as melee damage to target. If spell provided then damage modified and applied as spell damage. $spellid can be shift-link</p> <pre><code>.damage $damage_amount [$school [$spellid]]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#debug-bg","title":"debug bg","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Toggle debug mode for battlegrounds. In debug mode GM can start battleground with single player</p> <pre><code>.debug bg\n</code></pre>"},{"location":"cmangos-classic/config/commands/#debug-getitemvalue","title":"debug getitemvalue","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Get the field #field of the item #itemguid in your inventroy. Use type arg for set output format int (decimal number),hex (hex value),bit (bitstring),float. By default use integer output</p> <pre><code>.debug getitemvalue \\#itemguid \\#field [int|hex|bit|float]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#debug-getvalue","title":"debug getvalue","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Get the field #field of the selected target. If no target is selected,get the content of your field. Use type arg for set output format int (decimal number),hex (hex value),bit (bitstring),float. By default use integer output</p> <pre><code>.debug getvalue \\#field [int|hex|bit|float]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#debug-moditemvalue","title":"debug moditemvalue","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Modify the field #field of the item #itemguid in your inventroy by value #value. Use type arg for set mode of modification int (normal add/subtract #value as decimal number),float (add/subtract #value as float number),&amp;= (bit and,set to 0 all bits in value if it not set to 1 in #value as hex number),|= (bit or,set to 1 all bits in value if it set to 1 in #value as hex number),&amp;=~ (bit and not,set to 0 all bits in value if it set to 1 in #value as hex number). By default expect integer add/subtract</p> <pre><code>.debug moditemvalue \\#guid \\#field [int|float| &amp;= | |= | &amp;=~ ] \\#value\n</code></pre>"},{"location":"cmangos-classic/config/commands/#debug-modvalue","title":"debug modvalue","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Modify the field #field of the selected target by value #value. If no target is selected,set the content of your field. Use type arg for set mode of modification int (normal add/subtract #value as decimal number),float (add/subtract #value as float number),&amp;= (bit and,set to 0 all bits in value if it not set to 1 in #value as hex number),|= (bit or,set to 1 all bits in value if it set to 1 in #value as hex number),&amp;=~ (bit and not,set to 0 all bits in value if it set to 1 in #value as hex number). By default expect integer add/subtract</p> <pre><code>.debug modvalue \\#field [int|float| &amp;= | |= | &amp;=~ ] \\#value\n</code></pre>"},{"location":"cmangos-classic/config/commands/#debug-setitemvalue","title":"debug setitemvalue","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set the field #field of the item #itemguid in your inventroy to value #value. Use type arg for set input format int (decimal number),hex (hex value),bit (bitstring),float. By default expect integer input format</p> <pre><code>.debug setitemvalue \\#guid \\#field [int|hex|bit|float] \\#value\n</code></pre>"},{"location":"cmangos-classic/config/commands/#character-rename","title":"character rename","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Mark selected in game or by $name in command character for rename at next login</p> <pre><code>.character rename [$name]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#character-reputation","title":"character reputation","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Show reputation information for selected player or player find by $player_name</p> <pre><code>.character reputation [$player_name]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#combatstop","title":"combatstop","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Stop combat for selected character. If selected non-player then command applied to self. If $playername provided then attempt applied to online player $playername</p> <pre><code>.combatstop [$playername]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#commands","title":"commands","text":"<ul> <li> Player Account Level</li> </ul> <p>Display a list of available commands for your account level</p> <pre><code>.commands\n</code></pre>"},{"location":"cmangos-classic/config/commands/#debug-setvalue","title":"debug setvalue","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set the field #field of the selected target to value #value. If no target is selected,set the content of your field. Use type arg for set input format int (decimal number),hex (hex value),bit (bitstring),float. By default expect integer input format</p> <pre><code>.debug setvalue \\#field [int|hex|bit|float] \\#value\n</code></pre>"},{"location":"cmangos-classic/config/commands/#debug-spellcoefs","title":"debug spellcoefs","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Show default calculated and DB stored coefficients for direct/dot heal/damage</p> <pre><code>.debug spellcoefs \\#spellid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#debug-anim","title":"debug anim","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Play emote #emoteid for your character</p> <pre><code>.debug anim \\#emoteid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#debug-spellmods","title":"debug spellmods","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set at client side spellmod affect for spell that have bit set with index #spellMaskBitIndex in spell family mask for values dependent from spellmod #spellModOp to #value</p> <pre><code>.debug spellmods (flat|pct) \\#spellMaskBitIndex \\#spellModOp \\#value\n</code></pre>"},{"location":"cmangos-classic/config/commands/#die","title":"die","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Kill the selected player. If no player is selected,it will kill you</p> <pre><code>.die\n</code></pre>"},{"location":"cmangos-classic/config/commands/#distance","title":"distance","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Display the distance from your character to the selected creature/player,or player with name $name,or player/creature/gameobject pointed to shift-link with guid</p> <pre><code>.distance [$name/$link]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#explorecheat","title":"explorecheat","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reveal  or hide all maps for the selected player. If no player is selected,hide or reveal maps to you.Use a #flag of value 1 to reveal,use a #flag value of 0 to hide all maps</p> <pre><code>.explorecheat \\#flag\n</code></pre>"},{"location":"cmangos-classic/config/commands/#gm-fly","title":"gm fly","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Enable/disable gm fly mode</p> <pre><code>.gm fly [on/off]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#debug-play-cinematic","title":"debug play cinematic","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Play cinematic #cinematicid for you. You stay at place while your mind fly</p> <pre><code>.debug play cinematic \\#cinematicid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#debug-play-sound","title":"debug play sound","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Play sound with #soundid.Sound will be play only for you. Other players do not hear this.Warning client may have more 5000 sounds.</p> <pre><code>.debug play sound \\#soundid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#gm-list","title":"gm list","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Display a list of all Game Masters accounts and security levels</p> <pre><code>.gm list\n</code></pre>"},{"location":"cmangos-classic/config/commands/#hidearea","title":"hidearea","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Hide the area of #areaid to the selected character. If no character is selected,hide this area to you</p> <pre><code>.hidearea \\#areaid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#instance-listbinds","title":"instance listbinds","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Lists the binds of the selected player</p> <pre><code>.instance listbinds\n</code></pre>"},{"location":"cmangos-classic/config/commands/#instance-savedata","title":"instance savedata","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Save the InstanceData for the current players map to the DB</p> <pre><code>.instance savedata\n</code></pre>"},{"location":"cmangos-classic/config/commands/#delticket","title":"delticket","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Delete a ticket. If all, then delete all, otherwise lookup by number or character name</p> <pre><code>.delticket [all,\\#num,$character_name]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#demorph","title":"demorph","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Demorph the selected player</p> <pre><code>.demorph\n</code></pre>"},{"location":"cmangos-classic/config/commands/#instance-stats","title":"instance stats","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Shows statistics about instances</p> <pre><code>.instance stats\n</code></pre>"},{"location":"cmangos-classic/config/commands/#dismount","title":"dismount","text":"<ul> <li> Player Account Level</li> </ul> <p>Dismount you,if you are mounted</p> <pre><code>.dismount\n</code></pre>"},{"location":"cmangos-classic/config/commands/#instance-unbind","title":"instance unbind","text":"<ul> <li> Administrator Account Level</li> </ul> <p>All of the selected players binds will be cleared..instance unbind #mapid Only the specified #mapid instance will be cleared</p> <pre><code>.instance unbind all\n</code></pre>"},{"location":"cmangos-classic/config/commands/#event","title":"event","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Show details about event with #event_id</p> <pre><code>.event \\#event_id\n</code></pre>"},{"location":"cmangos-classic/config/commands/#event-list","title":"event list","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Show list of currently active events.Show list of all event</p> <pre><code>.event list\n</code></pre>"},{"location":"cmangos-classic/config/commands/#event-start","title":"event start","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Start event #event_id. Set start time for event to current moment (change not saved in DB)</p> <pre><code>.event start \\#event_id\n</code></pre>"},{"location":"cmangos-classic/config/commands/#event-stop","title":"event stop","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Stop event #event_id. Set start time for event to time in past that make current moment is event stop time (change not saved in DB)</p> <pre><code>.event stop \\#event_id\n</code></pre>"},{"location":"cmangos-classic/config/commands/#learn","title":"learn","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Selected character learn a spell of id #spell. If all provided then all ranks learned</p> <pre><code>.learn \\#spell [all]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#gm","title":"gm","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Enable or Disable in game GM MODE or show current state of on/off not provided</p> <pre><code>.gm [on/off]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#gm-chat","title":"gm chat","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Enable or disable chat GM MODE (show gm badge in messages) or show current state of on/off not provided</p> <pre><code>.gm chat [on/off]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#learn-all","title":"learn all","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Learn all big set different spell maybe useful for Administaror</p> <pre><code>.learn all\n</code></pre>"},{"location":"cmangos-classic/config/commands/#gm-ingame","title":"gm ingame","text":"<ul> <li> Player Account Level</li> </ul> <p>Display a list of available in game Game Masters</p> <pre><code>.gm ingame\n</code></pre>"},{"location":"cmangos-classic/config/commands/#learn-all_myclass","title":"learn all_myclass","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Learn all spells and talents available for his class</p> <pre><code>.learn all_myclass\n</code></pre>"},{"location":"cmangos-classic/config/commands/#gm-setview","title":"gm setview","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Set farsight view on selected unit. Select yourself to set view back</p> <pre><code>.gm setview\n</code></pre>"},{"location":"cmangos-classic/config/commands/#gm-visible","title":"gm visible","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Output current visibility state or make GM visible(on) and invisible(off) for other players</p> <pre><code>.gm visible on/off\n</code></pre>"},{"location":"cmangos-classic/config/commands/#go","title":"go","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport your character to point with coordinates of player $playername,or coordinates of one from shift-link types player,tele,taxinode,creature/creature_entry,gameobject/gameobject_entry,or explicit #x #y #z #mapid coordinates</p> <pre><code>.go [$playername|pointlink|\\#x \\#y \\#z [\\#mapid]]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#go-creature","title":"go creature","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport your character to creature with guid #creature_guid,or teleport your character to creature with name including as part $creature_name substring,or teleport your character to a creature that was spawned from the template with this entry #creature_id</p> <pre><code>.go creature (\\#creature_guid|$creature_name|id \\#creature_id)\n</code></pre>"},{"location":"cmangos-classic/config/commands/#go-graveyard","title":"go graveyard","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport to graveyard with the graveyardId specified</p> <pre><code>.go graveyard \\#graveyardId\n</code></pre>"},{"location":"cmangos-classic/config/commands/#go-grid","title":"go grid","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport the gm to center of grid with provided indexes at map #mapId (or current map if it not provided)</p> <pre><code>.go grid \\#gridX \\#gridY [\\#mapId]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#go-object","title":"go object","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport your character to gameobject with guid #gameobject_guid,or teleport your character to gameobject with name including as part $gameobject_name substring,or teleport your character to a gameobject that was spawned from the template with this entry #gameobject_id</p> <pre><code>.go object (\\#gameobject_guid|$gameobject_name|id \\#gameobject_id)\n</code></pre>"},{"location":"cmangos-classic/config/commands/#go-taxinode","title":"go taxinode","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport player to taxinode coordinates. You can look up zone using .lookup taxinode $namepar</p> <pre><code>.go taxinode \\#taxinode\n</code></pre>"},{"location":"cmangos-classic/config/commands/#go-trigger","title":"go trigger","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport your character to areatrigger with id #trigger_id or trigger id associated with shift-link. If additional arg target provided then character will teleported to areatrigger target point</p> <pre><code>.go trigger (\\#trigger_id|$trigger_shift-link|$trigger_target_shift-link) [target]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#go-xy","title":"go xy","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport player to point with (#x,#y) coordinates at ground(water) level at map #mapid or same map if #mapid not provided</p> <pre><code>.go xy \\#x \\#y [\\#mapid]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#go-xyz","title":"go xyz","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport player to point with (#x,#y,#z) coordinates at ground(water) level at map #mapid or same map if #mapid not provided</p> <pre><code>.go xyz \\#x \\#y \\#z [\\#mapid]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#go-zonexy","title":"go zonexy","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport player to point with (#x,#y) client coordinates at ground(water) level in zone #zoneid or current zone if #zoneid not provided. You can look up zone using .lookup area $namepar</p> <pre><code>.go zonexy \\#x \\#y [\\#zone]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#gobject-add","title":"gobject add","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Add a game object from game object templates to the world at your current location using the #id.spawntimesecs sets the spawntime,it is optional. Note this is a copy of .gameobject</p> <pre><code>.gobject add \\#id &lt;spawntimeSecs&gt;\n</code></pre>"},{"location":"cmangos-classic/config/commands/#gobject-delete","title":"gobject delete","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Delete gameobject with guid #go_guid</p> <pre><code>.gobject delete \\#go_guid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#gobject-move","title":"gobject move","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Move gameobject #goguid to character coordinates (or to (#x,#y,#z) coordinates if its provide)</p> <pre><code>.gobject move \\#goguid [\\#x \\#y \\#z]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#gobject-near","title":"gobject near","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Output gameobjects at distance #distance from player. Output gameobject guids and coordinates sorted by distance from character. If #distance not provided use 10 as default value</p> <pre><code>.gobject near  [\\#distance]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#gobject-target","title":"gobject target","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Locate and show position nearest gameobject. If #go_id or #go_name_part provide then locate and show position of nearest gameobject with gameobject template id #go_id or name included #go_name_part as part</p> <pre><code>.gobject target [\\#go_id|\\#go_name_part]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#gobject-turn","title":"gobject turn","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Set for gameobject #goguid orientation same as current character orientation</p> <pre><code>.gobject turn \\#goguid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#goname","title":"goname","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport to the given character. Either specify the character name or click on the characters portrait,e.g. when you are in a group. Character can be offline</p> <pre><code>.goname [$charactername]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#gps","title":"gps","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Display the position information for a selected character or creature (also if player name $name provided then for named player,or if creature/gameobject shift-link provided then pointed creature/gameobject if it loaded). Position information includes X,Y,Z,and orientation,map Id and zone I</p> <pre><code>.gps [$name|$shift-link\n</code></pre>"},{"location":"cmangos-classic/config/commands/#groupgo","title":"groupgo","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport the given character and his group to you. Teleported only online characters but original selected group member can be offline</p> <pre><code>.groupgo [$charactername]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#guid","title":"guid","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Display the GUID for the selected character</p> <pre><code>.guid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#guild-create","title":"guild create","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Create a guild named $GuildName with the player $GuildLeaderName (or selected) as leader.  Guild name must in quotes.</p> <pre><code>.guild create [$GuildLeaderName] $GuildName\n</code></pre>"},{"location":"cmangos-classic/config/commands/#guild-delete","title":"guild delete","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Delete guild $GuildName. Guild name must in quotes</p> <pre><code>.guild delete $GuildName\n</code></pre>"},{"location":"cmangos-classic/config/commands/#guild-invite","title":"guild invite","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Add player $CharacterName (or selected) into a guild $GuildName. Guild name must in quotes</p> <pre><code>.guild invite [$CharacterName] $GuildName\n</code></pre>"},{"location":"cmangos-classic/config/commands/#guild-rank","title":"guild rank","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Set for $CharacterName rank #Rank in a guild</p> <pre><code>.guild rank $CharacterName \\#Rank\n</code></pre>"},{"location":"cmangos-classic/config/commands/#guild-uninvite","title":"guild uninvite","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Remove player $CharacterName (or selected) from a guild</p> <pre><code>.guild uninvite [$CharacterName]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#help","title":"help","text":"<ul> <li> Player Account Level</li> </ul> <p>Display usage instructions for the given $command. If no $command provided show list available commands</p> <pre><code>.help [$command]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#learn-all_myspells","title":"learn all_myspells","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Learn all spells (except talents and spells with first rank learned as talent) available for his class</p> <pre><code>.learn all_myspells\n</code></pre>"},{"location":"cmangos-classic/config/commands/#honor-add","title":"honor add","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Add a certain amount of honor (gained in lifetime) to the selected player</p> <pre><code>.honor add $amount\n</code></pre>"},{"location":"cmangos-classic/config/commands/#honor-addkill","title":"honor addkill","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Add the targeted unit as one of your pvp kills today (you only get honor if its a racial leader or a player</p> <pre><code>.honor addkill\n</code></pre>"},{"location":"cmangos-classic/config/commands/#honor-show","title":"honor show","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Display the honor stats of the selected playe</p> <pre><code>.honor show\n</code></pre>"},{"location":"cmangos-classic/config/commands/#honor-update","title":"honor update","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Force honor to be updat</p> <pre><code>.honor update\n</code></pre>"},{"location":"cmangos-classic/config/commands/#learn-all_mytalents","title":"learn all_mytalents","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Learn all talents (and spells with first rank learned as talent) available for his class</p> <pre><code>.learn all_mytalents\n</code></pre>"},{"location":"cmangos-classic/config/commands/#levelup","title":"levelup","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Increase/decrease the level of character with $playername (or the selected if not name provided) by #numberoflevels Or +1 if no #numberoflevels provided). If #numberoflevels is omitted,the level will be increase by 1. If #numberoflevels is 0,the same level will be restarted. If no character is selected and name not provided,increase your level. Command can be used for offline character. All stats and dependent VALUESrecalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost</p> <pre><code>.levelup [$playername] [\\#numberoflevels]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#linkgrave","title":"linkgrave","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Link current zone to graveyard for any (or alliance/horde faction ghosts). This let character ghost from zone teleport to graveyard after die if graveyard is nearest from linked to zone and accept ghost of this faction. Add only single graveyard at another map and only if no graveyards linked (or planned linked at same map)</p> <pre><code>.linkgrave \\#graveyard_id [alliance|horde]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#list-creature","title":"list creature","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Output creatures with creature id #creature_id found in world. Output creature guids and coordinates sorted by distance from character. Will be output maximum #max_count creatures. If #max_count not provided use 10 as default value</p> <pre><code>.list creature \\#creature_id [\\#max_count]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#itemmove","title":"itemmove","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Move an item from slots #sourceslotid to #destinationslotid in your inventoryNot yet implemente</p> <pre><code>.itemmove \\#sourceslotid \\#destinationslotid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#kick","title":"kick","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Kick the given character name from the world. If no character name is provided then the selected player (except for yourself) will be kicked</p> <pre><code>.kick [$charactername]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#list-item","title":"list item","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Output items with item id #item_id found in all character inventories,mails,auctions,and guild banks. Output item guids,item owner guid,owner account and owner name (guild name and guid in case guild bank). Will be output maximum #max_count items. If #max_count not provided use 10 as default value</p> <pre><code>.list item \\#item_id [\\#max_count]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#list-object","title":"list object","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Output gameobjects with gameobject id #gameobject_id found in world. Output gameobject guids and coordinates sorted by distance from character. Will be output maximum #max_count gameobject. If #max_count not provided use 10 as default value</p> <pre><code>.list object \\#gameobject_id [\\#max_count]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#learn-all_crafts","title":"learn all_crafts","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Learn all professions and recipes</p> <pre><code>.learn crafts\n</code></pre>"},{"location":"cmangos-classic/config/commands/#learn-all_default","title":"learn all_default","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Learn for selected/$playername player all default spells for his race/class and spells rewarded by completed quests</p> <pre><code>.learn all_default [$playername]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#learn-all_gm","title":"learn all_gm","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Learn all default spells for Game Masters</p> <pre><code>.learn all_gm\n</code></pre>"},{"location":"cmangos-classic/config/commands/#learn-all_lang","title":"learn all_lang","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Learn all language</p> <pre><code>.learn all_lang\n</code></pre>"},{"location":"cmangos-classic/config/commands/#list-talents","title":"list talents","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Show list all really known (as learned spells) talent rank spells for selected player or self</p> <pre><code>.list talents\n</code></pre>"},{"location":"cmangos-classic/config/commands/#loadscripts","title":"loadscripts","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Unload current and load the script library $scriptlibraryname or reload current if $scriptlibraryname omitted,in case you changed it while the server was running</p> <pre><code>.loadscripts $scriptlibraryname\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-creature","title":"lookup creature","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Looks up a creature by $namepart,and returns all matches with their creature IDs</p> <pre><code>.lookup creature $namepart\n</code></pre>"},{"location":"cmangos-classic/config/commands/#learn-all_recipes","title":"learn all_recipes","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Learns all recipes of specified profession and sets skill level to max. Example .learn all_recipes enchantin</p> <pre><code>.learn all_recipes [$profession]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-faction","title":"lookup faction","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Attempts to find the ID of the faction with the provided $name</p> <pre><code>.lookup faction $name\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-item","title":"lookup item","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Looks up an item by $itemname,and returns all matches with their Item IDs</p> <pre><code>.lookup item $itemname\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-itemset","title":"lookup itemset","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Looks up an item set by $itemname,and returns all matches with their Item set IDs</p> <pre><code>.lookup itemset $itemname\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-object","title":"lookup object","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Looks up an gameobject by $objname,and returns all matches with their Gameobject IDs</p> <pre><code>.lookup object $objname\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-quest","title":"lookup quest","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Looks up a quest by $namepart,and returns all matches with their quest IDs</p> <pre><code>.lookup quest $namepart\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-skill","title":"lookup skill","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Looks up a skill by $namepart,and returns all matches with their skill IDs</p> <pre><code>.lookup skill $$namepart\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-spell","title":"lookup spell","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Looks up a spell by $namepart,and returns all matches with their spell IDs</p> <pre><code>.lookup spell $namepart\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-account-email","title":"lookup account email","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Searchs accounts,w hich email including $emailpart with optional parametr #limit of results. If #limit not provided expected 100</p> <pre><code>.lookup account email $emailpart [\\#limit]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-account-ip","title":"lookup account ip","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Searchs accounts,which last used ip inluding $ippart (textual) with optional parametr #$limit of results. If #limit not provided expected 100</p> <pre><code>lookup account ip $ippart [\\#limit]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-account-name","title":"lookup account name","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Searchs accounts,which username including $accountpart with optional parametr #limit of results. If #limit not provided expected 100</p> <pre><code>.lookup account name $accountpart [\\#limit]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-area","title":"lookup area","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Looks up an area by $namepart,and returns all matches with their area IDs</p> <pre><code>.lookup area $namepart\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-taxinode","title":"lookup taxinode","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Search and output all taxinodes with provide $substring in name</p> <pre><code>.lookup taxinode $substring\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-event","title":"lookup event","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Attempts to find the ID of the event with the provided $name</p> <pre><code>.lookup event $name\n</code></pre>"},{"location":"cmangos-classic/config/commands/#maxskill","title":"maxskill","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Sets all skills of the targeted player to their maximum VALUESfor its current level</p> <pre><code>.maxskill\n</code></pre>"},{"location":"cmangos-classic/config/commands/#movegens","title":"movegens","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Show movement generators stack for selected creature or player</p> <pre><code>.movegens\n</code></pre>"},{"location":"cmangos-classic/config/commands/#neargrave","title":"neargrave","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Find nearest graveyard linked to zone (or only nearest from accepts alliance or horde faction ghosts)</p> <pre><code>.neargrave [alliance|horde]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-addweapon","title":"npc addweapon","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Not yet implemented</p> <pre><code>.npc addweapon\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-player-account","title":"lookup player account","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Searchs players,which account username including $accountpart with optional parametr #limit of results. If #limit not provided expected 100</p> <pre><code>.lookup player account $accountpart [\\#limit]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-player-email","title":"lookup player email","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Searchs players,which account email including $emailpart with optional parametr #limit of results. If #limit not provided expected 100</p> <pre><code>.lookup player email $emailpart [\\#limit]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-player-ip","title":"lookup player ip","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Searchs players,which account last used ip inluding $ippart (textual) with optional parametr #limit of results. If #limit not provided expected 100</p> <pre><code>.lookup player ip $ippart [\\#limit]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-pool","title":"lookup pool","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>List of pools (anywhere) with substring in description</p> <pre><code>.lookup pool $pooldescpart\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-allowmove","title":"npc allowmove","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Enable or disable movement creatures in world. Not implemented</p> <pre><code>.npc allowmove\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-info","title":"npc info","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Display a list of details for the selected creature.The list includes:- GUID,Faction,NPC flags,Entry ID,Model ID,- Level,- Health (current/maximum),- Field flags,dynamic flags,faction template,- Position information,- and the creature type,e.g. if the creature is a vendor.</p> <pre><code>.npc info\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-playemote","title":"npc playemote","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Make the selected creature emote with an emote of id #emoteid</p> <pre><code>.npc playemote \\#emoteid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#pdump-load","title":"pdump load","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Load character dump from dump file into character list of $account with saved or $newname,with saved (or first free) or $newguid guid</p> <pre><code>.pdump load $filename $account [$newname] [$newguid]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#lookup-tele","title":"lookup tele","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Search and output all .tele command locations with provide $substring in name</p> <pre><code>.lookup tele $substring\n</code></pre>"},{"location":"cmangos-classic/config/commands/#pdump-write","title":"pdump write","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Write character dump with name/guid $playerNameOrGUID to file $filename</p> <pre><code>.pdump write $filename $playerNameOrGUID\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-aspeed","title":"modify aspeed","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Modify all speeds -run,swim,run back,\"swim back- of the selected player to \\normalbase speed for this move type__*rate. If no player is selected\",\"modify your speed. #rate may range from 0.1 to 10._'\"</p> <pre><code>.modify aspeed \\#rate\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-bwalk","title":"modify bwalk","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Modify the speed of the selected player while running backwards to \\normal walk back speed__*rate. If no player is selected\",\"modify your speed. #rate may range from 0.1 to 10._'\"</p> <pre><code>.modify bwalk \\#rate\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-drunk","title":"modify drunk","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Set drunk level to #value (0..100). Value 0 remove drunk state,100 is max drunked state</p> <pre><code>.modify drunk \\#value\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-energy","title":"modify energy","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Modify the energy of the selected player. If no player is selected,modify your energy</p> <pre><code>.modify energy \\#energy\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-faction","title":"modify faction","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Modify the faction and flags of the selected creature. Without arguments,display the faction and flags of the selected creature</p> <pre><code>.modify faction \\#factionid \\#flagid \\#npcflagid \\#dynamicflagid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-gender","title":"modify gender","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Change gender of selected player</p> <pre><code>.modify gender male/female\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-honor","title":"modify honor","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Add $value to an honor $field (its just for debug,values wont be saved at player logout)Field list points / rank / todaykills / yesterdaykills / yesterdayhonor /thisweekkills / thisweekhonor / lastweekkills / lastweekhonor /lastweekstanding / lifetimedishonorablekills / lifetimehonorablekills</p> <pre><code>.modify honor $field $value\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-hp","title":"modify hp","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Modify the hp of the selected player. If no player is selected,modify your hp</p> <pre><code>.modify hp \\#newhp\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-mana","title":"modify mana","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Modify the mana of the selected player. If no player is selected,modify your mana</p> <pre><code>.modify mana \\#newmana\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-money","title":"modify money","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Add or remove money to the selected player. If no player is selected,modify your money. #gold can be negative to remove money</p> <pre><code>.modify money \\#money.money \\#money\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-morph","title":"modify morph","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Change your current model id to #displayid</p> <pre><code>.modify morph \\#displayid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-mount","title":"modify mount","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Display selected player as mounted at #id creature and set speed to #speed value</p> <pre><code>.modify mount \\#id \\#speed\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-rage","title":"modify rage","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Modify the rage of the selected player. If no player is selected,modify your rage</p> <pre><code>.modify rage \\#newrage\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-rep","title":"modify rep","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Sets the selected players reputation with faction #repId to #repvalue or to $reprank.If the reputation rank name is provided,the resulting reputation will be the lowest reputation for that rank plus the delta amount,if specified.You can use .pinfo rep to list all known reputation ids,or use .lookup faction $name to locate a specific faction id</p> <pre><code>.modify rep \\#repId (\\#repvalue | $rankname [\\#delta])\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-scale","title":"modify scale","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Change model scale for targeted player (util relogin) or creature (until respawn)</p> <pre><code>.modify scale \\#scale\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-speed","title":"modify speed","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Modify the running speed of the selected player to \\normal base run speed__*rate. If no player is selected\",\"modify your speed. #rate may range from 0.1 to 10._'\"</p> <pre><code>.modify speed \\#rate.speed \\#rate\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-standstate","title":"modify standstate","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Change the emote of your character while standing to #emoteid</p> <pre><code>.modify standstate \\#emoteid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#modify-swim","title":"modify swim","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Modify the swim speed of the selected player to \\normal swim speed__*rate. If no player is selected\",\"modify your speed. #rate may range from 0.1 to 10._'\"</p> <pre><code>.modify swim \\#rate\n</code></pre>"},{"location":"cmangos-classic/config/commands/#quest-add","title":"quest add","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Add to character quest log quest #quest_id. Quest started from item cant be added by this command but correct .additem call provided in command output</p> <pre><code>.quest add \\#quest_id\n</code></pre>"},{"location":"cmangos-classic/config/commands/#mute","title":"mute","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Disable chat messaging for any character from account of character $playerName (or currently selected) at $timeInMinutes minutes. Player can be offline</p> <pre><code>.mute [$playerName] $timeInMinutes\n</code></pre>"},{"location":"cmangos-classic/config/commands/#namego","title":"namego","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport the given character to you. Character can be offline</p> <pre><code>.namego [$charactername]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#quest-complete","title":"quest complete","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Mark all quest objectives as completed for target character active quest. After this target character can go and get quest reward</p> <pre><code>.quest complete \\#questid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#notify","title":"notify","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Send a global message to all players online in screen</p> <pre><code>.notify $MessageToBroadcast\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-add","title":"npc add","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Spawn a creature by the given template id of #creatureid</p> <pre><code>.npc add \\#creatureid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-additem","title":"npc additem","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Add item #itemid to item list of selected vendor. Also optionally set max count item in vendor item list and time to item count restoring</p> <pre><code>.npc additem \\#itemId &lt;\\#maxcount&gt;&lt;\\#incrtime&gt;\n</code></pre>"},{"location":"cmangos-classic/config/commands/#quest-remove","title":"quest remove","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set quest #quest_id state to not completed and not active (and remove from active quest list) for selected player</p> <pre><code>.quest remove \\#quest_id\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-aiinfo","title":"npc aiinfo","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Show npc AI and script information</p> <pre><code>.npc npc aiinfo\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reload-all","title":"reload all","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reload all tables with reload support added and that can be safe reloaded</p> <pre><code>.reload all\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-changelevel","title":"npc changelevel","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Change the level of the selected creature to #level.#level may range from 1 to 63</p> <pre><code>.npc changelevel \\#level\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-delete","title":"npc delete","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Delete creature with guid #guid (or the selected if no guid is provided</p> <pre><code>.npc delete [\\#guid]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-delitem","title":"npc delitem","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Remove item #itemid from item list of selected vendor</p> <pre><code>.npc delitem \\#itemId\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-factionid","title":"npc factionid","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Set the faction of the selected creature to #factionid</p> <pre><code>.npc factionid \\#factionid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-flag","title":"npc flag","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Set the NPC flags of creature template of the selected creature and selected creature to #npcflag. NPC flags will applied to all creatures of selected creature template after server restart or grid unload/load</p> <pre><code>.npc flag \\#npcflag\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-follow","title":"npc follow","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Selected creature start follow you until death/fight/etc</p> <pre><code>.npc follow\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reload-all_area","title":"reload all_area","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reload all <code>areatrigger_*</code> tables if reload support added for this table and this table can be safe reloaded</p> <pre><code>.reload all_area\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-move","title":"npc move","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Move the targeted creature spawn point to your coordinates</p> <pre><code>.npc move [\\#creature_guid]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-name","title":"npc name","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Change the name of the selected creature or character to $name.Command disabled</p> <pre><code>.npc name $name\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reload-all_eventai","title":"reload all_eventai","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reload <code>creature_ai_*</code> tables if reload support added for these tables and these tables can be safe reloaded</p> <pre><code>.reload all_eventai\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-say","title":"npc say","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Make the selected npc says #text</p> <pre><code>.npc say \\#text\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-setdeathstate","title":"npc setdeathstate","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Set default death state (dead/alive) for npc at spawn</p> <pre><code>.npc setdeathstate on/off\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-setmodel","title":"npc setmodel","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Change the model id of the selected creature to #displayid</p> <pre><code>.npc setmodel \\#displayid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-setmovetype","title":"npc setmovetype","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Set for creature pointed by #creature_guid (or selected if #creature_guid not provided) movement type and move it to respawn position (if creature alive). Any existing waypoints for creature will be removed from the database if you do not use NODEL. If the creature is dead then movement type will applied at creature respawn.Make sure you use NODEL,if you want to keep the waypoints</p> <pre><code>.npc setmovetype [\\#creature_guid] stay/random/way [NODEL]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-spawndist","title":"npc spawndist","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Adjust spawndistance of selected creature to dist</p> <pre><code>.npc spawndist \\#dist\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-spawntime","title":"npc spawntime","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Adjust spawntime of selected creature to time</p> <pre><code>.npc spawntime \\#time\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-subname","title":"npc subname","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Change the subname of the selected creature or player to $Name.Command disabled</p> <pre><code>.npc subname $Name\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-tame","title":"npc tame","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Tame selected creature (tameable non pet creature). You dont must have pet</p> <pre><code>.npc tame\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-textemote","title":"npc textemote","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Make the selected creature to do textemote with an emote of id #emoteid</p> <pre><code>.npc textemote \\#emoteid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-unfollow","title":"npc unfollow","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Selected creature (non pet) stop follow you</p> <pre><code>.npc unfollow\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-whisper","title":"npc whisper","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Make the selected npc whisper #text to  #playerguid</p> <pre><code>.npc whisper \\#playerguid \\#text\n</code></pre>"},{"location":"cmangos-classic/config/commands/#npc-yell","title":"npc yell","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Make the selected npc yells #text</p> <pre><code>.npc yell \\#text\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reload-all_item","title":"reload all_item","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reload <code>item_required_target</code>,<code>page_texts</code> and <code>item_enchantment_template</code> tables</p> <pre><code>.reload all_item\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reload-all_locales","title":"reload all_locales","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reload all <code>locales_*</code> tables with reload support added and that can be safe reloaded</p> <pre><code>.reload all_locales\n</code></pre>"},{"location":"cmangos-classic/config/commands/#pinfo","title":"pinfo","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Output account information for selected player or player find by $player_name</p> <pre><code>.pinfo [$player_name]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#pool","title":"pool","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Pool information and full list creatures/gameobjects included in pool</p> <pre><code>.pool \\#pool_id\n</code></pre>"},{"location":"cmangos-classic/config/commands/#pool-list","title":"pool list","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>List of pools with spawn in current map (only work in instances. Non-instanceable maps share pool system state os useless attempt get all pols at all continents</p> <pre><code>.pool list\n</code></pre>"},{"location":"cmangos-classic/config/commands/#pool-spawns","title":"pool spawns","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>List current creatures/objects listed in pools (or in specific #pool_id) and spawned (added to grid data,not meaning show in world</p> <pre><code>.pool spawns \\#pool_id\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reload-all_loot","title":"reload all_loot","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reload all <code>*_loot_template</code> tables. This can be slow operation with lags for server run</p> <pre><code>.reload all_loot\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reload-all_npc","title":"reload all_npc","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reload <code>points_of_interest</code> and <code>npc_*</code> tables if reload support added for these tables and these tables can be safe reloaded</p> <pre><code>.reload all_npc\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reload-all_quest","title":"reload all_quest","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reload all quest related tables if reload support added for this table and this table can be safe reloaded</p> <pre><code>.reload all_quest\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reload-all_scripts","title":"reload all_scripts","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reload <code>dbscripts_on_*</code> tables</p> <pre><code>.reload all_scripts\n</code></pre>"},{"location":"cmangos-classic/config/commands/#recall","title":"recall","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport $playername or selected player to the place where he has been before last use of a teleportation command. If no $playername is entered and no player is selected,it will teleport you</p> <pre><code>.recall [$playername]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reload-all_spell","title":"reload all_spell","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reload all <code>spell_*</code> tables with reload support added and that can be safe reloaded</p> <pre><code>.reload all_spell\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reload-config","title":"reload config","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reload config settings (by default stored in mangosd.conf). Not all settings can be change at reload some new setting values will be ignored until restart,some values will applied with delay or only to new objects/maps,some values will explicitly rejected to change at reload</p> <pre><code>.reload config\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reset-all","title":"reset all","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Request reset spells or talents at next login each existed character</p> <pre><code>.reset all [spells|talents]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reset-honor","title":"reset honor","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reset all honor data for targeted character</p> <pre><code>.reset honor [Playername]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reset-level","title":"reset level","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reset level to 1 including reset stats and talents.  Equipped items with greater level requirement can be lost</p> <pre><code>.reset level [Playername]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reset-spells","title":"reset spells","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Removes all non-original spells from spellbook.. Playername can be name of offline character</p> <pre><code>.reset spells [Playername]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reset-stats","title":"reset stats","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Resets(recalculate) all stats of the targeted player to their original VALUESat current level</p> <pre><code>.reset stats [Playername]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#reset-talents","title":"reset talents","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Removes all talents of the targeted player. Playername can be name of offline character</p> <pre><code>.reset talents [Playername]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#respawn","title":"respawn","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Respawn selected creature or respawn all nearest creatures (if none selected) and GO without waiting respawn time expiration</p> <pre><code>.respawn\n</code></pre>"},{"location":"cmangos-classic/config/commands/#revive","title":"revive","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Revive the selected player. If no player is selected,it will revive you</p> <pre><code>.revive\n</code></pre>"},{"location":"cmangos-classic/config/commands/#send-items","title":"send items","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Send a mail to a player. Subject and mail text must be in ____. If for itemid not provided related count values then expected 1\",\"if count &gt; max items in stack then items will be send in required amount stacks. All stacks amount in mail limited to 12._'\"</p> <pre><code>.send items \\#playername \\#subject__ __\\#text__ itemid1[:count1] itemid2[:count2] ... itemidN[:countN]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#repairitems","title":"repairitems","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Repair all selected players items</p> <pre><code>.repairitems\n</code></pre>"},{"location":"cmangos-classic/config/commands/#send-mass-items","title":"send mass items","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Send a mail to players. Subject and mail text must be in __. If for itemid not provided related count values then expected 1\",if count &gt; max items in stack then items will be send in required amount stacks. All stacks amount in mail limited to 12</p> <pre><code>.send mass items \\#racemask|$racename|alliance|horde|all _\\#subject_ _\\#text_ itemid1[:count1] itemid2[:count2] ... itemidN[:countN]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#send-mass-mail","title":"send mass mail","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Send a mail to players. Subject and mail text must be in __</p> <pre><code>.send mass mail \\#racemask|$racename|alliance|horde|all _\\#subject_ _\\#text_\n</code></pre>"},{"location":"cmangos-classic/config/commands/#send-mass-money","title":"send mass money","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Send mail with money to players. Subject and mail text must be in __</p> <pre><code>.send mass money \\#racemask|$racename|alliance|horde|all _\\#subject_ _\\#text_ \\#money\n</code></pre>"},{"location":"cmangos-classic/config/commands/#send-message","title":"send message","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Send screen message to player from ADMINISTRATOR</p> <pre><code>.send message $playername $message\n</code></pre>"},{"location":"cmangos-classic/config/commands/#send-money","title":"send money","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Send mail with money to a player. Subject and mail text must be in ____._'\"</p> <pre><code>.send money \\#playername \\#subject__ __\\#text__ \\#money\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-idlerestart","title":"server idlerestart","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Restart the server after #delay seconds if no active connections are present (no players). Use #exist_code or 2 as program exist code</p> <pre><code>.server idlerestart \\#delay\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-idlerestart-cancel","title":"server idlerestart cancel","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Cancel the restart/shutdown timer if any</p> <pre><code>.server idlerestart cancel\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-idleshutdown","title":"server idleshutdown","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Shut the server down after #delay seconds if no active connections are present (no players). Use #exist_code or 0 as program exist code</p> <pre><code>.server idleshutdown \\#delay [\\#exist_code]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#save","title":"save","text":"<ul> <li> Player Account Level</li> </ul> <p>Saves your character</p> <pre><code>.save\n</code></pre>"},{"location":"cmangos-classic/config/commands/#saveall","title":"saveall","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Save all characters in game</p> <pre><code>.saveall\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-idleshutdown-cancel","title":"server idleshutdown cancel","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Cancel the restart/shutdown timer if any</p> <pre><code>.server idleshutdown cancel\n</code></pre>"},{"location":"cmangos-classic/config/commands/#send-mail","title":"send mail","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Send a mail to a player. Subject and mail text must be in quotations.</p> <pre><code>.send mail \\#playername \\#subject__ __\\#text__\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-plimit","title":"server plimit","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Without arg show current player amount and security level limitations for login to server,with arg set player linit ($num &gt; 0) or securiti limitation ($num &lt; 0 or security leme name. With <code>reset</code> sets player limit to the one in the config fil</p> <pre><code>.server plimit [\\#num|-1|-2|-3|reset|player|moderator|gamemaster|administrator]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-restart","title":"server restart","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Restart the server after #delay seconds. Use #exist_code or 2 as program exist code</p> <pre><code>.server restart \\#delay\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-restart-cancel","title":"server restart cancel","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Cancel the restart/shutdown timer if any</p> <pre><code>.server restart cancel\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-set-motd","title":"server set motd","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set server Message of the day</p> <pre><code>.server set motd $MOTD\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-shutdown","title":"server shutdown","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Shut the server down after #delay seconds. Use #exit_code or 0 as program exit code</p> <pre><code>.server shutdown \\#delay [\\#exit_code]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-corpses","title":"server corpses","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Triggering corpses expire check in world</p> <pre><code>.server corpses\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-shutdown-cancel","title":"server shutdown cancel","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Cancel the restart/shutdown timer if any</p> <pre><code>.server shutdown cancel\n</code></pre>"},{"location":"cmangos-classic/config/commands/#setskill","title":"setskill","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set a skill of id #skill with a current skill value of #level and a maximum value of #max (or equal current maximum if not provide) for the selected character. If no character is selected,you learn the skill</p> <pre><code>.setskill \\#skill \\#level [\\#max]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#showarea","title":"showarea","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Reveal the area of #areaid to the selected character. If no character is selected,reveal this area to you</p> <pre><code>.showarea \\#areaid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#stable","title":"stable","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Show your pet stable</p> <pre><code>.stable\n</code></pre>"},{"location":"cmangos-classic/config/commands/#tele-add","title":"tele add","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Add current your position to .tele command target locations list with name $name</p> <pre><code>.tele add $name\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-info","title":"server info","text":"<ul> <li> Player Account Level</li> </ul> <p>Display server version and the number of connected players</p> <pre><code>.server info\n</code></pre>"},{"location":"cmangos-classic/config/commands/#tele-del","title":"tele del","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Remove location with name $name for .tele command locations list</p> <pre><code>.tele del $name\n</code></pre>"},{"location":"cmangos-classic/config/commands/#unaura","title":"unaura","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Remove aura due to spell #spellid from the selected Unit</p> <pre><code>.unaura \\#spellid\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-motd","title":"server motd","text":"<ul> <li> Player Account Level</li> </ul> <p>Show server Message of the day</p> <pre><code>.server motd\n</code></pre>"},{"location":"cmangos-classic/config/commands/#unban-account","title":"unban account","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Unban accounts for account name pattern</p> <pre><code>.unban account $Name\n</code></pre>"},{"location":"cmangos-classic/config/commands/#unban-character","title":"unban character","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Unban accounts for character name pattern</p> <pre><code>.unban character $Name\n</code></pre>"},{"location":"cmangos-classic/config/commands/#unban-ip","title":"unban ip","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Unban accounts for IP pattern</p> <pre><code>null\n</code></pre>"},{"location":"cmangos-classic/config/commands/#unlearn","title":"unlearn","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Unlearn for selected player a spell #spell.  If all provided then all ranks unlearned</p> <pre><code>.unlearn \\#spell [all]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#wchange","title":"wchange","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Set current weather to #weathertype with an intensity of #status.#weathertype can be 1 for rain,2 for snow,and 3 for sand. #status can be 0 for disabled,and 1 for enabled</p> <pre><code>.wchange \\#weathertype \\#status\n</code></pre>"},{"location":"cmangos-classic/config/commands/#wp-export","title":"wp export","text":"<ul> <li> Administrator Account Level</li> </ul> <p>Exports the creature waypoints to a file</p> <pre><code>.wp export [\\#creature_guid or Select a Creature] $filenam\n</code></pre>"},{"location":"cmangos-classic/config/commands/#account-create","title":"account create","text":"<ul> <li> Console Account Level</li> </ul> <p>Create an account with given $username and $password</p> <pre><code>.account create $username $password\n</code></pre>"},{"location":"cmangos-classic/config/commands/#account-delete","title":"account delete","text":"<ul> <li> Console Account Level</li> </ul> <p>Delete the account with given $username</p> <pre><code>.account delete $username\n</code></pre>"},{"location":"cmangos-classic/config/commands/#account-onlinelist","title":"account onlinelist","text":"<ul> <li> Console Account Level</li> </ul> <p>Displays a list of accounts currently active</p> <pre><code>.account onlinelist\n</code></pre>"},{"location":"cmangos-classic/config/commands/#start","title":"start","text":"<ul> <li> Player Account Level</li> </ul> <p>Teleport you to the starting area of your character</p> <pre><code>.start\n</code></pre>"},{"location":"cmangos-classic/config/commands/#taxicheat","title":"taxicheat","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Temporary grant access or remove to all taxi routes for the selected character. If no character is selected,hide or reveal all routes to you.Visited taxi nodes sill accessible after removing access</p> <pre><code>.taxicheat on/off\n</code></pre>"},{"location":"cmangos-classic/config/commands/#tele","title":"tele","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport player to a given location</p> <pre><code>.tele \\#location\n</code></pre>"},{"location":"cmangos-classic/config/commands/#account-set-gmlevel","title":"account set gmlevel","text":"<ul> <li> Console Account Level</li> </ul> <p>Set the access level for a given account ID,username or the account of a targeted character. #level may range from 0 to 3</p> <pre><code>.account set gmlevel [\\#accountId|$accountName] \\#level\n</code></pre>"},{"location":"cmangos-classic/config/commands/#account-set-password","title":"account set password","text":"<ul> <li> Console Account Level</li> </ul> <p>Change the accounts password for an account ID or username to $password</p> <pre><code>.account set password (\\#accountId|$accountName) $password $password\n</code></pre>"},{"location":"cmangos-classic/config/commands/#tele-group","title":"tele group","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport a selected player and his group members to a given location</p> <pre><code>.tele group\\#location\n</code></pre>"},{"location":"cmangos-classic/config/commands/#tele-name","title":"tele name","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Teleport the given character to a given location. Character can be offline</p> <pre><code>.tele name [\\#playername] \\#location\n</code></pre>"},{"location":"cmangos-classic/config/commands/#ticket","title":"ticket","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>on/off for GMs to show or not a new ticket directly,$character_name to show ticket of this character,#num to show ticket #num</p> <pre><code>.ticket on         .ticket off         .ticket \\#num         .ticket $character_name         .ticket respond \\#num $response         .ticket respond $character_name $response\n</code></pre>"},{"location":"cmangos-classic/config/commands/#trigger","title":"trigger","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Show detail infor about areatrigger with id #trigger_id or trigger id associated with shift-link. If areatrigger id or shift-link not provided then selected nearest areatrigger at current map</p> <pre><code>.trigger [\\#trigger_id|$trigger_shift-link|$trigger_target_shift-link]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#trigger-active","title":"trigger active","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Show list of areatriggers with activation zone including current character position</p> <pre><code>.trigger active\n</code></pre>"},{"location":"cmangos-classic/config/commands/#trigger-near","title":"trigger near","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Output areatriggers at distance #distance from player. If #distance not provided use 10 as default value</p> <pre><code>.trigger near [\\#distance]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#character-deleted-delete","title":"character deleted delete","text":"<ul> <li> Console Account Level</li> </ul> <p>Completely deletes the selected characters. If $name is supplied,only characters with that string in their name will be deleted,if #guid is supplied,only the character with that GUID will be deleted</p> <pre><code>.character deleted delete \\#guid|$name\n</code></pre>"},{"location":"cmangos-classic/config/commands/#character-deleted-old","title":"character deleted old","text":"<ul> <li> Console Account Level</li> </ul> <p>Completely deletes all characters with deleted time longer #keepDays. If #keepDays not provided the  used value from mangosd.conf option CharDelete.KeepDays. If referenced config option disabled (use 0 value) then command cant be used without #keepDays</p> <pre><code>.character deleted old [\\#keepDays]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#character-erase","title":"character erase","text":"<ul> <li> Console Account Level</li> </ul> <p>Delete character $name. Character finally deleted in case any deleting options</p> <pre><code>.character erase $name\n</code></pre>"},{"location":"cmangos-classic/config/commands/#quit","title":"quit","text":"<ul> <li> Console Account Level</li> </ul> <p>Close RA connection. Command must be typed fully (quit)</p> <pre><code>quit\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-exit","title":"server exit","text":"<ul> <li> Console Account Level</li> </ul> <p>Terminate mangosd NOW. Exit code 0</p> <pre><code>.server exit\n</code></pre>"},{"location":"cmangos-classic/config/commands/#unmute","title":"unmute","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Restore chat messaging for any character from account of character $playerName</p> <pre><code>.unmute $playerName\n</code></pre>"},{"location":"cmangos-classic/config/commands/#waterwalk","title":"waterwalk","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Set on/off waterwalk state for selected player</p> <pre><code>.waterwalk on/off\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-log-filter","title":"server log filter","text":"<ul> <li> Console Account Level</li> </ul> <p>Show or set server log filters. If used all then all filters will be set to on/off state</p> <pre><code>.server log filter [($filtername|all) (on|off)]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#whispers","title":"whispers","text":"<ul> <li> Moderator Account Level</li> </ul> <p>Enable/disable accepting whispers by GM from players. By default use mangosd.conf setting</p> <pre><code>.whispers on|off\n</code></pre>"},{"location":"cmangos-classic/config/commands/#wp-add","title":"wp add","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>Add a waypoint for a creature</p> <pre><code>.wp add [Selected Creature or dbGuid] [pathId [wpOrigin]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#server-log-level","title":"server log level","text":"<ul> <li> Console Account Level</li> </ul> <p>Show or set server log level (0 - errors only,1 - basic,2 - detail,3 - debug)</p> <pre><code>.server log level [\\#level]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#wp-modify","title":"wp modify","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>where command must be one of waittime  | scriptid | orientation | del | move. If no waypoint was selected,one can be chosen with dbGuid and id. The commands have the following meaning waittime (Set the time the npc will wait at a point (in ms))  scriptid (Set the DB-Script that will be executed when the wp is reached)  orientation (Set the orientation of this point)   del (Remove the waypoint from the path)  move (Move the wayoint to the current position of the player</p> <pre><code>.wp modify command [dbGuid,id] [value]\n</code></pre>"},{"location":"cmangos-classic/config/commands/#wp-show","title":"wp show","text":"<ul> <li> GameMaster Account Level</li> </ul> <p>For using info you have to do first show on and than select a Visual-Waypoint and do the show info! with pathId and wpOrigin you can specify which path to show (optional</p> <pre><code>.wp show command [dbGuid] [pathId [wpOrigin] ] where command can have one of the following values on (to show all related wp) first (to see only first one) last (to see only last one) off (to hide all related wp) info (to get more info about theses wp)\n</code></pre>"},{"location":"cmangos-classic/config/mangosd/","title":"MangosD Configuration Guide","text":""},{"location":"cmangos-classic/config/mangosd/#what-is-mangosdconf","title":"What is <code>mangosd.conf</code>?","text":"<p>The <code>mangosd.conf</code> file is the main configuration file for a Massive Network Game Object Servers (MaNGOS) server. It contains settings that control how the server operates, including server name, rates, logging, and more.</p> <p>Think of it as the \"control center\" for your emulator server: if you need to tweak gameplay rates or game data, you\u2019ll find the relevant settings here.</p>"},{"location":"cmangos-classic/config/mangosd/#example-configuration","title":"Example Configuration","text":"<p>The <code>mangosd.conf</code> is made available in the predefined git repositories, setting alongside a docker compose <code>compose.yaml</code>. These are \"mounted\" into the containers, making the configuration files available to the server.</p> <p>Below is a basic example of how the mounting of the <code>mangosd.conf</code> file into a Docker Compose container works:</p> <pre><code>services:\n  mangos:\n    image: thoriumlxc/mockserver:latest\n    volumes:\n      - ./mangosd.conf:/opt/mangos/mangosd.conf\n    # Additional environment variables or configurations can go here\n</code></pre> <p>This works by working relative to the path of the <code>compose.yaml</code> file. So if you file is located at <code>/some/path/to/file/compose.yaml</code>, then your file would be next it within the same directory at <code>/some/path/to/file/mangosd.conf</code></p> <pre><code>.\n\u251c\u2500\u2500 compose.yaml\n\u251c\u2500\u2500 mangosd.conf\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 realmd.conf\n</code></pre> <p>For Windows</p> <p>On Windows, these paths will be in the form of <code>C:\\some\\path\\to\\file\\</code>, as Windows uses <code>\\</code> and MacOS/Linux use <code>\\</code> for indicating paths. Most likely your path is somewhere in your home directory like <code>C:\\Users\\LocalUser\\ThoriumLXC</code>.</p>"},{"location":"cmangos-classic/config/mangosd/#configuration-options","title":"Configuration Options","text":"<p>Here are a few commonly used settings from the <code>mangosd.conf</code> file, as examples of what is within this file. You should look at each individual project for the specific project options.</p> Config Key Description <code>RealmID</code> A unique numeric identifier for your realm. If you have multiple realms, each needs a different ID. <code>DataDir</code> The file system path where your game data is stored. Example: <code>/usr/local/cmangos/data/</code> <code>WorldDatabaseInfo</code> The connection details for your World database. Includes host, port, username, password, and database name. Example: <code>127.0.0.1;3306;root;password;cmangos_world</code> <code>Rates.Health</code> Adjusts how quickly players regenerate health. A higher value means faster regeneration. <code>Rates.DropMoney</code> Controls how much gold creatures drop. A lower value decreases dropped gold; a higher value increases it."},{"location":"cmangos-classic/config/realmd/","title":"RealmD Configuration Guide","text":""},{"location":"cmangos-classic/config/realmd/#what-is-realmdconf","title":"What is <code>realmd.conf</code>","text":"<p>The <code>realmd.conf</code> file is the primary configuration file for the authentication server in the emulator server. It handles user logins and connections, specifying settings such as database connections, IP bindings, and security options.</p>"},{"location":"cmangos-classic/config/realmd/#example-configuration","title":"Example Configuration","text":"<p>The <code>realmd.conf</code> is made available in the predefined git repositories, setting alongside a docker compose <code>compose.yaml</code>. These are \"mounted\" into the containers, making the configuration files available to the server.</p> <p>Below is a basic example of how the mounting of the <code>realmd.conf</code> file into a Docker Compose container works:</p> <pre><code>services:\n  mangos:\n    image: thoriumlxc/mockserver:latest\n    volumes:\n      - ./realmd.conf:/opt/mangos/realmd.conf\n    # Additional environment variables or configurations can go here\n</code></pre> <p>This works by working relative to the path of the <code>compose.yaml</code> file. So if you file is located at <code>/some/path/to/file/compose.yaml</code>, then your file would be next it within the same directory at <code>/some/path/to/file/realmd.conf</code></p> <pre><code>.\n\u251c\u2500\u2500 compose.yaml\n\u251c\u2500\u2500 mangosd.conf\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 realmd.conf\n</code></pre> <p>For Windows</p> <p>On Windows, these paths will be in the form of <code>C:\\some\\path\\to\\file\\</code>, as Windows uses <code>\\</code> and MacOS/Linux use <code>\\</code> for indicating paths. Most likely your path is somewhere in your home directory like <code>C:\\Users\\LocalUser\\ThoriumLXC</code>.</p>"},{"location":"cmangos-classic/config/realmd/#configuration-options","title":"Configuration Options","text":"<p>Here are a few commonly used settings from the <code>realmd.conf</code> file, as examples of what is within this file. You should look at each individual project for the specific project options.</p> Config Key Description <code>LoginDatabaseInfo</code> Sets the database connection details for the authentication server. <code>ListenHost</code> Defines the IP address the server listens on. <code>ListenPort</code> Specifies the port for incoming connections. <code>MaxPingTime</code> Determines the maximum time to wait for client responses. <code>LogLevel</code> Controls the verbosity of logs for troubleshooting purposes."},{"location":"cmangos-tbc/client-data/","title":"Client Data","text":""},{"location":"cmangos-tbc/clients/","title":"Supported Clients","text":"<p>Supported Clients</p>"},{"location":"cmangos-tbc/installation/","title":"Installing cMaNGOS Classic","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"cmangos-tbc/installation/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"cmangos-tbc/installation/#sample-title","title":"Sample Title","text":"<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Ctrl+Alt+Del</p>"},{"location":"cmangos-tbc/installation/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"cmangos-tbc/overview/","title":"Getting Started with cMaNGOS TBC","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"cmangos-tbc/overview/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"cmangos-tbc/overview/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"cmangos-tbc/versions/","title":"Versions","text":"<p>Versions</p>"},{"location":"cmangos-tbc/bots/ahbot/","title":"AH Bots","text":"<p>The AHBot (Auction House Bot) in CMaNGOS is a built-in feature designed to simulate player-driven activity in the in-game Auction House. On single-player servers or servers with low populations, the Auction House can appear empty or stagnant, which detracts from the normal gameplay experience.</p> <p>AHBot helps address this by automatically posting auctions for a variety of items\u2014ranging from common consumables and crafting materials to high-level gear\u2014ensuring that players have a selection of goods to buy and sell. It can also purchase items listed by real players, injecting gold back into the economy and mimicking organic market demand.</p> <p>The behaviour of the bot can be configured within the <code>ahbot.conf</code> file, which will align the bot to the server's needs.</p> <p>For example, you can set the minimum and maximum quantity of items listed, define price ranges or bidding increments, and even designate which item categories are more frequently posted. You might tweak the bot to create a bustling market with plentiful resources for solo leveling characters, or limit the number of high-tier gear pieces to preserve a sense of rarity.</p>"},{"location":"cmangos-tbc/bots/ahbot/#configuration-options","title":"Configuration Options","text":"<p>Below is a table of the most common (and essential) AHBot-related configuration options found in this file. Note that some options appear multiple times for different item categories or rarities; each category can be customized independently using the same parameter names but with category and rarity suffixes (e.g., <code>AhBot.MaxAuctionCount.equip.blue</code>).</p> Option Description Example Values <code>AuctionHouseBot.Seller.Enabled</code> Enables or disables the old <code>AuctionHouseBot</code> (the legacy bot). Setting to <code>0</code> disables it. <code>0</code> (disabled) <code>1</code> (enabled) <code>AuctionHouseBot.Buyer.Enabled</code> Enables or disables the old <code>AuctionHouseBot</code> buyer logic. Also part of the legacy bot system. <code>0</code> (disabled) <code>1</code> (enabled) <code>AhBot.Enabled</code> Enables or disables the <code>new</code> AhBot system. <code>0</code> (disabled) <code>1</code> (enabled) <code>AhBot.MaxItemLevel</code> The maximum item level of items that AhBot is allowed to post or buy. <code>500</code> <code>AhBot.MaxRequiredLevel</code> The maximum required player level for items AhBot will list or purchase. <code>80</code> <code>AhBot.PriceMultiplier</code> A <code>global</code> pricing multiplier applied to all items (unless overridden by category-specific multipliers). This affects how much items are listed or bought for, relative to their default value. <code>0.35</code> (35% of default) Typical range: <code>0.1</code>\u2013<code>2.0</code> <code>AhBot.DefaultMinPrice</code> The fallback minimum price in copper (if the price calculation falls below this value). Helps avoid near-zero listings. <code>20</code> (which is actually 20 copper = 0.20 silver) <code>AhBot.PriceQualityMultiplier</code> Applies an additional multiplier based on item quality; if <code>1.0</code>, there is no added factor. Some server admins increase this to make higher-quality items more expensive. <code>1.0</code> (no change to prices) Could be <code>1.5</code>, <code>2.0</code>, etc. <code>AhBot.AlwaysAvailableMoney</code> How much gold (in copper) the bot can always access for buying items. If set high, the bot effectively never runs out of funds. <code>2000000</code> (20,000 gold) Any large integer <code>AhBot.SendMail</code> Determines whether the bot sends out mail (for instance, returning unsold items). <code>0</code> (off) <code>1</code> (on) <code>AhBot.ItemBuyMinInterval</code> The minimum time in seconds between the bot purchasing items of the same type/category. If commented out, defaults apply internally. <code>600</code> (10 minutes) <code>7200</code> (2 hours) <code>AhBot.ItemSellMinInterval</code> The minimum time in seconds between the bot posting items of the same type/category. <code>600</code> (10 minutes) <code>7200</code> (2 hours) <code>AhBot.ItemSellMaxInterval</code> The maximum time in seconds between the bot posting items of the same type/category. If random posting is used, this helps define the upper limit of time. <code>7200</code> (2 hours) <code>AhBot.MaxSellInterval</code> The maximum time in seconds the bot will wait before selling additional items (global cap). <code>28800</code> (8 hours) <p>Tip</p> <p>Values involving currency are in the lowest currency option, like <code>copper</code>. For example, <code>20</code> means 20 copper.</p>"},{"location":"cmangos-tbc/bots/ahbot/#category","title":"Category","text":"<p>Categories can be <code>equip</code>, <code>reagent</code>, <code>consumables</code>, <code>container</code>, <code>recipe</code>, <code>quest</code>, <code>devices</code>, <code>trade</code>.</p> Option Description Example Values <code>AhBot.MaxAuctionCount.&lt;category&gt;</code> The <code>maximum number</code> of items the bot can have on auction at one time for a given category. Typically broken down further by rarity suffix (<code>white</code>, <code>green</code>, <code>blue</code>, <code>epic</code>). <code>AhBot.MaxAuctionCount.equip.epic = 10</code> <code>AhBot.MaxAuctionCount.recipe.green = 4</code> <code>AhBot.MaxItemTypeCount.&lt;category&gt;</code> The <code>maximum number</code> of individual item types (of a certain rarity) in a category the bot can list concurrently. For example, limiting the total number of a specific blue item. <code>AhBot.MaxItemTypeCount.equip.blue = 5</code> <code>AhBot.MaxItemTypeCount.equip.epic = 2</code> <code>AhBot.PriceMultiplier.Sell.&lt;category&gt;</code> A <code>category-specific</code> multiplier for selling items. Multiplies the base price or global multiplier to adjust how much the bot charges when listing auctions in that category. <code>AhBot.PriceMultiplier.Sell.recipe = 5.0</code> <code>AhBot.PriceMultiplier.Sell.equip = 2.5</code> <code>AhBot.PriceMultiplier.Buy.&lt;category&gt;</code> A <code>category-specific</code> multiplier for buying items. Similar concept to <code>Sell</code> but for when the bot is purchasing player-posted items. <code>AhBot.PriceMultiplier.Buy.recipe = 5.0</code> <code>AhBot.PriceMultiplier.Buy.equip = 2.5</code> <code>AhBot.PricingStrategy.&lt;category&gt;</code> Determines how the bot approaches pricing for certain categories. For example, <code>buyOnlyRare</code> might prevent the bot from buying items below a certain rarity threshold. <code>AhBot.PricingStrategy.equip = buyOnlyRare</code> Other strategies depend on your core\u2019s code"},{"location":"cmangos-tbc/bots/playerbots/","title":"Playerbots","text":"<p>Playerbot is an optional feature in CMaNGOS that introduces AI-controlled \u201cplayer\u201d characters into the game world. These bots can function much like real players, forming or joining parties, helping with quests, running dungeons, and even using class-specific abilities. This is particularly valuable on servers with low population or for those who want to experience group-based content while playing single player.</p> <p>Playerbots aim to simulate player-like behavior as closely as possible, making the world feel more alive and offering a more dynamic leveling and endgame experience.</p> <p>Playerbots can be configured in many ways to tailor their behavior. For example, you might tweak how aggressively they pull mobs, what spells or abilities they prioritize, and whether they can follow certain quest lines automatically. You could decide how many bots can be active at once, define individual roles (tank, healer, DPS), and configure class-specific AI preferences to ensure each bot plays optimally.</p>"},{"location":"cmangos-tbc/bots/playerbots/#configuration-options","title":"Configuration Options","text":"<p>Below is a reference table summarizing the Playerbot configuration options. It is grouped by general categories as many options share a similar pattern (e.g., <code>AiPlayerbot.RandomBotXYZ</code>, <code>AiPlayerbot.PremadeSpecName.&lt;class&gt;.&lt;specno&gt;</code>, etc.), so rather than list every single line, the table focuses on the key config parameters, their purpose, and typical or example values.</p> <p>Tip</p> <p>Many configuration options exist based on <code>&lt;class&gt;</code> or <code>&lt;race&gt;</code>. This will appear one per class-race combination.</p> Class ID Race ID Warrior <code>1</code> Human <code>1</code> Paladin <code>2</code> Orc <code>2</code> Hunter <code>3</code> Dwarf <code>3</code> Rogue <code>4</code> Night Elf <code>4</code> Priest <code>5</code> Undead <code>5</code> Shaman <code>7</code> Tauren <code>6</code> Mage <code>8</code> Gnome <code>7</code> Warlock <code>9</code> Troll <code>8</code> Druid <code>11</code>"},{"location":"cmangos-tbc/bots/playerbots/#general-bot-activation-behavior","title":"General Bot Activation &amp; Behavior","text":"Option Description Example Values <code>AiPlayerbot.Enabled</code> Master switch to enable or disable the entire Playerbot system. <code>0</code> (disabled) or <code>1</code> (enabled) <code>AiPlayerbot.RandomBotAutologin</code> Allows random bots to automatically log in. <code>0</code> (off), <code>1</code> (on) <code>AiPlayerbot.RandomBotLoginAtStartup</code> If set, logs on all random bots at server startup. <code>0</code> or <code>1</code> <code>AiPlayerbot.BotAutologin</code> Auto-log in \u201calt\u201d bots on the same account when the player logs in. <code>0</code> (off), <code>1</code> or <code>2</code> (levels of automatic login) <code>AiPlayerbot.DeleteRandomBotAccounts</code> If <code>1</code>, deletes all random bot accounts on server start (clean slate). <code>0</code> or <code>1</code> <code>AiPlayerbot.MinRandomBots</code>/<code>MaxRandomBots</code> Minimum/maximum number of random bots that should be kept online. <code>1000</code> and <code>1000</code> (example); any positive integer <code>AiPlayerbot.RandomBotMinLevel</code>/<code>\u2026MaxLevel</code> Limits for the randomly generated bot levels. <code>1</code>\u2013<code>60</code>, for Classic <code>AiPlayerbot.RandomBotAccountPrefix</code> Prefix used when creating random bot accounts. <code>\"RNDBOT\"</code> <code>AiPlayerbot.RandomBotAccountCount</code> How many random bot accounts to create (if they do not already exist). <code>200</code> <code>AiPlayerbot.RandomBotQuestIds</code> Auto-completed or \u201cfree reward\u201d quests for random bots. E.g. <code>7848,3802,5505\u2026</code>"},{"location":"cmangos-tbc/bots/playerbots/#random-bot-loginlogout-management","title":"Random Bot Login/Logout Management","text":"Option Description Example Values <code>AiPlayerbot.RandomBotTimedLogout</code> If enabled, random bots log out automatically after <code>BotInWorldTime</code>. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotLoginWithPlayer</code> Log in some or all random bots when real players log in. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotMaps</code> Restricts or allows certain map IDs for random bot teleports/logins. <code>0,1,530,571</code> <code>AiPlayerbot.RandomBotGuildCount</code> How many random bot guilds to form. <code>20</code> <code>AiPlayerbot.DeleteRandomBotGuilds</code> If set to <code>1</code>, deletes all random bot guilds at startup. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotArenaTeamCount</code> How many random bot arena teams to create. <code>20</code> <code>AiPlayerbot.DeleteRandomBotArenaTeams</code> If set to <code>1</code>, deletes all random bot arena teams at startup. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotMaxLevelChance</code> Probability that a randomly generated bot spawns at the maximum level. <code>0.15</code> (15%), etc. <code>AiPlayerbot.RandomBotRpgChance</code> Probability that a bot chooses \u201cRPG\u201d (roleplay) mode instead of grinding. <code>0.20</code> (20%)"},{"location":"cmangos-tbc/bots/playerbots/#random-bot-creation-gear","title":"Random Bot Creation &amp; Gear","text":"Option Description Example Values <code>AiPlayerbot.RandomBotAutoCreate</code> Automatically create random bot characters if they do not exist. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotRandomLevels</code> / <code>DisableRandomLevels</code> If disabled, random bots start at a fixed level (you can specify) and then level up normally. <code>0</code> (allow random levels), <code>1</code> (disable random levels) <code>AiPlayerbot.randombotStartingLevel</code> If \u201cDisableRandomLevels=1,\u201d sets the default starting level for bots. e.g., <code>5</code>, <code>10</code> <code>AiPlayerbot.RandomGearMaxLevel</code> Maximum item level used in random gear generation for bots. <code>500</code>, or other large number <code>AiPlayerbot.RandomGearMaxDiff</code> Max difference between bot level and the item\u2019s required level. <code>9</code> (default) <code>AiPlayerbot.RandomGearAutoCreate</code> / <code>RandomGearUpgradeEnabled</code> Allow or disallow the system to periodically upgrade random bot gear for their level. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomGearBlacklist</code> List of item IDs that bots should never equip from the random gear system. e.g. <code>0</code>, or comma-separated list of item IDs <code>AiPlayerbot.RandomGearCountChangeMinInterval</code> Interval in seconds controlling how often random gear (or random gear sets) can change for bots. <code>7200</code> (2 hours), etc."},{"location":"cmangos-tbc/bots/playerbots/#class-race-probability","title":"Class &amp; Race Probability","text":"Option Description Example Values <code>AiPlayerbot.ClassRaceProb.&lt;class&gt;.&lt;race&gt;</code> Controls how likely the system is to generate a bot of a given class and race combo. E.g. <code>AiPlayerbot.ClassRaceProb.1.1 = 40</code> <code>AiPlayerbot.LevelProbability.&lt;level&gt;</code> Probability distribution for each possible level the bot can spawn at (relative weighting). <code>AiPlayerbot.LevelProbability.60 = 100</code> Notes The system uses these probabilities to decide how many random bots of each race/class/level appear in the world. -"},{"location":"cmangos-tbc/bots/playerbots/#lfg-battlegrounds-arena","title":"LFG / Battlegrounds / Arena","text":"Option Description Example Values <code>AiPlayerbot.RandomBotJoinLfg</code> Random bots will sign up for the LFG system. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotJoinBG</code> Random bots can queue/join battlegrounds. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotAutoJoinBG</code> If nonzero, bots automatically join BG queues under certain conditions (e.g., if not lagging). <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotArenaTeamCount</code> Number of arena teams formed by random bots. <code>20</code>"},{"location":"cmangos-tbc/bots/playerbots/#movement-rpg-combat-behavior","title":"Movement, RPG, &amp; Combat Behavior","text":"Option Description Example Values <code>AiPlayerbot.SightDistance</code> How far bots can see/scan for targets (in yards). <code>60.0</code> (default example) <code>AiPlayerbot.SpellDistance</code> Range for casting spells if a bot is a caster. <code>26.0</code> <code>AiPlayerbot.ShootDistance</code> Distance for ranged attacks if the bot has ranged ability. <code>26.0</code> <code>AiPlayerbot.ReactDelay</code> Delay (in milliseconds) before a bot reacts to an event. <code>100</code> (default) <code>AiPlayerbot.PassiveDelay</code> If inactive for this many ms, the bot acts passively or stops. <code>10000</code> <code>AiPlayerbot.RpgDelay</code> Typical delay in ms for certain \u201cRPG\u201d interactions. <code>10000</code> <code>AiPlayerbot.JumpNoCombatChance</code> Probability that a non-combat bot occasionally jumps around while moving. <code>0.50</code> (50%), etc. <code>AiPlayerbot.JumpMeleeInCombatChance</code> Probability that a melee-range bot uses jump tactics in combat. <code>0.50</code>, etc. <code>AiPlayerbot.FleeingEnabled</code> If <code>1</code>, bots may flee when low on health. <code>0</code> or <code>1</code>"},{"location":"cmangos-tbc/bots/playerbots/#bot-ai-strategies-commands","title":"Bot AI Strategies &amp; Commands","text":"Option Description Example Values <code>AiPlayerbot.AutoPickReward</code> Governs how bots handle quest reward pickups: <code>yes</code>, <code>no</code>, or <code>ask</code>. <code>yes</code>, <code>no</code>, or <code>ask</code> <code>AiPlayerbot.AutoEquipUpgradeLoot</code> Whether bots automatically equip better loot they find. <code>0</code> (off) or <code>1</code> (on) <code>AiPlayerbot.AutoTrainSpells</code> How bots automatically train spells from trainers. <code>yes</code>, <code>no</code>, or <code>free</code>. <code>\"yes\"</code> = normal training, <code>\"free\"</code> = no gold cost, <code>\"no\"</code> = manual <code>AiPlayerbot.AutoPickTalents</code> Whether (and how) bots choose talents automatically. <code>no</code>, <code>semi</code>, or <code>full</code> <code>AiPlayerbot.AutoDoQuests</code> If <code>1</code>, random bots pick up and try to do random quests on their own. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotCombatStrategies</code> Default AI strategy tags for random bots in combat (e.g. <code>+dps</code>,<code>-threat</code>, etc.). <code>+dps, +dps assist, -threat</code>, etc. <code>AiPlayerbot.RandomBotNonCombatStrategies</code> Default non-combat AI strategies (e.g. <code>+grind</code>, <code>+rpg</code>). <code>+rpg, +loot, +custom::say</code> <code>AiPlayerbot.UseKnockback</code> If <code>1</code>, knockback spells/abilities can affect bots. <code>0</code> or <code>1</code> <code>AiPlayerbot.EnableGreet</code> Bots greet real players or do certain emotes upon meeting. <code>0</code> or <code>1</code> <code>AiPlayerbot.EnableBroadcasts</code> Toggles whether bots broadcast events (looting items, leveling up, killing mobs) in chat channels. <code>0</code> or <code>1</code> <code>AiPlayerbot.LLMEnabled</code> / <code>LLMApiEndpoint</code> etc. (Experimental) integration with large language models for more immersive AI chat. Varies\u2014used for custom AI endpoints"},{"location":"cmangos-tbc/bots/playerbots/#pre-made-talent-builds-premadespec","title":"Pre-Made Talent Builds (PremadeSpec)","text":"Option Description Example Values <code>AiPlayerbot.PremadeSpecName.&lt;class&gt;.&lt;spec&gt;</code> The display name for a pre-configured talent build. e.g. <code>AiPlayerbot.PremadeSpecName.4.0 = pve dps assasination</code> <code>AiPlayerbot.PremadeSpecProb.&lt;class&gt;.&lt;spec&gt;</code> Probability that a bot picks that premade specialization (if multiple specs exist). <code>100</code>, <code>80</code>, etc. <code>AiPlayerbot.PremadeSpecLink.&lt;class&gt;.&lt;spec&gt;.&lt;level&gt;</code> Actual talent-tree path (encoded) for the bot. The bot invests points along this path as it levels. e.g. <code>005302105041</code> or <code>30305001302\u2026</code> (talent link strings) Usage These lines help the bot auto-assign talents in a more \u201cbuild-aware\u201d manner. -"},{"location":"cmangos-tbc/bots/playerbots/#gear-progression-system","title":"Gear Progression System","text":"Option Description Example Values <code>AiPlayerbot.GearProgressionSystem.Enable</code> Master switch for the gear progression system that upgrades bots\u2019 gear as players progress. <code>0</code> (off) or <code>1</code> (on) <code>AiPlayerbot.GearProgressionSystem.X.MinItemLevel</code>/<code>MaxItemLevel</code> Defines item-level brackets. For instance, \u201c0\u201d bracket is base gear; \u201c1\u201d bracket is pre-raid, etc. e.g. <code>AiPlayerbot.GearProgressionSystem.1.MinItemLevel = 50</code> <code>AiPlayerbot.GearProgressionSystem.X.Class.Spec.Slot</code> Item IDs for each slot of that bracket. The system automatically upgrades a bot\u2019s equipment to these IDs. e.g. <code>AiPlayerbot.GearProgressionSystem.0.1.0.0 = 20521</code> Usage Lets you specify exactly what gear bots get at certain gear \u201ctiers.\u201d -"},{"location":"cmangos-tbc/bots/playerbots/#other-notable-settings","title":"Other Notable Settings","text":"Option Description Example Values <code>AiPlayerbot.SendMail</code> Whether bots can send mail (like returning unsold items). <code>0</code> or <code>1</code> <code>AiPlayerbot.ShowProgressBars</code> Displays a progress bar for random bot actions in console or logs. <code>0</code> or <code>1</code> <code>AiPlayerbot.FleeDistance</code> / <code>AiPlayerbot.TooCloseDistance</code> Distances controlling when bots flee or consider themselves too close to a target. E.g. <code>8.0</code> / <code>5.0</code> <code>AiPlayerbot.ImmuneSpellIds</code> Spell IDs that bots should be immune to. e.g. <code>19428</code> <code>AiPlayerbot.AllowGuildBots</code> Whether bots from your guild are allowed to be used. <code>0</code> or <code>1</code> <code>AiPlayerbot.AllowMultiAccountAltBots</code> If <code>1</code>, allows bots from other accounts in the same guild (not just the master\u2019s account). <code>0</code> or <code>1</code> <code>AiPlayerbot.PerfMonEnabled</code> Enables performance monitoring logs for the AI if needed. <code>0</code> or <code>1</code> <code>AiPlayerbot.RespawnModNeutral</code> / <code>\u2026Hostile</code> Accelerates or decelerates mob respawn rates around bots for neutral / hostile mobs. e.g. <code>10.0</code>, <code>5.0</code> <code>AiPlayerbot.GearScoreCheck</code> If nonzero, a bot compares the gear score of a potential group invite. <code>0</code> (off) or a numeric threshold <code>AiPlayerbot.LevelCheck</code> If nonzero, bots check level differences when grouping with real players. <code>30</code> (default)"},{"location":"cmangos-tbc/build/building/","title":"Builder Image","text":"<p>The Builder Image is the core component responsible for compiling the CMangos server. It handles the entire build process, from source code to final binary artifacts, ensuring consistency and reliability across different environments.</p>"},{"location":"cmangos-tbc/build/building/#what-is-the-builder-image","title":"What is the Builder Image?","text":"<p>The Builder Image:</p> <ul> <li>Runs the Build Process: Executes all steps required to compile CMangos.</li> <li>Includes a Specific Source Version: The source code is pre-baked into the image, ensuring version consistency.</li> <li>Relies on Build Deps: Uses fixed dependencies from the Build Deps image to maintain a stable build environment.</li> <li>Supports Customization: You can set environment variables or pass additional arguments when running the image with <code>docker run</code> to adjust the build process as needed.</li> </ul>"},{"location":"cmangos-tbc/build/building/#running-the-builder-image","title":"Running the Builder Image","text":"<p>To build CMangos using the Builder Image, you can run:</p> <pre><code>docker run -e BUILD_OPTION=optimized mockorg/cmangos-builder:2024.02.03-1\n</code></pre> <ul> <li><code>-e BUILD_OPTION=optimized</code> sets an environment variable that customizes the build.</li> <li><code>mockorg/cmangos-builder:2024.02.03-1</code> refers to the specific version of the Builder Image.</li> </ul> <p>After the build completes, the compiled artifacts are placed in an output directory inside the container. You can extract these artifacts by mounting a volume:</p> <pre><code>docker run -v $(pwd)/output:/output mockorg/cmangos-builder:2024.02.03-1\n</code></pre> <p>This command saves the build results to your local <code>output</code> folder.</p>"},{"location":"cmangos-tbc/build/building/#hermetic-builds-explained","title":"Hermetic Builds Explained","text":"<p>The Builder Image is designed to produce hermetic builds. But what does \"hermetic\" mean in this context?</p> <p>In simple terms:</p> <p>A hermetic build means that the build process is completely self-contained. It doesn\u2019t rely on anything outside of the Builder Image. This ensures that:</p> <ul> <li>Same Input = Same Output: No matter when or where you run the build, if the source code and settings are the same, the resulting binaries will be identical.</li> <li>No External Influence: The build isn\u2019t affected by your computer\u2019s settings, installed software, or even the current date and time.</li> <li>Predictable Results: Every build is like following a precise recipe\u2014no surprises.</li> </ul> <p>This is achieved by:</p> <ul> <li>Pre-baking the source code into the image.</li> <li>Using fixed dependencies from the Build Deps layer.</li> <li>Controlling the build environment strictly within Docker.</li> </ul>"},{"location":"cmangos-tbc/build/building/#why-hermetic-builds-matter","title":"Why Hermetic Builds Matter","text":"<ul> <li>Consistency: Developers and users get the same results every time.</li> <li>Reliability: Easier to debug because there are no hidden variables affecting the build.</li> <li>Security: Reduces risks from external changes, like updates to system libraries or tools.</li> </ul>"},{"location":"cmangos-tbc/build/building/#summary","title":"Summary","text":"<ul> <li>The Builder Image handles the full build process for CMangos.</li> <li>It uses pre-baked source code and fixed dependencies from the Build Deps image.</li> <li>You can customize builds with environment variables or arguments via <code>docker run</code>.</li> <li>Hermetic builds ensure that every build is consistent, reproducible, and reliable, no matter where or when it\u2019s run.</li> </ul>"},{"location":"cmangos-tbc/build/deps/","title":"Build Deps","text":"<p>The CMangos Docker image architecture follows a modular approach, breaking down the build process into distinct layers for consistency, reproducibility, and maintainability. A critical part of this architecture is the Build Deps layer, which manages the foundational build dependencies required to compile the CMangos server.</p>"},{"location":"cmangos-tbc/build/deps/#what-are-build-deps","title":"What are Build Deps?","text":"<p>Build Deps (short for Build Dependencies) refer to the essential system libraries, development tools, and other dependencies needed to build the CMangos project. These include:</p> <ul> <li>Standard Libraries (e.g., <code>libc</code>, <code>libssl</code>)</li> <li>Development Tools (e.g., <code>gcc</code>, <code>make</code>, <code>cmake</code>)</li> <li>Debian Packages required for compiling the source code</li> <li>Other system-level dependencies essential for the build process</li> </ul> <p>These dependencies are only used during the build phase and are not included in the final runtime image, keeping the production environment clean and lightweight.</p>"},{"location":"cmangos-tbc/build/deps/#deterministic-builds-with-bazel-and-rules-oci","title":"Deterministic Builds with Bazel and Rules OCI","text":"<p>To ensure that builds are deterministic\u2014meaning the same source code always produces the same output\u2014we use Bazel along with Rules OCI. This combination offers several advantages:</p> <ul> <li>Reproducibility: Regardless of when or where the build occurs, the output will be identical if the source code version remains the same.</li> <li>Version Control: Build dependencies are pinned to specific versions, eliminating inconsistencies from upstream package changes.</li> <li>Efficiency: Bazel\u2019s caching and precise dependency management speed up rebuilds, especially for minor changes.</li> </ul> <p>By leveraging Bazel and Rules OCI, we eliminate variables that could affect build outcomes, ensuring reliable results across development, testing, and production environments.</p>"},{"location":"cmangos-tbc/build/deps/#the-builder-image","title":"The Builder Image","text":"<p>The Builder image builds on top of the Build Deps layer. It contains everything required to compile the CMangos server, including:</p> <ul> <li>Pre-installed Build Deps: All necessary libraries and tools for building the source code.</li> <li>Build Scripts and Steps: Automated processes baked into the image to handle compilation.</li> <li>Environment Variables: Configurations required during the build process.</li> <li>Upstream Source Code: Integrated directly from official repositories for clean, version-controlled builds.</li> </ul> <p>The Builder image is solely responsible for the build process. It does not include runtime components, keeping it focused and optimized for its purpose.</p>"},{"location":"cmangos-tbc/build/deps/#how-it-all-fits-together","title":"How It All Fits Together","text":"<ol> <li>Build Deps Layer: Provides the foundational dependencies required to build CMangos.</li> <li>Builder Image: Utilizes the Build Deps layer to compile the server code and manage build configurations.</li> <li>Final Runtime Image: Contains only the compiled binaries and runtime dependencies, optimized for performance and minimal size.</li> </ol> <p>This layered architecture allows for greater flexibility, easier updates, and improved security by separating build tools from the final production environment.</p>"},{"location":"cmangos-tbc/build/deps/#summary","title":"Summary","text":"<ul> <li>Build Deps manage the critical dependencies required for building CMangos.</li> <li>Dependencies are installed using Bazel and Rules OCI for deterministic, reproducible builds.</li> <li>The Builder Image leverages Build Deps to execute build steps, manage environment variables, and integrate upstream source code.</li> <li>This modular design ensures clean, consistent builds and optimized runtime environments.</li> </ul>"},{"location":"cmangos-tbc/build/overview/","title":"High-Level Overview of the Image Build Pattern","text":"<p>The CMangos server is packaged using a carefully designed build pattern that ensures consistency, reliability, and ease of deployment. This pattern breaks the build process into distinct stages, with each stage focusing on a specific part of the process. By separating the build into layers, we can create clean, efficient, and predictable server images that are easy to manage and update.</p> <p>Think of this process like baking a cake:</p> <ul> <li>You gather your ingredients (dependencies).</li> <li>Mix and bake the cake (build the server).</li> <li>Remove the baking tools (runtime environment).</li> <li>Add the final decorations and packaging (final image ready to serve).</li> </ul> <p>Here\u2019s how this pattern works for CMangos:</p> <pre><code>flowchart TD\n    A[Build Deps Image] --&gt; B[Builder Image]\n    B --&gt;|Build Artifacts| D[Final Image]\n    C[Runtime Image] --&gt;|Runtime Dependencies| D\n\n    D --&gt; E[Deployment]\n\n    classDef deps stroke-width:2px;\n    classDef builder stroke-width:2px;\n    classDef runtime stroke-width:2px;\n    classDef final stroke-width:2px;\n\n    class A deps;\n    class B builder;\n    class C runtime;\n    class D final;\n</code></pre>"},{"location":"cmangos-tbc/build/overview/#the-four-layers-of-the-build-pattern","title":"The Four Layers of the Build Pattern","text":"<ol> <li> <p>Build Deps (Build Dependencies) Image    Think of this as your pantry of ingredients.    This image contains all the tools, libraries, and system packages needed to build the CMangos server. It includes things like compilers, standard libraries, and other software required to turn the source code into a working program.</p> </li> <li> <p>Purpose: Provides the foundation for the build process.</p> </li> <li> <p>Key Point: It\u2019s not part of the final server. It\u2019s only used to help \"mix the ingredients.\"</p> </li> <li> <p>Builder Image    This is like the kitchen where you prepare the cake.    The Builder Image takes the source code and, using the tools from the Build Deps image, compiles it into working server binaries (the actual program files that run the game server).</p> </li> <li> <p>Purpose: Runs the build process, producing the final server files.</p> </li> <li> <p>Key Point: Includes a specific version of the source code, ensuring the same result every time.</p> </li> <li> <p>Runtime Image    Now the cake is baked, and you\u2019ve cleaned up the kitchen. Only the cake remains.    The Runtime Image is a clean, minimal environment that contains only the files and libraries needed to run the server\u2014nothing extra. All the build tools and unnecessary files are left behind.</p> </li> <li> <p>Purpose: Provides the environment where the CMangos server will run.</p> </li> <li> <p>Key Point: Smaller, faster, and more secure because it doesn\u2019t include unnecessary tools.</p> </li> <li> <p>Final Image    This is the beautifully decorated cake, ready to serve.    The Final Image combines the Runtime Image with the built server files from the Builder Image and adds any necessary configuration files. This is the image you\u2019ll actually deploy to run your CMangos server.</p> </li> <li> <p>Purpose: The complete, deployable server image.</p> </li> <li>Key Point: Contains everything needed to run CMangos in production.</li> </ol>"},{"location":"cmangos-tbc/build/overview/#why-this-pattern-matters","title":"Why This Pattern Matters","text":"<ul> <li>Consistency: Every time you build the server, you get the same result\u2014no surprises.</li> <li>Security: By removing unnecessary tools and files, the final image is more secure.</li> <li>Efficiency: Smaller images mean faster deployment and less resource usage.</li> <li>Reproducibility: Builds are deterministic, meaning the same source code always produces the same output.</li> </ul>"},{"location":"cmangos-tbc/build/runtime/","title":"Runtime Image","text":"<p>The Runtime Image is the final, deployable container that runs the CMangos server. It is designed to be lightweight, secure, and optimized for performance, containing only the essential components needed to run the server.</p>"},{"location":"cmangos-tbc/build/runtime/#what-is-the-runtime-image","title":"What is the Runtime Image?","text":"<p>The Runtime Image:</p> <ul> <li>Contains Only Runtime Dependencies: Unlike the Build Deps image, which includes tools needed for compiling code, the Runtime Image includes just the libraries and packages required for CMangos to function.</li> <li>Packages Built Binaries: The compiled server binaries from the Builder Image are packaged into the Runtime Image.</li> <li>Optimized for Efficiency: By excluding unnecessary build tools and dependencies, the image is smaller and more secure.</li> </ul>"},{"location":"cmangos-tbc/build/runtime/#how-the-runtime-image-is-built","title":"How the Runtime Image is Built","text":"<p>The process to create the Runtime Image involves:</p> <ol> <li>Using the Build Deps Model: Similar to the Build Deps image, the Runtime Image is created with fixed, deterministic dependencies to ensure consistency.</li> <li>Packaging Binaries: The built server binaries are copied from the Builder Image into the Runtime Image.</li> <li>Stripping Down the Environment: Any unnecessary files, build tools, or extra data are excluded to keep the image lean.</li> </ol> <p>This results in a minimal container that contains everything needed to run the CMangos server\u2014nothing more, nothing less.</p>"},{"location":"cmangos-tbc/build/runtime/#benefits-of-the-runtime-image","title":"Benefits of the Runtime Image","text":"<ul> <li>Smaller Size: Reduces resource usage, making it faster to deploy and more efficient to run.</li> <li>Improved Security: Fewer components mean fewer potential vulnerabilities.</li> <li>Consistency: Built using deterministic methods, ensuring the same runtime environment across all deployments.</li> </ul>"},{"location":"cmangos-tbc/build/runtime/#running-the-runtime-image","title":"Running the Runtime Image","text":"<p>Once the Runtime Image is built, you can run it like any standard Docker container:</p> <pre><code>docker run -p 8085:8085 -p 3724:3724 mockorg/cmangos-runtime:2024.02.03-1\n</code></pre> <ul> <li>Ports 8085 and 3724 are exposed for the game server and login server.</li> <li><code>mockorg/cmangos-runtime:2024.02.03-1</code> refers to the specific version of the Runtime Image.</li> </ul> <p>For persistent data (like database storage or logs), you can mount volumes:</p> <pre><code>docker run -v $(pwd)/data:/data mockorg/cmangos-runtime:2024.02.03-1\n</code></pre>"},{"location":"cmangos-tbc/build/runtime/#summary","title":"Summary","text":"<ul> <li>The Runtime Image is the final container that runs CMangos, containing only the dependencies needed for runtime.</li> <li>It is built using deterministic methods, similar to the Build Deps image, ensuring consistent, reliable performance.</li> <li>The image packages the built binaries from the Builder Image, creating a clean, minimal environment optimized for deployment.</li> <li>This approach enhances security, reduces resource usage, and simplifies server management.</li> </ul>"},{"location":"cmangos-tbc/config/accounts/","title":"Accounts","text":"<p>Accounts</p>"},{"location":"cmangos-tbc/config/commands/","title":"Accounts","text":"<p>Accounts</p>"},{"location":"cmangos-tbc/config/mangosd/","title":"MangosD Configuration Guide","text":""},{"location":"cmangos-tbc/config/mangosd/#what-is-mangosdconf","title":"What is <code>mangosd.conf</code>?","text":"<p>The <code>mangosd.conf</code> file is the main configuration file for a Massive Network Game Object Servers (MaNGOS) server. It contains settings that control how the server operates, including server name, rates, logging, and more.</p> <p>Think of it as the \"control center\" for your emulator server: if you need to tweak gameplay rates or game data, you\u2019ll find the relevant settings here.</p>"},{"location":"cmangos-tbc/config/mangosd/#example-configuration","title":"Example Configuration","text":"<p>The <code>mangosd.conf</code> is made available in the predefined git repositories, setting alongside a docker compose <code>compose.yaml</code>. These are \"mounted\" into the containers, making the configuration files available to the server.</p> <p>Below is a basic example of how the mounting of the <code>mangosd.conf</code> file into a Docker Compose container works:</p> <pre><code>services:\n  mangos:\n    image: thoriumlxc/mockserver:latest\n    volumes:\n      - ./mangosd.conf:/opt/mangos/mangosd.conf\n    # Additional environment variables or configurations can go here\n</code></pre> <p>This works by working relative to the path of the <code>compose.yaml</code> file. So if you file is located at <code>/some/path/to/file/compose.yaml</code>, then your file would be next it within the same directory at <code>/some/path/to/file/mangosd.conf</code></p> <pre><code>.\n\u251c\u2500\u2500 compose.yaml\n\u251c\u2500\u2500 mangosd.conf\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 realmd.conf\n</code></pre> <p>For Windows</p> <p>On Windows, these paths will be in the form of <code>C:\\some\\path\\to\\file\\</code>, as Windows uses <code>\\</code> and MacOS/Linux use <code>\\</code> for indicating paths. Most likely your path is somewhere in your home directory like <code>C:\\Users\\LocalUser\\ThoriumLXC</code>.</p>"},{"location":"cmangos-tbc/config/mangosd/#configuration-options","title":"Configuration Options","text":"<p>Here are a few commonly used settings from the <code>mangosd.conf</code> file, as examples of what is within this file. You should look at each individual project for the specific project options.</p> Config Key Description <code>RealmID</code> A unique numeric identifier for your realm. If you have multiple realms, each needs a different ID. <code>DataDir</code> The file system path where your game data is stored. Example: <code>/usr/local/cmangos/data/</code> <code>WorldDatabaseInfo</code> The connection details for your World database. Includes host, port, username, password, and database name. Example: <code>127.0.0.1;3306;root;password;cmangos_world</code> <code>Rates.Health</code> Adjusts how quickly players regenerate health. A higher value means faster regeneration. <code>Rates.DropMoney</code> Controls how much gold creatures drop. A lower value decreases dropped gold; a higher value increases it."},{"location":"cmangos-tbc/config/mariadb/","title":"MariaDB","text":""},{"location":"cmangos-tbc/config/realmd/","title":"RealmD Configuration Guide","text":""},{"location":"cmangos-tbc/config/realmd/#what-is-realmdconf","title":"What is <code>realmd.conf</code>","text":"<p>The <code>realmd.conf</code> file is the primary configuration file for the authentication server in the emulator server. It handles user logins and connections, specifying settings such as database connections, IP bindings, and security options.</p>"},{"location":"cmangos-tbc/config/realmd/#example-configuration","title":"Example Configuration","text":"<p>The <code>realmd.conf</code> is made available in the predefined git repositories, setting alongside a docker compose <code>compose.yaml</code>. These are \"mounted\" into the containers, making the configuration files available to the server.</p> <p>Below is a basic example of how the mounting of the <code>realmd.conf</code> file into a Docker Compose container works:</p> <pre><code>services:\n  mangos:\n    image: thoriumlxc/mockserver:latest\n    volumes:\n      - ./realmd.conf:/opt/mangos/realmd.conf\n    # Additional environment variables or configurations can go here\n</code></pre> <p>This works by working relative to the path of the <code>compose.yaml</code> file. So if you file is located at <code>/some/path/to/file/compose.yaml</code>, then your file would be next it within the same directory at <code>/some/path/to/file/realmd.conf</code></p> <pre><code>.\n\u251c\u2500\u2500 compose.yaml\n\u251c\u2500\u2500 mangosd.conf\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 realmd.conf\n</code></pre> <p>For Windows</p> <p>On Windows, these paths will be in the form of <code>C:\\some\\path\\to\\file\\</code>, as Windows uses <code>\\</code> and MacOS/Linux use <code>\\</code> for indicating paths. Most likely your path is somewhere in your home directory like <code>C:\\Users\\LocalUser\\ThoriumLXC</code>.</p>"},{"location":"cmangos-tbc/config/realmd/#configuration-options","title":"Configuration Options","text":"<p>Here are a few commonly used settings from the <code>realmd.conf</code> file, as examples of what is within this file. You should look at each individual project for the specific project options.</p> Config Key Description <code>LoginDatabaseInfo</code> Sets the database connection details for the authentication server. <code>ListenHost</code> Defines the IP address the server listens on. <code>ListenPort</code> Specifies the port for incoming connections. <code>MaxPingTime</code> Determines the maximum time to wait for client responses. <code>LogLevel</code> Controls the verbosity of logs for troubleshooting purposes."},{"location":"cmangos-wotlk/client-data/","title":"Client Data","text":""},{"location":"cmangos-wotlk/clients/","title":"Supported Clients","text":"<p>Supported Clients</p>"},{"location":"cmangos-wotlk/installation/","title":"Installing cMaNGOS Classic","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"cmangos-wotlk/installation/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"cmangos-wotlk/installation/#sample-title","title":"Sample Title","text":"<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Ctrl+Alt+Del</p>"},{"location":"cmangos-wotlk/installation/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"cmangos-wotlk/overview/","title":"Getting Started with cMaNGOS WOTLK","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"cmangos-wotlk/overview/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"cmangos-wotlk/overview/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"cmangos-wotlk/versions/","title":"Versions","text":"<p>Versions</p>"},{"location":"cmangos-wotlk/bots/ahbot/","title":"AH Bots","text":"<p>The AHBot (Auction House Bot) in CMaNGOS is a built-in feature designed to simulate player-driven activity in the in-game Auction House. On single-player servers or servers with low populations, the Auction House can appear empty or stagnant, which detracts from the normal gameplay experience.</p> <p>AHBot helps address this by automatically posting auctions for a variety of items\u2014ranging from common consumables and crafting materials to high-level gear\u2014ensuring that players have a selection of goods to buy and sell. It can also purchase items listed by real players, injecting gold back into the economy and mimicking organic market demand.</p> <p>The behaviour of the bot can be configured within the <code>ahbot.conf</code> file, which will align the bot to the server's needs.</p> <p>For example, you can set the minimum and maximum quantity of items listed, define price ranges or bidding increments, and even designate which item categories are more frequently posted. You might tweak the bot to create a bustling market with plentiful resources for solo leveling characters, or limit the number of high-tier gear pieces to preserve a sense of rarity.</p>"},{"location":"cmangos-wotlk/bots/ahbot/#configuration-options","title":"Configuration Options","text":"<p>Below is a table of the most common (and essential) AHBot-related configuration options found in this file. Note that some options appear multiple times for different item categories or rarities; each category can be customized independently using the same parameter names but with category and rarity suffixes (e.g., <code>AhBot.MaxAuctionCount.equip.blue</code>).</p> Option Description Example Values <code>AuctionHouseBot.Seller.Enabled</code> Enables or disables the old <code>AuctionHouseBot</code> (the legacy bot). Setting to <code>0</code> disables it. <code>0</code> (disabled) <code>1</code> (enabled) <code>AuctionHouseBot.Buyer.Enabled</code> Enables or disables the old <code>AuctionHouseBot</code> buyer logic. Also part of the legacy bot system. <code>0</code> (disabled) <code>1</code> (enabled) <code>AhBot.Enabled</code> Enables or disables the <code>new</code> AhBot system. <code>0</code> (disabled) <code>1</code> (enabled) <code>AhBot.MaxItemLevel</code> The maximum item level of items that AhBot is allowed to post or buy. <code>500</code> <code>AhBot.MaxRequiredLevel</code> The maximum required player level for items AhBot will list or purchase. <code>80</code> <code>AhBot.PriceMultiplier</code> A <code>global</code> pricing multiplier applied to all items (unless overridden by category-specific multipliers). This affects how much items are listed or bought for, relative to their default value. <code>0.35</code> (35% of default) Typical range: <code>0.1</code>\u2013<code>2.0</code> <code>AhBot.DefaultMinPrice</code> The fallback minimum price in copper (if the price calculation falls below this value). Helps avoid near-zero listings. <code>20</code> (which is actually 20 copper = 0.20 silver) <code>AhBot.PriceQualityMultiplier</code> Applies an additional multiplier based on item quality; if <code>1.0</code>, there is no added factor. Some server admins increase this to make higher-quality items more expensive. <code>1.0</code> (no change to prices) Could be <code>1.5</code>, <code>2.0</code>, etc. <code>AhBot.AlwaysAvailableMoney</code> How much gold (in copper) the bot can always access for buying items. If set high, the bot effectively never runs out of funds. <code>2000000</code> (20,000 gold) Any large integer <code>AhBot.SendMail</code> Determines whether the bot sends out mail (for instance, returning unsold items). <code>0</code> (off) <code>1</code> (on) <code>AhBot.ItemBuyMinInterval</code> The minimum time in seconds between the bot purchasing items of the same type/category. If commented out, defaults apply internally. <code>600</code> (10 minutes) <code>7200</code> (2 hours) <code>AhBot.ItemSellMinInterval</code> The minimum time in seconds between the bot posting items of the same type/category. <code>600</code> (10 minutes) <code>7200</code> (2 hours) <code>AhBot.ItemSellMaxInterval</code> The maximum time in seconds between the bot posting items of the same type/category. If random posting is used, this helps define the upper limit of time. <code>7200</code> (2 hours) <code>AhBot.MaxSellInterval</code> The maximum time in seconds the bot will wait before selling additional items (global cap). <code>28800</code> (8 hours) <p>Tip</p> <p>Values involving currency are in the lowest currency option, like <code>copper</code>. For example, <code>20</code> means 20 copper.</p>"},{"location":"cmangos-wotlk/bots/ahbot/#category","title":"Category","text":"<p>Categories can be <code>equip</code>, <code>reagent</code>, <code>consumables</code>, <code>container</code>, <code>recipe</code>, <code>quest</code>, <code>devices</code>, <code>trade</code>.</p> Option Description Example Values <code>AhBot.MaxAuctionCount.&lt;category&gt;</code> The <code>maximum number</code> of items the bot can have on auction at one time for a given category. Typically broken down further by rarity suffix (<code>white</code>, <code>green</code>, <code>blue</code>, <code>epic</code>). <code>AhBot.MaxAuctionCount.equip.epic = 10</code> <code>AhBot.MaxAuctionCount.recipe.green = 4</code> <code>AhBot.MaxItemTypeCount.&lt;category&gt;</code> The <code>maximum number</code> of individual item types (of a certain rarity) in a category the bot can list concurrently. For example, limiting the total number of a specific blue item. <code>AhBot.MaxItemTypeCount.equip.blue = 5</code> <code>AhBot.MaxItemTypeCount.equip.epic = 2</code> <code>AhBot.PriceMultiplier.Sell.&lt;category&gt;</code> A <code>category-specific</code> multiplier for selling items. Multiplies the base price or global multiplier to adjust how much the bot charges when listing auctions in that category. <code>AhBot.PriceMultiplier.Sell.recipe = 5.0</code> <code>AhBot.PriceMultiplier.Sell.equip = 2.5</code> <code>AhBot.PriceMultiplier.Buy.&lt;category&gt;</code> A <code>category-specific</code> multiplier for buying items. Similar concept to <code>Sell</code> but for when the bot is purchasing player-posted items. <code>AhBot.PriceMultiplier.Buy.recipe = 5.0</code> <code>AhBot.PriceMultiplier.Buy.equip = 2.5</code> <code>AhBot.PricingStrategy.&lt;category&gt;</code> Determines how the bot approaches pricing for certain categories. For example, <code>buyOnlyRare</code> might prevent the bot from buying items below a certain rarity threshold. <code>AhBot.PricingStrategy.equip = buyOnlyRare</code> Other strategies depend on your core\u2019s code"},{"location":"cmangos-wotlk/bots/playerbots/","title":"Playerbots","text":"<p>Playerbot is an optional feature in CMaNGOS that introduces AI-controlled \u201cplayer\u201d characters into the game world. These bots can function much like real players, forming or joining parties, helping with quests, running dungeons, and even using class-specific abilities. This is particularly valuable on servers with low population or for those who want to experience group-based content while playing single player.</p> <p>Playerbots aim to simulate player-like behavior as closely as possible, making the world feel more alive and offering a more dynamic leveling and endgame experience.</p> <p>Playerbots can be configured in many ways to tailor their behavior. For example, you might tweak how aggressively they pull mobs, what spells or abilities they prioritize, and whether they can follow certain quest lines automatically. You could decide how many bots can be active at once, define individual roles (tank, healer, DPS), and configure class-specific AI preferences to ensure each bot plays optimally.</p>"},{"location":"cmangos-wotlk/bots/playerbots/#configuration-options","title":"Configuration Options","text":"<p>Below is a reference table summarizing the Playerbot configuration options. It is grouped by general categories as many options share a similar pattern (e.g., <code>AiPlayerbot.RandomBotXYZ</code>, <code>AiPlayerbot.PremadeSpecName.&lt;class&gt;.&lt;specno&gt;</code>, etc.), so rather than list every single line, the table focuses on the key config parameters, their purpose, and typical or example values.</p> <p>Tip</p> <p>Many configuration options exist based on <code>&lt;class&gt;</code> or <code>&lt;race&gt;</code>. This will appear one per class-race combination.</p> Class ID Race ID Warrior <code>1</code> Human <code>1</code> Paladin <code>2</code> Orc <code>2</code> Hunter <code>3</code> Dwarf <code>3</code> Rogue <code>4</code> Night Elf <code>4</code> Priest <code>5</code> Undead <code>5</code> Shaman <code>7</code> Tauren <code>6</code> Mage <code>8</code> Gnome <code>7</code> Warlock <code>9</code> Troll <code>8</code> Druid <code>11</code>"},{"location":"cmangos-wotlk/bots/playerbots/#general-bot-activation-behavior","title":"General Bot Activation &amp; Behavior","text":"Option Description Example Values <code>AiPlayerbot.Enabled</code> Master switch to enable or disable the entire Playerbot system. <code>0</code> (disabled) or <code>1</code> (enabled) <code>AiPlayerbot.RandomBotAutologin</code> Allows random bots to automatically log in. <code>0</code> (off), <code>1</code> (on) <code>AiPlayerbot.RandomBotLoginAtStartup</code> If set, logs on all random bots at server startup. <code>0</code> or <code>1</code> <code>AiPlayerbot.BotAutologin</code> Auto-log in \u201calt\u201d bots on the same account when the player logs in. <code>0</code> (off), <code>1</code> or <code>2</code> (levels of automatic login) <code>AiPlayerbot.DeleteRandomBotAccounts</code> If <code>1</code>, deletes all random bot accounts on server start (clean slate). <code>0</code> or <code>1</code> <code>AiPlayerbot.MinRandomBots</code>/<code>MaxRandomBots</code> Minimum/maximum number of random bots that should be kept online. <code>1000</code> and <code>1000</code> (example); any positive integer <code>AiPlayerbot.RandomBotMinLevel</code>/<code>\u2026MaxLevel</code> Limits for the randomly generated bot levels. <code>1</code>\u2013<code>60</code>, for Classic <code>AiPlayerbot.RandomBotAccountPrefix</code> Prefix used when creating random bot accounts. <code>\"RNDBOT\"</code> <code>AiPlayerbot.RandomBotAccountCount</code> How many random bot accounts to create (if they do not already exist). <code>200</code> <code>AiPlayerbot.RandomBotQuestIds</code> Auto-completed or \u201cfree reward\u201d quests for random bots. E.g. <code>7848,3802,5505\u2026</code>"},{"location":"cmangos-wotlk/bots/playerbots/#random-bot-loginlogout-management","title":"Random Bot Login/Logout Management","text":"Option Description Example Values <code>AiPlayerbot.RandomBotTimedLogout</code> If enabled, random bots log out automatically after <code>BotInWorldTime</code>. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotLoginWithPlayer</code> Log in some or all random bots when real players log in. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotMaps</code> Restricts or allows certain map IDs for random bot teleports/logins. <code>0,1,530,571</code> <code>AiPlayerbot.RandomBotGuildCount</code> How many random bot guilds to form. <code>20</code> <code>AiPlayerbot.DeleteRandomBotGuilds</code> If set to <code>1</code>, deletes all random bot guilds at startup. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotArenaTeamCount</code> How many random bot arena teams to create. <code>20</code> <code>AiPlayerbot.DeleteRandomBotArenaTeams</code> If set to <code>1</code>, deletes all random bot arena teams at startup. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotMaxLevelChance</code> Probability that a randomly generated bot spawns at the maximum level. <code>0.15</code> (15%), etc. <code>AiPlayerbot.RandomBotRpgChance</code> Probability that a bot chooses \u201cRPG\u201d (roleplay) mode instead of grinding. <code>0.20</code> (20%)"},{"location":"cmangos-wotlk/bots/playerbots/#random-bot-creation-gear","title":"Random Bot Creation &amp; Gear","text":"Option Description Example Values <code>AiPlayerbot.RandomBotAutoCreate</code> Automatically create random bot characters if they do not exist. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotRandomLevels</code> / <code>DisableRandomLevels</code> If disabled, random bots start at a fixed level (you can specify) and then level up normally. <code>0</code> (allow random levels), <code>1</code> (disable random levels) <code>AiPlayerbot.randombotStartingLevel</code> If \u201cDisableRandomLevels=1,\u201d sets the default starting level for bots. e.g., <code>5</code>, <code>10</code> <code>AiPlayerbot.RandomGearMaxLevel</code> Maximum item level used in random gear generation for bots. <code>500</code>, or other large number <code>AiPlayerbot.RandomGearMaxDiff</code> Max difference between bot level and the item\u2019s required level. <code>9</code> (default) <code>AiPlayerbot.RandomGearAutoCreate</code> / <code>RandomGearUpgradeEnabled</code> Allow or disallow the system to periodically upgrade random bot gear for their level. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomGearBlacklist</code> List of item IDs that bots should never equip from the random gear system. e.g. <code>0</code>, or comma-separated list of item IDs <code>AiPlayerbot.RandomGearCountChangeMinInterval</code> Interval in seconds controlling how often random gear (or random gear sets) can change for bots. <code>7200</code> (2 hours), etc."},{"location":"cmangos-wotlk/bots/playerbots/#class-race-probability","title":"Class &amp; Race Probability","text":"Option Description Example Values <code>AiPlayerbot.ClassRaceProb.&lt;class&gt;.&lt;race&gt;</code> Controls how likely the system is to generate a bot of a given class and race combo. E.g. <code>AiPlayerbot.ClassRaceProb.1.1 = 40</code> <code>AiPlayerbot.LevelProbability.&lt;level&gt;</code> Probability distribution for each possible level the bot can spawn at (relative weighting). <code>AiPlayerbot.LevelProbability.60 = 100</code> Notes The system uses these probabilities to decide how many random bots of each race/class/level appear in the world. -"},{"location":"cmangos-wotlk/bots/playerbots/#lfg-battlegrounds-arena","title":"LFG / Battlegrounds / Arena","text":"Option Description Example Values <code>AiPlayerbot.RandomBotJoinLfg</code> Random bots will sign up for the LFG system. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotJoinBG</code> Random bots can queue/join battlegrounds. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotAutoJoinBG</code> If nonzero, bots automatically join BG queues under certain conditions (e.g., if not lagging). <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotArenaTeamCount</code> Number of arena teams formed by random bots. <code>20</code>"},{"location":"cmangos-wotlk/bots/playerbots/#movement-rpg-combat-behavior","title":"Movement, RPG, &amp; Combat Behavior","text":"Option Description Example Values <code>AiPlayerbot.SightDistance</code> How far bots can see/scan for targets (in yards). <code>60.0</code> (default example) <code>AiPlayerbot.SpellDistance</code> Range for casting spells if a bot is a caster. <code>26.0</code> <code>AiPlayerbot.ShootDistance</code> Distance for ranged attacks if the bot has ranged ability. <code>26.0</code> <code>AiPlayerbot.ReactDelay</code> Delay (in milliseconds) before a bot reacts to an event. <code>100</code> (default) <code>AiPlayerbot.PassiveDelay</code> If inactive for this many ms, the bot acts passively or stops. <code>10000</code> <code>AiPlayerbot.RpgDelay</code> Typical delay in ms for certain \u201cRPG\u201d interactions. <code>10000</code> <code>AiPlayerbot.JumpNoCombatChance</code> Probability that a non-combat bot occasionally jumps around while moving. <code>0.50</code> (50%), etc. <code>AiPlayerbot.JumpMeleeInCombatChance</code> Probability that a melee-range bot uses jump tactics in combat. <code>0.50</code>, etc. <code>AiPlayerbot.FleeingEnabled</code> If <code>1</code>, bots may flee when low on health. <code>0</code> or <code>1</code>"},{"location":"cmangos-wotlk/bots/playerbots/#bot-ai-strategies-commands","title":"Bot AI Strategies &amp; Commands","text":"Option Description Example Values <code>AiPlayerbot.AutoPickReward</code> Governs how bots handle quest reward pickups: <code>yes</code>, <code>no</code>, or <code>ask</code>. <code>yes</code>, <code>no</code>, or <code>ask</code> <code>AiPlayerbot.AutoEquipUpgradeLoot</code> Whether bots automatically equip better loot they find. <code>0</code> (off) or <code>1</code> (on) <code>AiPlayerbot.AutoTrainSpells</code> How bots automatically train spells from trainers. <code>yes</code>, <code>no</code>, or <code>free</code>. <code>\"yes\"</code> = normal training, <code>\"free\"</code> = no gold cost, <code>\"no\"</code> = manual <code>AiPlayerbot.AutoPickTalents</code> Whether (and how) bots choose talents automatically. <code>no</code>, <code>semi</code>, or <code>full</code> <code>AiPlayerbot.AutoDoQuests</code> If <code>1</code>, random bots pick up and try to do random quests on their own. <code>0</code> or <code>1</code> <code>AiPlayerbot.RandomBotCombatStrategies</code> Default AI strategy tags for random bots in combat (e.g. <code>+dps</code>,<code>-threat</code>, etc.). <code>+dps, +dps assist, -threat</code>, etc. <code>AiPlayerbot.RandomBotNonCombatStrategies</code> Default non-combat AI strategies (e.g. <code>+grind</code>, <code>+rpg</code>). <code>+rpg, +loot, +custom::say</code> <code>AiPlayerbot.UseKnockback</code> If <code>1</code>, knockback spells/abilities can affect bots. <code>0</code> or <code>1</code> <code>AiPlayerbot.EnableGreet</code> Bots greet real players or do certain emotes upon meeting. <code>0</code> or <code>1</code> <code>AiPlayerbot.EnableBroadcasts</code> Toggles whether bots broadcast events (looting items, leveling up, killing mobs) in chat channels. <code>0</code> or <code>1</code> <code>AiPlayerbot.LLMEnabled</code> / <code>LLMApiEndpoint</code> etc. (Experimental) integration with large language models for more immersive AI chat. Varies\u2014used for custom AI endpoints"},{"location":"cmangos-wotlk/bots/playerbots/#pre-made-talent-builds-premadespec","title":"Pre-Made Talent Builds (PremadeSpec)","text":"Option Description Example Values <code>AiPlayerbot.PremadeSpecName.&lt;class&gt;.&lt;spec&gt;</code> The display name for a pre-configured talent build. e.g. <code>AiPlayerbot.PremadeSpecName.4.0 = pve dps assasination</code> <code>AiPlayerbot.PremadeSpecProb.&lt;class&gt;.&lt;spec&gt;</code> Probability that a bot picks that premade specialization (if multiple specs exist). <code>100</code>, <code>80</code>, etc. <code>AiPlayerbot.PremadeSpecLink.&lt;class&gt;.&lt;spec&gt;.&lt;level&gt;</code> Actual talent-tree path (encoded) for the bot. The bot invests points along this path as it levels. e.g. <code>005302105041</code> or <code>30305001302\u2026</code> (talent link strings) Usage These lines help the bot auto-assign talents in a more \u201cbuild-aware\u201d manner. -"},{"location":"cmangos-wotlk/bots/playerbots/#gear-progression-system","title":"Gear Progression System","text":"Option Description Example Values <code>AiPlayerbot.GearProgressionSystem.Enable</code> Master switch for the gear progression system that upgrades bots\u2019 gear as players progress. <code>0</code> (off) or <code>1</code> (on) <code>AiPlayerbot.GearProgressionSystem.X.MinItemLevel</code>/<code>MaxItemLevel</code> Defines item-level brackets. For instance, \u201c0\u201d bracket is base gear; \u201c1\u201d bracket is pre-raid, etc. e.g. <code>AiPlayerbot.GearProgressionSystem.1.MinItemLevel = 50</code> <code>AiPlayerbot.GearProgressionSystem.X.Class.Spec.Slot</code> Item IDs for each slot of that bracket. The system automatically upgrades a bot\u2019s equipment to these IDs. e.g. <code>AiPlayerbot.GearProgressionSystem.0.1.0.0 = 20521</code> Usage Lets you specify exactly what gear bots get at certain gear \u201ctiers.\u201d -"},{"location":"cmangos-wotlk/bots/playerbots/#other-notable-settings","title":"Other Notable Settings","text":"Option Description Example Values <code>AiPlayerbot.SendMail</code> Whether bots can send mail (like returning unsold items). <code>0</code> or <code>1</code> <code>AiPlayerbot.ShowProgressBars</code> Displays a progress bar for random bot actions in console or logs. <code>0</code> or <code>1</code> <code>AiPlayerbot.FleeDistance</code> / <code>AiPlayerbot.TooCloseDistance</code> Distances controlling when bots flee or consider themselves too close to a target. E.g. <code>8.0</code> / <code>5.0</code> <code>AiPlayerbot.ImmuneSpellIds</code> Spell IDs that bots should be immune to. e.g. <code>19428</code> <code>AiPlayerbot.AllowGuildBots</code> Whether bots from your guild are allowed to be used. <code>0</code> or <code>1</code> <code>AiPlayerbot.AllowMultiAccountAltBots</code> If <code>1</code>, allows bots from other accounts in the same guild (not just the master\u2019s account). <code>0</code> or <code>1</code> <code>AiPlayerbot.PerfMonEnabled</code> Enables performance monitoring logs for the AI if needed. <code>0</code> or <code>1</code> <code>AiPlayerbot.RespawnModNeutral</code> / <code>\u2026Hostile</code> Accelerates or decelerates mob respawn rates around bots for neutral / hostile mobs. e.g. <code>10.0</code>, <code>5.0</code> <code>AiPlayerbot.GearScoreCheck</code> If nonzero, a bot compares the gear score of a potential group invite. <code>0</code> (off) or a numeric threshold <code>AiPlayerbot.LevelCheck</code> If nonzero, bots check level differences when grouping with real players. <code>30</code> (default)"},{"location":"cmangos-wotlk/build/building/","title":"Builder Image","text":"<p>The Builder Image is the core component responsible for compiling the CMangos server. It handles the entire build process, from source code to final binary artifacts, ensuring consistency and reliability across different environments.</p>"},{"location":"cmangos-wotlk/build/building/#what-is-the-builder-image","title":"What is the Builder Image?","text":"<p>The Builder Image:</p> <ul> <li>Runs the Build Process: Executes all steps required to compile CMangos.</li> <li>Includes a Specific Source Version: The source code is pre-baked into the image, ensuring version consistency.</li> <li>Relies on Build Deps: Uses fixed dependencies from the Build Deps image to maintain a stable build environment.</li> <li>Supports Customization: You can set environment variables or pass additional arguments when running the image with <code>docker run</code> to adjust the build process as needed.</li> </ul>"},{"location":"cmangos-wotlk/build/building/#running-the-builder-image","title":"Running the Builder Image","text":"<p>To build CMangos using the Builder Image, you can run:</p> <pre><code>docker run -e BUILD_OPTION=optimized mockorg/cmangos-builder:2024.02.03-1\n</code></pre> <ul> <li><code>-e BUILD_OPTION=optimized</code> sets an environment variable that customizes the build.</li> <li><code>mockorg/cmangos-builder:2024.02.03-1</code> refers to the specific version of the Builder Image.</li> </ul> <p>After the build completes, the compiled artifacts are placed in an output directory inside the container. You can extract these artifacts by mounting a volume:</p> <pre><code>docker run -v $(pwd)/output:/output mockorg/cmangos-builder:2024.02.03-1\n</code></pre> <p>This command saves the build results to your local <code>output</code> folder.</p>"},{"location":"cmangos-wotlk/build/building/#hermetic-builds-explained","title":"Hermetic Builds Explained","text":"<p>The Builder Image is designed to produce hermetic builds. But what does \"hermetic\" mean in this context?</p> <p>In simple terms:</p> <p>A hermetic build means that the build process is completely self-contained. It doesn\u2019t rely on anything outside of the Builder Image. This ensures that:</p> <ul> <li>Same Input = Same Output: No matter when or where you run the build, if the source code and settings are the same, the resulting binaries will be identical.</li> <li>No External Influence: The build isn\u2019t affected by your computer\u2019s settings, installed software, or even the current date and time.</li> <li>Predictable Results: Every build is like following a precise recipe\u2014no surprises.</li> </ul> <p>This is achieved by:</p> <ul> <li>Pre-baking the source code into the image.</li> <li>Using fixed dependencies from the Build Deps layer.</li> <li>Controlling the build environment strictly within Docker.</li> </ul>"},{"location":"cmangos-wotlk/build/building/#why-hermetic-builds-matter","title":"Why Hermetic Builds Matter","text":"<ul> <li>Consistency: Developers and users get the same results every time.</li> <li>Reliability: Easier to debug because there are no hidden variables affecting the build.</li> <li>Security: Reduces risks from external changes, like updates to system libraries or tools.</li> </ul>"},{"location":"cmangos-wotlk/build/building/#summary","title":"Summary","text":"<ul> <li>The Builder Image handles the full build process for CMangos.</li> <li>It uses pre-baked source code and fixed dependencies from the Build Deps image.</li> <li>You can customize builds with environment variables or arguments via <code>docker run</code>.</li> <li>Hermetic builds ensure that every build is consistent, reproducible, and reliable, no matter where or when it\u2019s run.</li> </ul>"},{"location":"cmangos-wotlk/build/deps/","title":"Build Deps","text":"<p>The CMangos Docker image architecture follows a modular approach, breaking down the build process into distinct layers for consistency, reproducibility, and maintainability. A critical part of this architecture is the Build Deps layer, which manages the foundational build dependencies required to compile the CMangos server.</p>"},{"location":"cmangos-wotlk/build/deps/#what-are-build-deps","title":"What are Build Deps?","text":"<p>Build Deps (short for Build Dependencies) refer to the essential system libraries, development tools, and other dependencies needed to build the CMangos project. These include:</p> <ul> <li>Standard Libraries (e.g., <code>libc</code>, <code>libssl</code>)</li> <li>Development Tools (e.g., <code>gcc</code>, <code>make</code>, <code>cmake</code>)</li> <li>Debian Packages required for compiling the source code</li> <li>Other system-level dependencies essential for the build process</li> </ul> <p>These dependencies are only used during the build phase and are not included in the final runtime image, keeping the production environment clean and lightweight.</p>"},{"location":"cmangos-wotlk/build/deps/#deterministic-builds-with-bazel-and-rules-oci","title":"Deterministic Builds with Bazel and Rules OCI","text":"<p>To ensure that builds are deterministic\u2014meaning the same source code always produces the same output\u2014we use Bazel along with Rules OCI. This combination offers several advantages:</p> <ul> <li>Reproducibility: Regardless of when or where the build occurs, the output will be identical if the source code version remains the same.</li> <li>Version Control: Build dependencies are pinned to specific versions, eliminating inconsistencies from upstream package changes.</li> <li>Efficiency: Bazel\u2019s caching and precise dependency management speed up rebuilds, especially for minor changes.</li> </ul> <p>By leveraging Bazel and Rules OCI, we eliminate variables that could affect build outcomes, ensuring reliable results across development, testing, and production environments.</p>"},{"location":"cmangos-wotlk/build/deps/#the-builder-image","title":"The Builder Image","text":"<p>The Builder image builds on top of the Build Deps layer. It contains everything required to compile the CMangos server, including:</p> <ul> <li>Pre-installed Build Deps: All necessary libraries and tools for building the source code.</li> <li>Build Scripts and Steps: Automated processes baked into the image to handle compilation.</li> <li>Environment Variables: Configurations required during the build process.</li> <li>Upstream Source Code: Integrated directly from official repositories for clean, version-controlled builds.</li> </ul> <p>The Builder image is solely responsible for the build process. It does not include runtime components, keeping it focused and optimized for its purpose.</p>"},{"location":"cmangos-wotlk/build/deps/#how-it-all-fits-together","title":"How It All Fits Together","text":"<ol> <li>Build Deps Layer: Provides the foundational dependencies required to build CMangos.</li> <li>Builder Image: Utilizes the Build Deps layer to compile the server code and manage build configurations.</li> <li>Final Runtime Image: Contains only the compiled binaries and runtime dependencies, optimized for performance and minimal size.</li> </ol> <p>This layered architecture allows for greater flexibility, easier updates, and improved security by separating build tools from the final production environment.</p>"},{"location":"cmangos-wotlk/build/deps/#summary","title":"Summary","text":"<ul> <li>Build Deps manage the critical dependencies required for building CMangos.</li> <li>Dependencies are installed using Bazel and Rules OCI for deterministic, reproducible builds.</li> <li>The Builder Image leverages Build Deps to execute build steps, manage environment variables, and integrate upstream source code.</li> <li>This modular design ensures clean, consistent builds and optimized runtime environments.</li> </ul>"},{"location":"cmangos-wotlk/build/overview/","title":"High-Level Overview of the Image Build Pattern","text":"<p>The CMangos server is packaged using a carefully designed build pattern that ensures consistency, reliability, and ease of deployment. This pattern breaks the build process into distinct stages, with each stage focusing on a specific part of the process. By separating the build into layers, we can create clean, efficient, and predictable server images that are easy to manage and update.</p> <p>Think of this process like baking a cake:</p> <ul> <li>You gather your ingredients (dependencies).</li> <li>Mix and bake the cake (build the server).</li> <li>Remove the baking tools (runtime environment).</li> <li>Add the final decorations and packaging (final image ready to serve).</li> </ul> <p>Here\u2019s how this pattern works for CMangos:</p> <pre><code>flowchart TD\n    A[Build Deps Image] --&gt; B[Builder Image]\n    B --&gt;|Build Artifacts| D[Final Image]\n    C[Runtime Image] --&gt;|Runtime Dependencies| D\n\n    D --&gt; E[Deployment]\n\n    classDef deps stroke-width:2px;\n    classDef builder stroke-width:2px;\n    classDef runtime stroke-width:2px;\n    classDef final stroke-width:2px;\n\n    class A deps;\n    class B builder;\n    class C runtime;\n    class D final;\n</code></pre>"},{"location":"cmangos-wotlk/build/overview/#the-four-layers-of-the-build-pattern","title":"The Four Layers of the Build Pattern","text":"<ol> <li> <p>Build Deps (Build Dependencies) Image    Think of this as your pantry of ingredients.    This image contains all the tools, libraries, and system packages needed to build the CMangos server. It includes things like compilers, standard libraries, and other software required to turn the source code into a working program.</p> </li> <li> <p>Purpose: Provides the foundation for the build process.</p> </li> <li> <p>Key Point: It\u2019s not part of the final server. It\u2019s only used to help \"mix the ingredients.\"</p> </li> <li> <p>Builder Image    This is like the kitchen where you prepare the cake.    The Builder Image takes the source code and, using the tools from the Build Deps image, compiles it into working server binaries (the actual program files that run the game server).</p> </li> <li> <p>Purpose: Runs the build process, producing the final server files.</p> </li> <li> <p>Key Point: Includes a specific version of the source code, ensuring the same result every time.</p> </li> <li> <p>Runtime Image    Now the cake is baked, and you\u2019ve cleaned up the kitchen. Only the cake remains.    The Runtime Image is a clean, minimal environment that contains only the files and libraries needed to run the server\u2014nothing extra. All the build tools and unnecessary files are left behind.</p> </li> <li> <p>Purpose: Provides the environment where the CMangos server will run.</p> </li> <li> <p>Key Point: Smaller, faster, and more secure because it doesn\u2019t include unnecessary tools.</p> </li> <li> <p>Final Image    This is the beautifully decorated cake, ready to serve.    The Final Image combines the Runtime Image with the built server files from the Builder Image and adds any necessary configuration files. This is the image you\u2019ll actually deploy to run your CMangos server.</p> </li> <li> <p>Purpose: The complete, deployable server image.</p> </li> <li>Key Point: Contains everything needed to run CMangos in production.</li> </ol>"},{"location":"cmangos-wotlk/build/overview/#why-this-pattern-matters","title":"Why This Pattern Matters","text":"<ul> <li>Consistency: Every time you build the server, you get the same result\u2014no surprises.</li> <li>Security: By removing unnecessary tools and files, the final image is more secure.</li> <li>Efficiency: Smaller images mean faster deployment and less resource usage.</li> <li>Reproducibility: Builds are deterministic, meaning the same source code always produces the same output.</li> </ul>"},{"location":"cmangos-wotlk/build/runtime/","title":"Runtime Image","text":"<p>The Runtime Image is the final, deployable container that runs the CMangos server. It is designed to be lightweight, secure, and optimized for performance, containing only the essential components needed to run the server.</p>"},{"location":"cmangos-wotlk/build/runtime/#what-is-the-runtime-image","title":"What is the Runtime Image?","text":"<p>The Runtime Image:</p> <ul> <li>Contains Only Runtime Dependencies: Unlike the Build Deps image, which includes tools needed for compiling code, the Runtime Image includes just the libraries and packages required for CMangos to function.</li> <li>Packages Built Binaries: The compiled server binaries from the Builder Image are packaged into the Runtime Image.</li> <li>Optimized for Efficiency: By excluding unnecessary build tools and dependencies, the image is smaller and more secure.</li> </ul>"},{"location":"cmangos-wotlk/build/runtime/#how-the-runtime-image-is-built","title":"How the Runtime Image is Built","text":"<p>The process to create the Runtime Image involves:</p> <ol> <li>Using the Build Deps Model: Similar to the Build Deps image, the Runtime Image is created with fixed, deterministic dependencies to ensure consistency.</li> <li>Packaging Binaries: The built server binaries are copied from the Builder Image into the Runtime Image.</li> <li>Stripping Down the Environment: Any unnecessary files, build tools, or extra data are excluded to keep the image lean.</li> </ol> <p>This results in a minimal container that contains everything needed to run the CMangos server\u2014nothing more, nothing less.</p>"},{"location":"cmangos-wotlk/build/runtime/#benefits-of-the-runtime-image","title":"Benefits of the Runtime Image","text":"<ul> <li>Smaller Size: Reduces resource usage, making it faster to deploy and more efficient to run.</li> <li>Improved Security: Fewer components mean fewer potential vulnerabilities.</li> <li>Consistency: Built using deterministic methods, ensuring the same runtime environment across all deployments.</li> </ul>"},{"location":"cmangos-wotlk/build/runtime/#running-the-runtime-image","title":"Running the Runtime Image","text":"<p>Once the Runtime Image is built, you can run it like any standard Docker container:</p> <pre><code>docker run -p 8085:8085 -p 3724:3724 mockorg/cmangos-runtime:2024.02.03-1\n</code></pre> <ul> <li>Ports 8085 and 3724 are exposed for the game server and login server.</li> <li><code>mockorg/cmangos-runtime:2024.02.03-1</code> refers to the specific version of the Runtime Image.</li> </ul> <p>For persistent data (like database storage or logs), you can mount volumes:</p> <pre><code>docker run -v $(pwd)/data:/data mockorg/cmangos-runtime:2024.02.03-1\n</code></pre>"},{"location":"cmangos-wotlk/build/runtime/#summary","title":"Summary","text":"<ul> <li>The Runtime Image is the final container that runs CMangos, containing only the dependencies needed for runtime.</li> <li>It is built using deterministic methods, similar to the Build Deps image, ensuring consistent, reliable performance.</li> <li>The image packages the built binaries from the Builder Image, creating a clean, minimal environment optimized for deployment.</li> <li>This approach enhances security, reduces resource usage, and simplifies server management.</li> </ul>"},{"location":"cmangos-wotlk/config/accounts/","title":"Accounts","text":"<p>Accounts</p>"},{"location":"cmangos-wotlk/config/commands/","title":"Accounts","text":"<p>Accounts</p>"},{"location":"cmangos-wotlk/config/mangosd/","title":"MangosD Configuration Guide","text":""},{"location":"cmangos-wotlk/config/mangosd/#what-is-mangosdconf","title":"What is <code>mangosd.conf</code>?","text":"<p>The <code>mangosd.conf</code> file is the main configuration file for a Massive Network Game Object Servers (MaNGOS) server. It contains settings that control how the server operates, including server name, rates, logging, and more.</p> <p>Think of it as the \"control center\" for your emulator server: if you need to tweak gameplay rates or game data, you\u2019ll find the relevant settings here.</p>"},{"location":"cmangos-wotlk/config/mangosd/#example-configuration","title":"Example Configuration","text":"<p>The <code>mangosd.conf</code> is made available in the predefined git repositories, setting alongside a docker compose <code>compose.yaml</code>. These are \"mounted\" into the containers, making the configuration files available to the server.</p> <p>Below is a basic example of how the mounting of the <code>mangosd.conf</code> file into a Docker Compose container works:</p> <pre><code>services:\n  mangos:\n    image: thoriumlxc/mockserver:latest\n    volumes:\n      - ./mangosd.conf:/opt/mangos/mangosd.conf\n    # Additional environment variables or configurations can go here\n</code></pre> <p>This works by working relative to the path of the <code>compose.yaml</code> file. So if you file is located at <code>/some/path/to/file/compose.yaml</code>, then your file would be next it within the same directory at <code>/some/path/to/file/mangosd.conf</code></p> <pre><code>.\n\u251c\u2500\u2500 compose.yaml\n\u251c\u2500\u2500 mangosd.conf\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 realmd.conf\n</code></pre> <p>For Windows</p> <p>On Windows, these paths will be in the form of <code>C:\\some\\path\\to\\file\\</code>, as Windows uses <code>\\</code> and MacOS/Linux use <code>\\</code> for indicating paths. Most likely your path is somewhere in your home directory like <code>C:\\Users\\LocalUser\\ThoriumLXC</code>.</p>"},{"location":"cmangos-wotlk/config/mangosd/#configuration-options","title":"Configuration Options","text":"<p>Here are a few commonly used settings from the <code>mangosd.conf</code> file, as examples of what is within this file. You should look at each individual project for the specific project options.</p> Config Key Description <code>RealmID</code> A unique numeric identifier for your realm. If you have multiple realms, each needs a different ID. <code>DataDir</code> The file system path where your game data is stored. Example: <code>/usr/local/cmangos/data/</code> <code>WorldDatabaseInfo</code> The connection details for your World database. Includes host, port, username, password, and database name. Example: <code>127.0.0.1;3306;root;password;cmangos_world</code> <code>Rates.Health</code> Adjusts how quickly players regenerate health. A higher value means faster regeneration. <code>Rates.DropMoney</code> Controls how much gold creatures drop. A lower value decreases dropped gold; a higher value increases it."},{"location":"cmangos-wotlk/config/mariadb/","title":"MariaDB","text":""},{"location":"cmangos-wotlk/config/realmd/","title":"RealmD Configuration Guide","text":""},{"location":"cmangos-wotlk/config/realmd/#what-is-realmdconf","title":"What is <code>realmd.conf</code>","text":"<p>The <code>realmd.conf</code> file is the primary configuration file for the authentication server in the emulator server. It handles user logins and connections, specifying settings such as database connections, IP bindings, and security options.</p>"},{"location":"cmangos-wotlk/config/realmd/#example-configuration","title":"Example Configuration","text":"<p>The <code>realmd.conf</code> is made available in the predefined git repositories, setting alongside a docker compose <code>compose.yaml</code>. These are \"mounted\" into the containers, making the configuration files available to the server.</p> <p>Below is a basic example of how the mounting of the <code>realmd.conf</code> file into a Docker Compose container works:</p> <pre><code>services:\n  mangos:\n    image: thoriumlxc/mockserver:latest\n    volumes:\n      - ./realmd.conf:/opt/mangos/realmd.conf\n    # Additional environment variables or configurations can go here\n</code></pre> <p>This works by working relative to the path of the <code>compose.yaml</code> file. So if you file is located at <code>/some/path/to/file/compose.yaml</code>, then your file would be next it within the same directory at <code>/some/path/to/file/realmd.conf</code></p> <pre><code>.\n\u251c\u2500\u2500 compose.yaml\n\u251c\u2500\u2500 mangosd.conf\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 realmd.conf\n</code></pre> <p>For Windows</p> <p>On Windows, these paths will be in the form of <code>C:\\some\\path\\to\\file\\</code>, as Windows uses <code>\\</code> and MacOS/Linux use <code>\\</code> for indicating paths. Most likely your path is somewhere in your home directory like <code>C:\\Users\\LocalUser\\ThoriumLXC</code>.</p>"},{"location":"cmangos-wotlk/config/realmd/#configuration-options","title":"Configuration Options","text":"<p>Here are a few commonly used settings from the <code>realmd.conf</code> file, as examples of what is within this file. You should look at each individual project for the specific project options.</p> Config Key Description <code>LoginDatabaseInfo</code> Sets the database connection details for the authentication server. <code>ListenHost</code> Defines the IP address the server listens on. <code>ListenPort</code> Specifies the port for incoming connections. <code>MaxPingTime</code> Determines the maximum time to wait for client responses. <code>LogLevel</code> Controls the verbosity of logs for troubleshooting purposes."},{"location":"thoriumlxc/client-data/","title":"Understanding Client Data","text":""},{"location":"thoriumlxc/client-data/#concept-of-client-data","title":"Concept of Client Data","text":"<p>Client data refers to the game files extracted from the game client, including essential elements like mmaps, vmaps &amp; map data. This data is crucial for the server to accurately replicate the game environment.</p> <p>MMaps, short for Movement Maps, which provide the emulator server an understanding of the world to allow creature path-finding. These are broken down into individual maps. In practice, these prevent creatures from falling off the face of the world.</p> <p>VMaps, short for Vertex Map Physics Info are responsible for allowing creatures units to understand line of sight, and random movement generators. This prevent creatures from being able to use abilities through walls, or randomly phased through walls.</p> <p>Maps contain the map tiles information, like height map &amp; liquid maps. This allows the emulator service to actually know the world.</p>"},{"location":"thoriumlxc/client-data/#extracting-client-data","title":"Extracting Client Data","text":"<p>To extract client data, you can use the extractor tools along with a game client to analyze the game world, and create the client data. Assuming that you are in the directory containing the game client, you can run in a Terminal the following command:</p> <pre><code>docker run --rm -v .:/client -v ./client-data:/output thoriumlxc/vmap-extractor\n</code></pre> <p>This command is:</p> <ul> <li><code>docker run</code> to run the container</li> <li><code>--rm</code> means to discard this container when completed, leaving no trace</li> <li><code>-v .:/client</code> mounts the current folder as a directory known as \"/client\" to the extractor. The extract expects the client at <code>/client</code>.</li> <li><code>-v ./client-data:/output</code> mounts a folder named <code>client-data</code> in the current folder, making it available to the extractor as the <code>/output</code> directory. The extractor will write the extracted data to <code>/output</code>.</li> <li><code>thoriumlxc/vmap-extractor</code> is the name of the extractor image.</li> </ul>"},{"location":"thoriumlxc/client-data/#client-data-in-docker","title":"Client Data in Docker","text":"<p>In Docker, client data can be stored in named volumes, which simplifies management and transfer. This approach makes it easy to share the extracted data between different systems or Docker containers.</p> <p>This will look like the following:</p> <pre><code>services:\n  mangosd:\n    image: cmangos-classic\n    volumes:\n      - map-data:/opt/mangos/storage/data:ro\n\nvolumes:\n  map-data:\n    external: true\n</code></pre> <p>You can load the data you've extracted by running the following:</p> <pre><code>docker create volume map-data\ndocker run --rm -v map-data:/output -v ./client-data:/input thoriumlxc/volume-loader\n</code></pre> <p>This will copy all of the files located within your local directory, and write thme into a volume that can be referenced within the container without issue.</p>"},{"location":"thoriumlxc/client-data/#client-data-from-container-image","title":"Client Data from Container Image","text":"<p>There is an alternative means of receiving the map data. You can receive the map data in the form of a extractor container image. This extractor container image stores the already extracted data within the container image, then runs a command to extract it to the directory.</p> <pre><code>docker run --rm -v map-data:/output cmangos-classic-map-data\n</code></pre> <p>These already extracted map data containers are not typically made available for download on container registries. You are most likely to find them available as <code>.tar.gz</code> files, which you can load into your docker service like so:</p> <pre><code>docker load &lt; cmangos-classic-map-data.tar.gz\ndocker create volume map-data\ndocker run --rm -v map-data:/output cmangos-classic-map-data\n</code></pre>"},{"location":"thoriumlxc/compose/","title":"Docker Compose Setup","text":"<p>ThoriumLXC makes downloadable git repositories available that provide the Docker configurations for running the emulation servers. This guide help you with understanding the available commands.</p> <p>Info</p> <p>This page assumes the name of the compose file is <code>compose.yaml</code>, and that you are running the commands within the directory containing the <code>compose.yaml</code> file.</p> <pre><code>.\n\u251c\u2500\u2500 compose.yaml\n\u251c\u2500\u2500 mangosd.conf\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 realmd.conf\n</code></pre>"},{"location":"thoriumlxc/compose/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have Docker and Docker Compose installed and configured on your machine. Running the command below within a Terminal environment confirms that Docker is accessible:</p> <pre><code>docker --version\n</code></pre> <p>If this command does not show a valid Docker version, refer to the official documentation on Docker\u2019s website to install and set up Docker correctly. This will look something like the following, likely with a different version &amp; build ID (<code>27.3.1</code>, <code>ce12230</code>):</p> <pre><code>Docker version 27.3.1, build ce12230\n</code></pre> <p>You can also verify Docker Compose by checking for its helpdoc:</p> <pre><code>docker compose --help\n</code></pre> <p>which will look roughly like the following:</p> <pre><code>Usage:  docker compose [OPTIONS] COMMAND\n\nDefine and run multi-container applications with Docker\n\nOptions:\n    --all-resources              Include all resources, even those not\n                                used by services\n    --ansi string                Control when to print ANSI control\n                                characters (\"never\"|\"always\"|\"auto\")\n                                (default \"auto\")\n    --compatibility              Run compose in backward compatibility mode\n    --dry-run                    Execute command in dry run mode\n    --env-file stringArray       Specify an alternate environment file\n-f, --file stringArray           Compose configuration files\n    --parallel int               Control max parallelism, -1 for\n                                unlimited (default -1)\n    --profile stringArray        Specify a profile to enable\n    --progress string            Set type of progress output (auto,\n                                tty, plain, json, quiet) (default \"auto\")\n    --project-directory string   Specify an alternate working directory\n                                (default: the path of the, first\n                                specified, Compose file)\n-p, --project-name string        Project name\n\nCommands:\n    attach      Attach local standard input, output, and error streams to a service's running container\n    build       Build or rebuild services\n    config      Parse, resolve and render compose file in canonical format\n    cp          Copy files/folders between a service container and the local filesystem\n    create      Creates containers for a service\n    down        Stop and remove containers, networks\n    events      Receive real time events from containers\n    exec        Execute a command in a running container\n    export      Export a service container's filesystem as a tar archive\n    images      List images used by the created containers\n    kill        Force stop service containers\n    logs        View output from containers\n    ls          List running compose projects\n    pause       Pause services\n    port        Print the public port for a port binding\n    ps          List containers\n    pull        Pull service images\n    push        Push service images\n    restart     Restart service containers\n    rm          Removes stopped service containers\n    run         Run a one-off command on a service\n    scale       Scale services\n    start       Start services\n    stats       Display a live stream of container(s) resource usage statistics\n    stop        Stop services\n    top         Display the running processes\n    unpause     Unpause services\n    up          Create and start containers\n    version     Show the Docker Compose version information\n    wait        Block until containers of all (or specified) services stop.\n    watch       Watch build context for service and rebuild/refresh containers when files are updated\n\nRun 'docker compose COMMAND --help' for more information on a command.\n</code></pre> <p>After you have confirmed the above, it means you are ready to proceed with this guide.</p>"},{"location":"thoriumlxc/compose/#pulling-docker-images","title":"Pulling Docker Images","text":"<p>When you are in the project folder, you can download the images that the Docker Compose configuration requires by typing:</p> <pre><code>docker compose pull\n</code></pre> <p>This command fetches all the images declared in the <code>compose.yml</code> file and stores them on your machine. If you already have a compatible version of these images, Docker may skip downloading or perform a quick update check.</p> <p>Think of container images as downloading applications (binaries) from your browser.</p>"},{"location":"thoriumlxc/compose/#starting-the-server","title":"Starting the Server","text":"<p>Once the images are ready, you can start the emulation server by typing:</p> <pre><code>docker compose up\n</code></pre> <p>This action starts each container specified in the <code>compose.yml</code> file. The Terminal will display output that shows the server initiating. If you want the server to keep running in the background so you can use the same Terminal window for other tasks, you can add the <code>-d</code> flag:</p> <pre><code>docker compose up -d\n</code></pre> <p>By adding <code>-d</code>, you instruct Docker Compose to run in \"detached\" mode, meaning the containers keep running until you stop them, even if you close your Terminal window.</p>"},{"location":"thoriumlxc/compose/#attaching-to-the-server","title":"Attaching to the Server","text":"<p>Once the server is running, you may want to attach to it to interact with the server. To attach to a running server, use:</p> <pre><code>docker compose attach &lt;service_name&gt;\n</code></pre> <p>Replace <code>&lt;service_name&gt;</code> with the name of the service defined in your <code>compose.yml</code> file, such as <code>mangosd</code>. This command connects your terminal to the container\u2019s standard output, letting you monitor logs and server activity in real time.</p> <p>Tip</p> <p>Avoid canceling the <code>attach</code> command using Ctrl+C (or equivalen for your operating system), as this will stop the server. To safely detach without interrupting the server, press:</p> <ul> <li>Ctrl+P then Ctrl+Q on Linux/Mac</li> <li>Ctrl+P then Ctrl+Q on Windows (PowerShell or Command Prompt)</li> </ul> <p>If you do accidently close it, you can just run the steps outlined in \"Starting the Server\"</p>"},{"location":"thoriumlxc/compose/#stopping-the-server","title":"Stopping the Server","text":"<p>If you need to pause the running server without removing the containers, you can type:</p> <pre><code>docker compose stop\n</code></pre> <p>Stopping works well if you plan to resume operations soon and would like to avoid recreating containers. It halts the running processes but leaves them on your system in a stopped state.</p>"},{"location":"thoriumlxc/compose/#removing-containers","title":"Removing Containers","text":"<p>To remove the containers completely and free up any resources they consume, you can type:</p> <pre><code>docker compose down\n</code></pre> <p>Removing containers can be useful if you want a clean environment each time you start the server. When you run <code>down</code>, Docker Compose not only stops the containers but also deletes them from your system.</p>"},{"location":"thoriumlxc/compose/#full-cleanup","title":"Full Cleanup","text":"<p>If you wish to remove all the containers and the underlying images they depend on, you can type:</p> <pre><code>docker compose down --rmi all\n</code></pre> <p>This command fully cleans everything associated with this project\u2019s Docker environment, including the images. Keep in mind that if you run this command and later choose to start the server again, Docker will need to pull the images once more, which may take some time depending on your internet speed.</p>"},{"location":"thoriumlxc/compose/#viewing-logs","title":"Viewing Logs","text":"<p>While the server is running, you can inspect its logs by typing:</p> <pre><code>docker compose logs\n</code></pre> <p>This command shows the output generated by the containers. If you want to follow the logs in real time and watch new entries as they appear, add the <code>-f</code> flag:</p> <pre><code>docker compose logs -f\n</code></pre> <p>Viewing the logs is a practical way to troubleshoot any issues or just keep track of what the server is doing.</p>"},{"location":"thoriumlxc/installation/","title":"Installation Guide","text":"<p>ThoriumLXC is an opinionated set of container images designed to run cMaNGOS, vMaNGOS, and similar projects within Docker containers. Container images are like packaged \u201cblueprints\u201d that include everything an application needs to run\u2014its code, system tools, and libraries.</p> <p>Instead of installing software on each machine and worrying about differences in settings, you can think of container images as self-contained boxes that work the same wherever they go.</p> <p></p> <p>Docker is a popular tool that creates, shares, and runs these containers. It takes a container image, places it in a controlled environment (\u201cthe container\u201d), and ensures it runs the same way on any system.</p> <p>This makes it simpler to ship, and maintain software without worrying about the nitty-gritty details of each machine\u2019s setup.</p>"},{"location":"thoriumlxc/installation/#a-terminal-environment","title":"A Terminal Environment","text":"Windows MacOS Ubuntu (Linux) <p>A terminal environment is a text-based window where you type commands to communicate directly with a computer\u2019s operating system. Think of it as a simple interface\u2014no buttons or icons\u2014just typed instructions and responses. You'll need a terminal to work with Docker Compose, which is a tool for defining and running multi-container applications.</p> <p>For Windows, it is recommended to use Windows Terminal. You can verify the terminal is working by running:</p> <pre><code>echo \"Hello\"\n</code></pre> <p></p> <p>The terminal should respond back with <code>Hello</code>. This will confirm that you have a working Terminal environment.</p> <p>A terminal environment is a text-based window where you type commands to communicate directly with a computer\u2019s operating system. Think of it as a simple interface\u2014no buttons or icons\u2014just typed instructions and responses. You'll need a terminal to work with Docker Compose, which is a tool for defining and running multi-container applications.</p> <p>The default Terminal app is sufficient.</p> <p>You can verify the terminal is working by running:</p> <pre><code>echo \"Hello\"\n</code></pre> <p></p> <p>The terminal should respond back with <code>Hello</code>. This will confirm that you have a working Terminal environment.</p> <p>A terminal environment is a text-based window where you type commands to communicate directly with a computer\u2019s operating system. Think of it as a simple interface\u2014no buttons or icons\u2014just typed instructions and responses. You'll need a terminal to work with Docker Compose, which is a tool for defining and running multi-container applications.</p> <p>Most distributions include a terminal by default.</p> <p>You can verify the terminal is working by running:</p> <pre><code>echo \"Hello World\"\n</code></pre> <p></p> <p>The terminal should respond back with <code>Hello</code>. This will confirm that you have a working Terminal environment.</p>"},{"location":"thoriumlxc/installation/#installing-docker","title":"Installing Docker","text":"Windows MacOS Ubuntu (Linux) <p>Follow these steps to install Docker Desktop on your Windows computer. This guide will help you through the process, even if you\u2019re not familiar with technical tools.</p> <p>When this has been completed, you should have an interface that looks something like this:</p> <p></p> <p>If you are able to see a screen like this, Docker is installed.</p> <p>Follow these steps to install Docker Desktop on your MacOS computer. This guide will help you through the process, even if you\u2019re not familiar with technical tools.</p> <p>When this has been completed, you should have an interface that looks something like this:</p> <p></p> <p>If you are able to see a screen like this, Docker is installed.</p> <p>Follow these steps to install Docker on your Linux computer. This guide will help you through the process, although it may be difficult if you are not familair with technical tools.</p> <p>If you encounter difficulties, following The Linux command line for beginners may help.</p> <p>When this has been completed, you should see something that looks like this in the terminal:</p> <p></p>"},{"location":"thoriumlxc/installation/#verifying-the-docker-installation","title":"Verifying the Docker Installation","text":"<p>Tip</p> <p>If you encounter issues while trying to setup Docker, you can review the troubleshooting processes to resolve the issues.</p> <p>Once Docker and a terminal is installed, you can verify the setup by running the \"Hello World\" container. This is a small test program packaged in Docker that runs a simple task: printing a confirmation message to show Docker is working correctly.</p> <p>Think of it like starting a new appliance for the first time to see if it powers on.</p> <p>Using the terminal from the previous step, type out (or  copy &amp; paste) the following text into the terminal</p> <pre><code>docker run hello-world\n</code></pre> <p>If the installation was successful, running this command should emit a message that looks like this:</p> <pre><code>$ docker run hello-world\nUnable to find image 'hello-world:latest' locally\nlatest: Pulling from library/hello-world\ne6590344b1a5: Download complete\nDigest: sha256:d715f14f9eca81473d9112df50457893aa4d099adeb4729f679006bf5ea12407\nStatus: Downloaded newer image for hello-world:latest\n\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n1. The Docker client contacted the Docker daemon.\n2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n    (amd64)\n3. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n4. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.\n\nTo try something more ambitious, you can run an Ubuntu container with:\n    $ docker run -it ubuntu bash\n\nShare images, automate workflows, and more with a free Docker ID:\n    https://hub.docker.com/\n\nFor more examples and ideas, visit:\n    https://docs.docker.com/get-started/\n</code></pre> <p>The output should look similar to this</p> <p></p> <p>With the installation complete, you can return to the getting started guide to set up the deployment configurations.</p>"},{"location":"thoriumlxc/overview/","title":"ThoriumLXC","text":"<p>ThoriumLXC is an opinionated set of container images designed to run CMangos, VMangos, and similar projects within Docker containers.Container images are like packaged \u201cblueprints\u201d that include everything an application needs to run\u2014its code, system tools, and libraries. Instead of installing software on each machine and worrying about differences in settings, you can think of container images as self-contained boxes that work the same wherever they go.</p> <p>These images are opinionated, with the expectation to be running with Docker Compose.</p> <p>You can learn more about the design of these in Design.</p>"},{"location":"thoriumlxc/overview/#prerequisite-installation","title":"Prerequisite Installation","text":"<p>Before diving into any of the individual container images, you'll need to perform the prerequisite installation steps outlined in the Installation Guide. These steps are responsible for installing everything you'd need to be able to run one of the environments.</p>"},{"location":"thoriumlxc/overview/#project-configurations","title":"Project Configurations","text":"<p>ThoriumLXC makes downloadable git repositories available that provide the Docker configurations for running the emulation servers. Th</p> <p>It assumes that Docker and Docker Compose are already installed on your system, if you have not installed them yet, please visit the installation guide. All commands shown here should be typed into a Terminal.</p> <p>All of the downloadable git repositories will follow the file structure:</p> <pre><code>.\n\u251c\u2500\u2500 compose.yaml\n\u251c\u2500\u2500 mangosd.conf\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 realmd.conf\n</code></pre> <p>This will look like the following within the file system viewer for your operating system:</p>"},{"location":"thoriumlxc/overview/#downloading-the-project","title":"Downloading the Project","text":"<p>Tip</p> <p>This is an overview, if you are looking for a specific guide, navigate to the project page</p> <p>To get the files for this a docker compose setup, you will visit the repository on GitHub. Under the green \u201cCode\u201d button (or in the \u201cReleases\u201d section, if one is provided), you will see an option to download a ZIP archive of the code. Download and save the ZIP archive to a location on your computer, then extract its contents. You will end up with a folder that includes the <code>docker-compose.yml</code> file and other necessary files for the Mangos server.</p> <p>After extracting, open your Terminal or Command Prompt and navigate to the newly created folder. For instance, you could type something like:</p> <pre><code>cd /path/to/unzipped/folder\n</code></pre> <p>Adjust the command above to match the folder location where you extracted the archive. Once you are inside this folder, the Docker Compose commands explained in the rest of this document will apply.</p>"},{"location":"thoriumlxc/overview/#container-images","title":"Container Images","text":"<p>Note</p> <p>Each container image has instructions for installing the specific container image.</p> vMaNGOScMaNGOS ClassiccMaNGOS TBCcMaNGOS WOTLKAzerothCore <p> vMaNGOS is an open-source project devoted to accurately recreating an earlier era of a classic fantasy MMO. Building on established frameworks, it offers a stable environment for enthusiasts who want to explore, preserve, or customize the original game content, staying true to the core gameplay and features.</p> <p> cMaNGOS Classic is an open-source project focused on recreating the gameplay and world from a well-known classic fantasy MMO era. It provides a stable, community-driven environment for enthusiasts who want to preserve and explore earlier game mechanics. With its emphasis on authenticity, cMaNGOS-Classic ensures that the original content\u2014quests, zones, and core systems\u2014remain as accurate as possible to their roots.</p> <p> cMaNGOS TBC is an open-source project dedicated to preserving and recreating the second major era of a classic fantasy MMO. Building on the foundation of earlier versions, cMaNGOS TBC incorporates new zones, gameplay improvements, and additional features while maintaining authenticity and stability, allowing enthusiasts to experience the progression of content in its earlier form.</p> <p> cMaNGOS WOTLK is an open-source project focused on recreating the third major era of a classic fantasy MMO. It expands on the previous content with new zones, storyline developments, and updated mechanics, while maintaining accuracy and stability. This allows enthusiasts to explore and experience the progression and features introduced during this iconic period.</p> <p> AzerothCore is an open-source MMO server framework that aims to provide a robust, flexible, and actively maintained environment for creating and running your own game worlds. It supports a variety of features and expansions, offering a strong base for developers and communities to build upon and customize.</p>"},{"location":"thoriumlxc/build/building/","title":"Builder Image","text":"<p>The Builder Image is responsible for compiling the emulator server. It includes in the source code and scripts for running the entire build process, from source code to final binary artifacts. If you have the builder image, you are capable of building your own variants of the source.</p> <p>What is: Compilation (Compiling)</p> <p>Imagine you wrote a recipe for a cake in a language only bakers understand, but your robot chef can't read it. Compilation is like translating your recipe into simple step-by-step instructions that the robot can follow and make the exact cake.</p> <pre><code>flowchart TD\n    A[Build Deps Image] --&gt; B[Builder Image]\n    B --&gt;|Build Artifacts| D[Release Image]\n    C[Runtime Image] --&gt;|Runtime Dependencies| D\n\n    classDef highlighted stroke-width:2px;\n    classDef faded fill-opacity:0.2,stroke:#000,stroke-width:1px;\n\n    class A faded;\n    class B highlighted;\n    class C faded;\n    class D faded;</code></pre>"},{"location":"thoriumlxc/build/building/#what-is-the-builder-image","title":"What is the Builder Image?","text":"<p>The Builder Image:</p> <ul> <li>Runs the Build Process: Executes all steps required to compile the emulator server.</li> <li>Includes a Specific Source Version: The source code is pre-baked into the image.</li> <li>Relies on Build Deps: Uses fixed dependencies from the Build Deps image to maintain a stable build environment.</li> <li>Supports Customization: You can set environment variables or pass additional arguments when running the image with <code>docker run</code> to adjust the build process as needed.</li> </ul>"},{"location":"thoriumlxc/build/building/#running-the-builder-image","title":"Running the Builder Image","text":"<p>Each image comes with its own instructions for building the emulator server with the Builder Image, but the general process can be understood like so.</p> <p>In a terminal, run a command:</p> <pre><code>docker run --name cmangos-build -v \"cmangos\":/opt/cmangos thoriumlxc/cmangos-builder:latest\n</code></pre> <p>Tip</p> <p>If the builder image isn't already downloaded, this command will download it, which can take a while given your internet speeds.</p> <ul> <li><code>docker run</code> is telling Docker to run the application contained within the image.</li> <li><code>thoriumlxc/cmangos-builder:latest</code> refers to the the Builder Image, which in this case is whatever is the most recently released version.</li> <li><code>--name cmangos-build</code> is telling Docker what you name this container you are spinning up.</li> <li><code>-v \"cmangos\":/opt/cmangos</code> makes available the folder <code>cmangos</code> on your machine, to the Docker environment. The build will write all of the server binaries to that <code>cmangos</code> folder on your side. <code>/opt/cmangos</code> is the folder that the build process sees.</li> </ul> <p>Tip</p> <p>Depending on your computer, this may take a while.</p> <p>After the build completes, the compiled artifacts are placed in an output directory inside the container, called <code>/opt/cmangos</code>. Since this directory was mounted, the files will already be written down in the folder <code>cmangos</code>.</p> <pre><code>// TODO: Fix this with actual outputs from the build\n.\n\u251c\u2500\u2500 compose.yaml\n\u251c\u2500\u2500 mangosd.conf\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 realmd.conf\n</code></pre>"},{"location":"thoriumlxc/build/building/#hermetic-builds-explained","title":"Hermetic Builds Explained","text":"<p>The Builder Image has mechanisms in place to attempt to produce hermetic builds. But what does \"hermetic\" mean in this context?</p> <p>This means that slight modifications have been made to the build processes of the upstream emulator server projects, as well as attempts to control external factors that could influence the build.</p> <p>In simple terms:</p> <ul> <li>The timestamp for the build artifacts is set to a fixed date</li> <li>The operating system, libraries, tools and system packages are fixed versions</li> <li>The emulator server project source code is a fixed version</li> <li>The emulator server build process has been modified to rely on fixed versions</li> </ul> <p>This should ensure that multiple runs of the Builder Image, with the exact same arguments, will yield bit-wise identical binaries.</p>"},{"location":"thoriumlxc/build/building/#summary","title":"Summary","text":"<ul> <li>The Builder Image handles the full build process for the emulator server.</li> <li>It uses pre-baked source code</li> <li>It uses fixed dependencies from the Build Deps image.</li> <li>You can customize builds with environment variables or arguments via <code>docker run</code>.</li> <li>Hermetic builds ensure that every build is consistent and reproducible, no matter where or when it's run.</li> </ul>"},{"location":"thoriumlxc/build/deps/","title":"Build Deps","text":"<p>ThoriumLXC container image architecture follows a modular approach, breaking down the build process into distinct layers. The starting point of this architecture is the Build Dependencies layer, which manages the libraries, tools and system packages required to compile the emulator server.</p> <p>Tip</p> <p>Build Dependencies are often shortened to \"BuildDeps\" or just \"Deps\"</p> <pre><code>flowchart TD\n    A[Build Deps Image] --&gt; B[Builder Image]\n    B --&gt;|Build Artifacts| D[Release Image]\n    C[Runtime Image] --&gt;|Runtime Dependencies| D\n\n    classDef highlighted stroke-width:2px;\n    classDef faded fill-opacity:0.2,stroke:#000,stroke-width:1px;\n\n    class A highlighted;\n    class B faded;\n    class C faded;\n    class D faded;</code></pre>"},{"location":"thoriumlxc/build/deps/#what-are-build-deps","title":"What are Build Deps?","text":"<p>Build Deps (short for Build Dependencies) refer to the essential system libraries, development tools, and other dependencies needed to build the emulator server. These include:</p> <ul> <li>Standard Libraries (e.g., <code>libc</code>, <code>libssl</code>)</li> <li>Development Tools (e.g., <code>gcc</code>, <code>make</code>, <code>cmake</code>)</li> <li>Debian Packages required for compiling the source code</li> <li>Other system-level dependencies essential for the build process</li> </ul> <p>These dependencies are only used during the build phase and are not included in the final runtime image.</p>"},{"location":"thoriumlxc/build/deps/#the-builder-image","title":"The Builder Image","text":"<p>The Builder image builds on top of the Build Deps image, which will use these dependencies to build the source code bundled within the builder. This means that for a new version of the source code, the builder image will change, but the Build Deps image will not.</p> <p>The Builder image is solely responsible for the build process. It does not include runtime components, keeping it focused and optimized for its purpose.</p>"},{"location":"thoriumlxc/build/deps/#how-it-all-fits-together","title":"How It All Fits Together","text":"<ol> <li>Build Deps Layer: Provides the tools, libraries &amp; system packages required to build.</li> <li>Builder Image: Utilizes the Build Deps layer to compile the server code.</li> <li>Release Runtime Image: Contains only the compiled binaries and runtime dependencies.</li> </ol>"},{"location":"thoriumlxc/build/overview/","title":"The Build Architecture","text":"<p>The emulator server is packaged using a build pattern that works with <code>rules_oci</code> of Bazel to attempt to create hermetic container images. This pattern breaks the build process into distinct stages, with each stage focusing on a specific part of the process. By separating the build into layers, you can tell when things have changed.</p> <p>What is: Hermetic</p> <p>A hermetic build is like baking a cake in a sealed factory where everything is already inside\u2014perfectly measured ingredients, the same oven, and even the same temperature every time. Since nothing from the outside can change it, the cake will always turn out exactly the same, no surprises.</p> <p>Think of this process like baking a cake:</p> <ul> <li>You gather your ingredients (dependencies).</li> <li>Mix and bake the cake (build the server).</li> <li>Setup the decorations &amp; packages (runtime environment).</li> <li>Package the cake &amp; add the release decorations (release image ready to serve).</li> </ul> <p>Here's how this pattern works:</p> <pre><code>flowchart TD\n    A[Build Deps Image] --&gt; B[Builder Image]\n    B --&gt;|Build Artifacts| D[Release Image]\n    C[Runtime Image] --&gt;|Runtime Dependencies| D\n\n    classDef deps stroke-width:2px;\n    classDef builder stroke-width:2px;\n    classDef runtime stroke-width:2px;\n    classDef release stroke-width:2px;\n\n    class A deps;\n    class B builder;\n    class C runtime;\n    class D release;</code></pre>"},{"location":"thoriumlxc/build/overview/#the-four-layers-of-the-build-pattern","title":"The Four Layers of the Build Pattern","text":""},{"location":"thoriumlxc/build/overview/#build-dependencies-image","title":"Build Dependencies Image","text":"<p>Think of this as your pantry of ingredients</p> <p>This image contains all the tools, libraries, and system packages needed to build the emulator server. It includes things like compilers, standard libraries, and other software required to turn the source code into a working program.</p> <ul> <li>Purpose: Provides the foundation for the build process.</li> <li>Key Point: It's not part of the release server. It's only used to help \"mix the ingredients.\"</li> </ul>"},{"location":"thoriumlxc/build/overview/#builder-image","title":"Builder Image","text":"<p>This is like the kitchen where you prepare the cake</p> <p>This image builds on top of the build dependencies image, bundling in the source code. Using the tools made available from the dependencies image, it can compile the source into working server binaries (the actual program files that run the game server).</p> <ul> <li>Purpose: Runs the build process, producing the emulation server binaries (the server).</li> <li>Key Point: Includes a specific version of the source code, ensuring the same result every time.</li> </ul>"},{"location":"thoriumlxc/build/overview/#runtime-image","title":"Runtime Image","text":"<p>Now the cake is baked, and you've cleaned up the kitchen. Only the cake remains</p> <p>This image is a clean, minimal environment that contains only the libraries and system packages needed to run the server\u2014nothing extra. All the build tools and unnecessary files are not included in this image.</p> <ul> <li>Purpose: Provides the environment where the emulator server will run.</li> <li>Key Point: Smaller, faster, and less to go wrong because it doesn't include unnecessary tools.</li> </ul>"},{"location":"thoriumlxc/build/overview/#release-image","title":"Release Image","text":"<p>This is the beautifully decorated cake, ready to serve.</p> <p>This image builds on top of the runtime image, bundling in the built server binaries from the Builder and adds any default configuration files. This is the image you'll actually deploy to run your emulation server.</p> <ul> <li>Purpose: The complete, deployable server image.</li> <li>Key Point: Contains everything needed to run the emulation server in production.</li> </ul>"},{"location":"thoriumlxc/build/release/","title":"Release Image","text":"<p>The release image builds on top of the runtime image, bundling in the built server binaries from the Builder and adds any default configuration files. This is the image you'll actually deploy to run your emulation server, and is usually named after the emulator server project like so:</p> <ul> <li><code>thorium-lxc/cmangos-classic:bots:2025-01-01</code></li> </ul> <p>These release images won't just be the emulator server binaries, but also any default configuration files that make sense for the emulator server. This can be things like defaults for database connections in a Docker Compose environment.</p> <p>One of the previously unmentioned images is the Database image. This is a very simple image that pre-bakes the database configuration files for the emulator server into an existing container image for a database application.</p> <p>What is: Database</p> <p>A database is like a super-organized filing cabinet for information. Instead of keeping everything in random piles, it stores and organizes data so you can quickly find exactly what you need.</p> <p>For example, imagine a library where each book is a piece of information. A database is the system that knows where every book is, what it\u2019s called, and how to find it in seconds.</p> <p>The database for the emulator servers is MariaDB.</p> <p>This image isn't relevant to the build process of the emulator servers, but is notable for its use alongside the release image in being actually used.</p> <pre><code>flowchart TD\n    A[Build Deps Image] --&gt; B[Builder Image]\n    B --&gt;|Build Artifacts| D[Release Image]\n    C[Runtime Image] --&gt;|Runtime Dependencies| D\n    E[Database Image] --&gt; D\n    D --&gt; E\n\n    classDef highlighted stroke-width:2px;\n    classDef faded fill-opacity:0.2,stroke:#000,stroke-width:1px;\n\n    class A faded;\n    class B faded;\n    class C faded;\n    class D highlighted;\n    class E highlighted;</code></pre>"},{"location":"thoriumlxc/build/release/#what-is-the-release-image","title":"What is the Release Image?","text":"<p>The Release Image:</p> <ul> <li>Builds on the Runtime Image: Contains the built server binaries and default configuration files.</li> <li>Ready for Deployment: This is the image you\u2019ll actually use to run your emulation server.</li> <li>Preconfigured Defaults: Bundles configuration files for things like database connections and server settings.</li> <li>Supports Docker Compose: Docker Compose example environments reference these images.</li> </ul>"},{"location":"thoriumlxc/build/release/#what-is-the-database-image","title":"What is the Database Image?","text":"<p>The Database Image:</p> <ul> <li>Builds on a database image MariaDB: Using the prebuilt containers from MariaDB.</li> <li>Prebaked SQL Data: Server data is stored in SQL Files, loaded when the image starts up for the first time.</li> </ul>"},{"location":"thoriumlxc/build/runtime/","title":"Runtime Image","text":"<p>The Runtime Dependencies layer, shortened to Runtime layer, manages the libraries and system packages required to run the emulator server. This image has no code, binaries or build dependencies.</p> <pre><code>flowchart TD\n    A[Build Deps Image] --&gt; B[Builder Image]\n    B --&gt;|Build Artifacts| D[Release Image]\n    C[Runtime Image] --&gt;|Runtime Dependencies| D\n\n    classDef highlighted stroke-width:2px;\n    classDef faded fill-opacity:0.2,stroke:#000,stroke-width:1px;\n\n    class A faded;\n    class B faded;\n    class C highlighted;\n    class D faded;</code></pre>"},{"location":"thoriumlxc/build/runtime/#what-is-the-runtime-image","title":"What is the Runtime Image?","text":"<p>The Runtime Image:</p> <ul> <li>Contains Only Runtime Dependencies: Unlike the Build Deps image, which includes tools needed for compiling code, the Runtime Image includes just the libraries and packages required for the emulator server to function.</li> <li>Separates the binaries from system dependencies: Similar to the Build Deps &amp; Builder image, this image separates the runtime dependencies from the emulator server binaries.</li> </ul>"},{"location":"thoriumlxc/configuration/mangosd/","title":"MangosD Configuration Guide","text":""},{"location":"thoriumlxc/configuration/mangosd/#what-is-mangosdconf","title":"What is <code>mangosd.conf</code>?","text":"<p>The <code>mangosd.conf</code> file is the main configuration file for a Massive Network Game Object Servers (MaNGOS) server. It contains settings that control how the server operates, including server name, rates, logging, and more.</p> <p>Think of it as the \"control center\" for your emulator server: if you need to tweak gameplay rates or game data, you\u2019ll find the relevant settings here.</p>"},{"location":"thoriumlxc/configuration/mangosd/#example-configuration","title":"Example Configuration","text":"<p>The <code>mangosd.conf</code> is made available in the predefined git repositories, setting alongside a docker compose <code>compose.yaml</code>. These are \"mounted\" into the containers, making the configuration files available to the server.</p> <p>Below is a basic example of how the mounting of the <code>mangosd.conf</code> file into a Docker Compose container works:</p> <pre><code>services:\n  mangos:\n    image: thoriumlxc/mockserver:latest\n    volumes:\n      - ./mangosd.conf:/opt/mangos/mangosd.conf\n    # Additional environment variables or configurations can go here\n</code></pre> <p>This works by working relative to the path of the <code>compose.yaml</code> file. So if you file is located at <code>/some/path/to/file/compose.yaml</code>, then your file would be next it within the same directory at <code>/some/path/to/file/mangosd.conf</code></p> <pre><code>.\n\u251c\u2500\u2500 compose.yaml\n\u251c\u2500\u2500 mangosd.conf\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 realmd.conf\n</code></pre> <p>For Windows</p> <p>On Windows, these paths will be in the form of <code>C:\\some\\path\\to\\file\\</code>, as Windows uses <code>\\</code> and MacOS/Linux use <code>\\</code> for indicating paths. Most likely your path is somewhere in your home directory like <code>C:\\Users\\LocalUser\\ThoriumLXC</code>.</p>"},{"location":"thoriumlxc/configuration/mangosd/#configuration-options","title":"Configuration Options","text":"<p>Here are a few commonly used settings from the <code>mangosd.conf</code> file, as examples of what is within this file. You should look at each individual project for the specific project options.</p> Config Key Description <code>RealmID</code> A unique numeric identifier for your realm. If you have multiple realms, each needs a different ID. <code>DataDir</code> The file system path where your game data is stored. Example: <code>/usr/local/cmangos/data/</code> <code>WorldDatabaseInfo</code> The connection details for your World database. Includes host, port, username, password, and database name. Example: <code>127.0.0.1;3306;root;password;cmangos_world</code> <code>Rates.Health</code> Adjusts how quickly players regenerate health. A higher value means faster regeneration. <code>Rates.DropMoney</code> Controls how much gold creatures drop. A lower value decreases dropped gold; a higher value increases it."},{"location":"thoriumlxc/configuration/realmd/","title":"RealmD Configuration Guide","text":""},{"location":"thoriumlxc/configuration/realmd/#what-is-realmdconf","title":"What is <code>realmd.conf</code>","text":"<p>The <code>realmd.conf</code> file is the primary configuration file for the authentication server in the emulator server. It handles user logins and connections, specifying settings such as database connections, IP bindings, and security options.</p>"},{"location":"thoriumlxc/configuration/realmd/#example-configuration","title":"Example Configuration","text":"<p>The <code>realmd.conf</code> is made available in the predefined git repositories, setting alongside a docker compose <code>compose.yaml</code>. These are \"mounted\" into the containers, making the configuration files available to the server.</p> <p>Below is a basic example of how the mounting of the <code>realmd.conf</code> file into a Docker Compose container works:</p> <pre><code>services:\n  mangos:\n    image: thoriumlxc/mockserver:latest\n    volumes:\n      - ./realmd.conf:/opt/mangos/realmd.conf\n    # Additional environment variables or configurations can go here\n</code></pre> <p>This works by working relative to the path of the <code>compose.yaml</code> file. So if you file is located at <code>/some/path/to/file/compose.yaml</code>, then your file would be next it within the same directory at <code>/some/path/to/file/realmd.conf</code></p> <pre><code>.\n\u251c\u2500\u2500 compose.yaml\n\u251c\u2500\u2500 mangosd.conf\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 realmd.conf\n</code></pre> <p>For Windows</p> <p>On Windows, these paths will be in the form of <code>C:\\some\\path\\to\\file\\</code>, as Windows uses <code>\\</code> and MacOS/Linux use <code>\\</code> for indicating paths. Most likely your path is somewhere in your home directory like <code>C:\\Users\\LocalUser\\ThoriumLXC</code>.</p>"},{"location":"thoriumlxc/configuration/realmd/#configuration-options","title":"Configuration Options","text":"<p>Here are a few commonly used settings from the <code>realmd.conf</code> file, as examples of what is within this file. You should look at each individual project for the specific project options.</p> Config Key Description <code>LoginDatabaseInfo</code> Sets the database connection details for the authentication server. <code>ListenHost</code> Defines the IP address the server listens on. <code>ListenPort</code> Specifies the port for incoming connections. <code>MaxPingTime</code> Determines the maximum time to wait for client responses. <code>LogLevel</code> Controls the verbosity of logs for troubleshooting purposes."},{"location":"thoriumlxc/database/backups/","title":"Backups &amp; Restore","text":"<p>With the Docker Compose configuration, it is possible to create a simple setup for database backups. The MariaDB image comes up the tooling to dump the entire database to disk, which allows for backup &amp; restoration.</p> <p>To back up the database, you'll use a tool like <code>mariadb-dump</code>, which is commonly used for creating backups of MariaDB databases.</p> <p>Hold Up!</p> <p>This is a work in progress that hasn't yet been tested</p>"},{"location":"thoriumlxc/database/backups/#docker-compose-example","title":"Docker Compose Example","text":"<p>Assuming that a ThoriumLXC configuration is deployed like so:</p> <pre><code>services:\n  database:\n    image: mariadb:latest\n    environment:\n      MARIADB_ROOT_PASSWORD: example_password\n      MARIADB_DATABASE: example_db\n    volumes:\n      - db_data:/var/lib/mysql\n\nvolumes:\n  db_data:\n    driver: local\n</code></pre> <p>You can create a backup of this database by running the following command:</p> <pre><code>docker compose exec database sh -c 'mariadb-dump --all-databases -u root -p\"$MARIADB_ROOT_PASSWORD\" &gt; backup/db.sql'\n</code></pre>"},{"location":"thoriumlxc/database/backups/#explanation-of-example","title":"Explanation of Example","text":"<ol> <li>MariaDB Service:</li> <li>This service (<code>mariadb</code>) runs a MariaDB container.</li> <li><code>MARIADB_ROOT_PASSWORD</code> sets the root password for the database.</li> <li><code>MARIADB_DATABASE</code> creates a new database named <code>example_db</code>.</li> <li> <p>The volume <code>db_data</code> persists the database data.</p> </li> <li> <p>Backup Service:</p> </li> <li>This service (<code>backup</code>) uses the same image as MariaDB to use the <code>mysqldump</code> tool.</li> <li>It mounts the <code>db_data</code> volume to access the database files.</li> <li>It also mounts a <code>./backups</code> folder from the host to store backups.</li> <li>The <code>command</code> field uses <code>mysqldump</code> to export the database to a file named <code>backup.sql</code> inside the <code>backups</code> folder.</li> </ol>"},{"location":"thoriumlxc/database/mariadb/","title":"What is MariaDB?","text":"<p>MariaDB is an open-source database system, very similar to  MySQL, used to store and manage data. ThoriumLXC uses it as the database of choice, including useful bootstrapping scripts.</p> <p>What is: Database</p> <p>Think of it as a digital filing cabinet that organizes and keeps track of all the information your application needs. In the context of an emulator server, MariaDB stores essential game data like character information, items, and the state of the game world.</p> <p>That way, when the server want to know something about a character, it knows exactly where to look.</p>"},{"location":"thoriumlxc/database/mariadb/#how-mariadb-fits-into-the-architecture","title":"How MariaDB Fits into the Architecture","text":"<p>In an emulator server, MariaDB acts as the brain that stores all the game\u2019s important information. Every time a player logs in, picks up an item, or interacts with the game world, the emulator server talks to MariaDB to update or retrieve that information. This ensures everything stays consistent and accurate.</p> <p>With containers, the MariaDB container is running the database server, and any of its database can be written to a volume. A volume is just a filesystem, like you have on your own machine, just packaged up like the container image is.</p> <pre><code>services:\n  database:\n    image: mariadb:10.5\n    volumes:\n      - mariadb_data:/var/lib/mysql\n    ports:\n      - \"3306:3306\"\n\nvolumes:\n  mariadb_data:\n    driver: local\n</code></pre> <p>The emulator server doesn\u2019t store game data directly in files; instead, it asks MariaDB, \"Hey, what characters are logged in?\" or \"What items does this player have?\" MariaDB responds with the right information, keeping the game running smoothly.</p>"},{"location":"thoriumlxc/database/mariadb/#connection-details-in-emulator-server","title":"Connection Details in emulator server","text":"<p>The connection between the emulator server and MariaDB is defined in configuration files of <code>realmd.conf</code> and <code>mangosd.conf</code>. These files tell the emulator server where to find the database and how to connect, including:</p> <ul> <li>Database server address: This tells the emulator server where the database lives (e.g., a specific server IP).</li> <li>User credentials: The username and password the emulator server needs to access the database.</li> <li>Database names: Each database holds different types of information, such as character data or game world data.</li> </ul> <p>Docker compose simplifies this for us, as instead of needing to know the server address, or credentials, we can simply use the name we've given the MariaDB container (e.g. <code>database</code>).</p>"},{"location":"thoriumlxc/database/mariadb/#what-is-phpmyadmin","title":"What is phpMyAdmin?","text":"<p>phpMyAdmin is like Google Sheets or Excel for your database. It gives you a friendly web interface so you can easily view and edit the data inside MariaDB. You can think of it as a window into your database\u2014you can see all the tables and rows of data.</p> <p>Hold Up!</p> <p>If you need to do something simple like increasing a level, adding an item, it's recommended to use the dot-commands (<code>.account</code>, <code>.additem</code>) rather than directly modifying the database.</p> <p>As sometimes these operations are more than just modifying a single column in the database.</p> <p>For example, you can open phpMyAdmin and look at a list of characters in the game, edit their level, or delete items from their inventory.</p>"},{"location":"thoriumlxc/design/overview/","title":"Overview","text":"<p>I started ThoriumLXC after spending some time experimenting with emulator game servers. Switching between server versions or variants but resuming progress from a backup often failed. There were several containerized solutions available for these emulator services, but each approached things differently, and I felt like I was starting from scratch each time.</p> <p>That's when I started working on ThoriumLXC, hoping to create a plug-and-play solution for easily spinning up different servers. The idea was simple: stop a server at any time (&amp; backup the game data) and start it back up later without any hassle.</p> <p>For running these environments, I decided to use Docker and Docker Compose since they make starting and stopping services so much easier. For building the container images, I went with Bazel because I wanted to see if I could make the build process more predictable. In simple terms, every build would always produce exactly the same result, no matter where or when it runs. It also gave me a chance to experiment with <code>rules_oci</code>, a new way in Bazel of building container images.</p>"},{"location":"thoriumlxc/design/overview/#docker","title":"Docker","text":"<p>Docker is a tool that bundles an application (like a game server emulator) with everything it needs\u2014code, libraries, system tools, and more\u2014into a portable \"container\".</p> <p>Think of it like a lunchbox: once everything is inside, it's the same no matter where you open it.</p> <p>I've used containers while working within Cloud environments, and for services I self-host on my own home servers. I find it makes things easier, especially when it comes to things like backups, moving between hardware, or stop/start projects.</p> <p>Why Docker for ThoriumLXC?</p> <ul> <li>No installs: No need to manually install runtime libraries or handle multiple programs.</li> <li>Simple updates: If a new version is released, you just download the updated container.</li> <li>Quick resets: If something goes wrong, remove the container and start fresh.</li> <li>Portable: Moving to different hardware is easy\u2014just restore the game data from a backup</li> <li>Rollbacks: If something is off in a new version, just use an older version tag.</li> </ul>"},{"location":"thoriumlxc/design/overview/#docker-compose","title":"Docker Compose","text":"<p>When your setup needs multiple containers, like an emulator server plus a database, Docker Compose launches them all together with a single command and manages them as a group. It acts as a coordinator, so you don't have to start each piece one by one. This handles thing like dependencies, where a server relies on a database being up to start correctly.</p> <p>Why Docker Compose for ThoriumLXC?</p> <ul> <li>Easier management: Launch or shut down every container at once.</li> <li>Portable configuration: Create a repository with a configuration that can be booted up quickly.</li> <li>Clear organization: You define everything in a single file, making it simple to see how the pieces connect.</li> <li>Administration: You can easily bring along backups, supporting services, and configuration files.</li> </ul>"},{"location":"thoriumlxc/design/overview/#bazel","title":"Bazel","text":"<p>Bazel is a \"build system\"\u2014it packages your code and files into the final container images, consistently producing the same results every time. This means that for a given version of the emulator code, the build will produce an identical container image every time.</p> <p>I chose Bazel because I was already familiar with it, and wanted to take the opportunity to work with the new <code>rules_oci</code> ruleset, which makes it easier to build container images within Bazel. The <code>rules_oci</code> offer a different experience than working with Dockerfiles, and has notable quirks when it comes to ad-hoc scripts. This resulted in a different build experience that worked out, but probably isn't the best practice.</p> <p>One of Bazel's big advantages is its support for hermetic builds. This means that identical source files would produce identical containers.</p> <p>Why Bazel for ThoriumLXC?</p> <ul> <li>Predictable builds: Every container image is built in a repeatable way, reducing surprises.</li> <li>Variant Management: Managing different versions or optional builds is easy.</li> <li>Smooth experimentation: Building and testing new versions is easier when the process is the same every time.</li> <li>Hermetic Outputs: If the container image is the same as the source, then it's easier to confirm no tampering.</li> </ul> <p>In short, I mostly just wanted to tinker with Bazel and figured it would be pretty straightforward.</p>"},{"location":"vmangos/client-data/","title":"Client Data","text":""},{"location":"vmangos/clients/","title":"Supported Clients","text":"<p>Supported Clients</p>"},{"location":"vmangos/installation/","title":"Installing cMaNGOS Classic","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"vmangos/installation/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"vmangos/installation/#sample-title","title":"Sample Title","text":"<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Ctrl+Alt+Del</p>"},{"location":"vmangos/installation/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"vmangos/overview/","title":"Getting Started with cMaNGOS Classic","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"vmangos/overview/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"vmangos/overview/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"vmangos/versions/","title":"Versions","text":"<p>Versions</p>"},{"location":"vmangos/build/building/","title":"Builder Image","text":"<p>The Builder Image is the core component responsible for compiling the CMangos server. It handles the entire build process, from source code to final binary artifacts, ensuring consistency and reliability across different environments.</p>"},{"location":"vmangos/build/building/#what-is-the-builder-image","title":"What is the Builder Image?","text":"<p>The Builder Image:</p> <ul> <li>Runs the Build Process: Executes all steps required to compile CMangos.</li> <li>Includes a Specific Source Version: The source code is pre-baked into the image, ensuring version consistency.</li> <li>Relies on Build Deps: Uses fixed dependencies from the Build Deps image to maintain a stable build environment.</li> <li>Supports Customization: You can set environment variables or pass additional arguments when running the image with <code>docker run</code> to adjust the build process as needed.</li> </ul>"},{"location":"vmangos/build/building/#running-the-builder-image","title":"Running the Builder Image","text":"<p>To build CMangos using the Builder Image, you can run:</p> <pre><code>docker run -e BUILD_OPTION=optimized mockorg/cmangos-builder:2024.02.03-1\n</code></pre> <ul> <li><code>-e BUILD_OPTION=optimized</code> sets an environment variable that customizes the build.</li> <li><code>mockorg/cmangos-builder:2024.02.03-1</code> refers to the specific version of the Builder Image.</li> </ul> <p>After the build completes, the compiled artifacts are placed in an output directory inside the container. You can extract these artifacts by mounting a volume:</p> <pre><code>docker run -v $(pwd)/output:/output mockorg/cmangos-builder:2024.02.03-1\n</code></pre> <p>This command saves the build results to your local <code>output</code> folder.</p>"},{"location":"vmangos/build/building/#hermetic-builds-explained","title":"Hermetic Builds Explained","text":"<p>The Builder Image is designed to produce hermetic builds. But what does \"hermetic\" mean in this context?</p> <p>In simple terms:</p> <p>A hermetic build means that the build process is completely self-contained. It doesn\u2019t rely on anything outside of the Builder Image. This ensures that:</p> <ul> <li>Same Input = Same Output: No matter when or where you run the build, if the source code and settings are the same, the resulting binaries will be identical.</li> <li>No External Influence: The build isn\u2019t affected by your computer\u2019s settings, installed software, or even the current date and time.</li> <li>Predictable Results: Every build is like following a precise recipe\u2014no surprises.</li> </ul> <p>This is achieved by:</p> <ul> <li>Pre-baking the source code into the image.</li> <li>Using fixed dependencies from the Build Deps layer.</li> <li>Controlling the build environment strictly within Docker.</li> </ul>"},{"location":"vmangos/build/building/#why-hermetic-builds-matter","title":"Why Hermetic Builds Matter","text":"<ul> <li>Consistency: Developers and users get the same results every time.</li> <li>Reliability: Easier to debug because there are no hidden variables affecting the build.</li> <li>Security: Reduces risks from external changes, like updates to system libraries or tools.</li> </ul>"},{"location":"vmangos/build/building/#summary","title":"Summary","text":"<ul> <li>The Builder Image handles the full build process for CMangos.</li> <li>It uses pre-baked source code and fixed dependencies from the Build Deps image.</li> <li>You can customize builds with environment variables or arguments via <code>docker run</code>.</li> <li>Hermetic builds ensure that every build is consistent, reproducible, and reliable, no matter where or when it\u2019s run.</li> </ul>"},{"location":"vmangos/build/deps/","title":"Build Deps","text":"<p>The CMangos Docker image architecture follows a modular approach, breaking down the build process into distinct layers for consistency, reproducibility, and maintainability. A critical part of this architecture is the Build Deps layer, which manages the foundational build dependencies required to compile the CMangos server.</p>"},{"location":"vmangos/build/deps/#what-are-build-deps","title":"What are Build Deps?","text":"<p>Build Deps (short for Build Dependencies) refer to the essential system libraries, development tools, and other dependencies needed to build the CMangos project. These include:</p> <ul> <li>Standard Libraries (e.g., <code>libc</code>, <code>libssl</code>)</li> <li>Development Tools (e.g., <code>gcc</code>, <code>make</code>, <code>cmake</code>)</li> <li>Debian Packages required for compiling the source code</li> <li>Other system-level dependencies essential for the build process</li> </ul> <p>These dependencies are only used during the build phase and are not included in the final runtime image, keeping the production environment clean and lightweight.</p>"},{"location":"vmangos/build/deps/#deterministic-builds-with-bazel-and-rules-oci","title":"Deterministic Builds with Bazel and Rules OCI","text":"<p>To ensure that builds are deterministic\u2014meaning the same source code always produces the same output\u2014we use Bazel along with Rules OCI. This combination offers several advantages:</p> <ul> <li>Reproducibility: Regardless of when or where the build occurs, the output will be identical if the source code version remains the same.</li> <li>Version Control: Build dependencies are pinned to specific versions, eliminating inconsistencies from upstream package changes.</li> <li>Efficiency: Bazel\u2019s caching and precise dependency management speed up rebuilds, especially for minor changes.</li> </ul> <p>By leveraging Bazel and Rules OCI, we eliminate variables that could affect build outcomes, ensuring reliable results across development, testing, and production environments.</p>"},{"location":"vmangos/build/deps/#the-builder-image","title":"The Builder Image","text":"<p>The Builder image builds on top of the Build Deps layer. It contains everything required to compile the CMangos server, including:</p> <ul> <li>Pre-installed Build Deps: All necessary libraries and tools for building the source code.</li> <li>Build Scripts and Steps: Automated processes baked into the image to handle compilation.</li> <li>Environment Variables: Configurations required during the build process.</li> <li>Upstream Source Code: Integrated directly from official repositories for clean, version-controlled builds.</li> </ul> <p>The Builder image is solely responsible for the build process. It does not include runtime components, keeping it focused and optimized for its purpose.</p>"},{"location":"vmangos/build/deps/#how-it-all-fits-together","title":"How It All Fits Together","text":"<ol> <li>Build Deps Layer: Provides the foundational dependencies required to build CMangos.</li> <li>Builder Image: Utilizes the Build Deps layer to compile the server code and manage build configurations.</li> <li>Final Runtime Image: Contains only the compiled binaries and runtime dependencies, optimized for performance and minimal size.</li> </ol> <p>This layered architecture allows for greater flexibility, easier updates, and improved security by separating build tools from the final production environment.</p>"},{"location":"vmangos/build/deps/#summary","title":"Summary","text":"<ul> <li>Build Deps manage the critical dependencies required for building CMangos.</li> <li>Dependencies are installed using Bazel and Rules OCI for deterministic, reproducible builds.</li> <li>The Builder Image leverages Build Deps to execute build steps, manage environment variables, and integrate upstream source code.</li> <li>This modular design ensures clean, consistent builds and optimized runtime environments.</li> </ul>"},{"location":"vmangos/build/overview/","title":"High-Level Overview of the Image Build Pattern","text":"<p>The CMangos server is packaged using a carefully designed build pattern that ensures consistency, reliability, and ease of deployment. This pattern breaks the build process into distinct stages, with each stage focusing on a specific part of the process. By separating the build into layers, we can create clean, efficient, and predictable server images that are easy to manage and update.</p> <p>Think of this process like baking a cake:</p> <ul> <li>You gather your ingredients (dependencies).</li> <li>Mix and bake the cake (build the server).</li> <li>Remove the baking tools (runtime environment).</li> <li>Add the final decorations and packaging (final image ready to serve).</li> </ul> <p>Here\u2019s how this pattern works for CMangos:</p> <pre><code>flowchart TD\n    A[Build Deps Image] --&gt; B[Builder Image]\n    B --&gt;|Build Artifacts| D[Final Image]\n    C[Runtime Image] --&gt;|Runtime Dependencies| D\n\n    D --&gt; E[Deployment]\n\n    classDef deps stroke-width:2px;\n    classDef builder stroke-width:2px;\n    classDef runtime stroke-width:2px;\n    classDef final stroke-width:2px;\n\n    class A deps;\n    class B builder;\n    class C runtime;\n    class D final;\n</code></pre>"},{"location":"vmangos/build/overview/#the-four-layers-of-the-build-pattern","title":"The Four Layers of the Build Pattern","text":"<ol> <li> <p>Build Deps (Build Dependencies) Image    Think of this as your pantry of ingredients.    This image contains all the tools, libraries, and system packages needed to build the CMangos server. It includes things like compilers, standard libraries, and other software required to turn the source code into a working program.</p> </li> <li> <p>Purpose: Provides the foundation for the build process.</p> </li> <li> <p>Key Point: It\u2019s not part of the final server. It\u2019s only used to help \"mix the ingredients.\"</p> </li> <li> <p>Builder Image    This is like the kitchen where you prepare the cake.    The Builder Image takes the source code and, using the tools from the Build Deps image, compiles it into working server binaries (the actual program files that run the game server).</p> </li> <li> <p>Purpose: Runs the build process, producing the final server files.</p> </li> <li> <p>Key Point: Includes a specific version of the source code, ensuring the same result every time.</p> </li> <li> <p>Runtime Image    Now the cake is baked, and you\u2019ve cleaned up the kitchen. Only the cake remains.    The Runtime Image is a clean, minimal environment that contains only the files and libraries needed to run the server\u2014nothing extra. All the build tools and unnecessary files are left behind.</p> </li> <li> <p>Purpose: Provides the environment where the CMangos server will run.</p> </li> <li> <p>Key Point: Smaller, faster, and more secure because it doesn\u2019t include unnecessary tools.</p> </li> <li> <p>Final Image    This is the beautifully decorated cake, ready to serve.    The Final Image combines the Runtime Image with the built server files from the Builder Image and adds any necessary configuration files. This is the image you\u2019ll actually deploy to run your CMangos server.</p> </li> <li> <p>Purpose: The complete, deployable server image.</p> </li> <li>Key Point: Contains everything needed to run CMangos in production.</li> </ol>"},{"location":"vmangos/build/overview/#why-this-pattern-matters","title":"Why This Pattern Matters","text":"<ul> <li>Consistency: Every time you build the server, you get the same result\u2014no surprises.</li> <li>Security: By removing unnecessary tools and files, the final image is more secure.</li> <li>Efficiency: Smaller images mean faster deployment and less resource usage.</li> <li>Reproducibility: Builds are deterministic, meaning the same source code always produces the same output.</li> </ul>"},{"location":"vmangos/build/runtime/","title":"Runtime Image","text":"<p>The Runtime Image is the final, deployable container that runs the CMangos server. It is designed to be lightweight, secure, and optimized for performance, containing only the essential components needed to run the server.</p>"},{"location":"vmangos/build/runtime/#what-is-the-runtime-image","title":"What is the Runtime Image?","text":"<p>The Runtime Image:</p> <ul> <li>Contains Only Runtime Dependencies: Unlike the Build Deps image, which includes tools needed for compiling code, the Runtime Image includes just the libraries and packages required for CMangos to function.</li> <li>Packages Built Binaries: The compiled server binaries from the Builder Image are packaged into the Runtime Image.</li> <li>Optimized for Efficiency: By excluding unnecessary build tools and dependencies, the image is smaller and more secure.</li> </ul>"},{"location":"vmangos/build/runtime/#how-the-runtime-image-is-built","title":"How the Runtime Image is Built","text":"<p>The process to create the Runtime Image involves:</p> <ol> <li>Using the Build Deps Model: Similar to the Build Deps image, the Runtime Image is created with fixed, deterministic dependencies to ensure consistency.</li> <li>Packaging Binaries: The built server binaries are copied from the Builder Image into the Runtime Image.</li> <li>Stripping Down the Environment: Any unnecessary files, build tools, or extra data are excluded to keep the image lean.</li> </ol> <p>This results in a minimal container that contains everything needed to run the CMangos server\u2014nothing more, nothing less.</p>"},{"location":"vmangos/build/runtime/#benefits-of-the-runtime-image","title":"Benefits of the Runtime Image","text":"<ul> <li>Smaller Size: Reduces resource usage, making it faster to deploy and more efficient to run.</li> <li>Improved Security: Fewer components mean fewer potential vulnerabilities.</li> <li>Consistency: Built using deterministic methods, ensuring the same runtime environment across all deployments.</li> </ul>"},{"location":"vmangos/build/runtime/#running-the-runtime-image","title":"Running the Runtime Image","text":"<p>Once the Runtime Image is built, you can run it like any standard Docker container:</p> <pre><code>docker run -p 8085:8085 -p 3724:3724 mockorg/cmangos-runtime:2024.02.03-1\n</code></pre> <ul> <li>Ports 8085 and 3724 are exposed for the game server and login server.</li> <li><code>mockorg/cmangos-runtime:2024.02.03-1</code> refers to the specific version of the Runtime Image.</li> </ul> <p>For persistent data (like database storage or logs), you can mount volumes:</p> <pre><code>docker run -v $(pwd)/data:/data mockorg/cmangos-runtime:2024.02.03-1\n</code></pre>"},{"location":"vmangos/build/runtime/#summary","title":"Summary","text":"<ul> <li>The Runtime Image is the final container that runs CMangos, containing only the dependencies needed for runtime.</li> <li>It is built using deterministic methods, similar to the Build Deps image, ensuring consistent, reliable performance.</li> <li>The image packages the built binaries from the Builder Image, creating a clean, minimal environment optimized for deployment.</li> <li>This approach enhances security, reduces resource usage, and simplifies server management.</li> </ul>"},{"location":"vmangos/config/accounts/","title":"Default User Accounts","text":"<p>When you set up your server environment, you\u2019ll find several pre-configured user accounts ready to go. These accounts are designed to help you get started quickly without needing to configure detailed login information. Whether you're interested in exploring mechanics, running tests, or just jumping into gameplay, these accounts make it easy to log in and start experimenting immediately.</p> Username Password adminsitrator adminsitrator gamemaster gamemaster moderator moderator player player <p>Each default account is tailored for different levels of access and control. Some accounts offer Game Master privileges, giving you the ability to test commands and manage settings, while others simulate a more standard player experience.</p> <p>Recommended for players is to just use the <code>player:player</code> login.</p>"},{"location":"vmangos/config/commands/","title":"Accounts","text":"<p>Accounts</p>"},{"location":"vmangos/config/mangosd/","title":"MangosD Configuration Guide","text":""},{"location":"vmangos/config/mangosd/#what-is-mangosdconf","title":"What is <code>mangosd.conf</code>?","text":"<p>The <code>mangosd.conf</code> file is the main configuration file for a Massive Network Game Object Servers (MaNGOS) server. It contains settings that control how the server operates, including server name, rates, logging, and more.</p> <p>Think of it as the \"control center\" for your emulator server: if you need to tweak gameplay rates or game data, you\u2019ll find the relevant settings here.</p>"},{"location":"vmangos/config/mangosd/#example-configuration","title":"Example Configuration","text":"<p>The <code>mangosd.conf</code> is made available in the predefined git repositories, setting alongside a docker compose <code>compose.yaml</code>. These are \"mounted\" into the containers, making the configuration files available to the server.</p> <p>Below is a basic example of how the mounting of the <code>mangosd.conf</code> file into a Docker Compose container works:</p> <pre><code>services:\n  mangos:\n    image: thoriumlxc/mockserver:latest\n    volumes:\n      - ./mangosd.conf:/opt/mangos/mangosd.conf\n    # Additional environment variables or configurations can go here\n</code></pre> <p>This works by working relative to the path of the <code>compose.yaml</code> file. So if you file is located at <code>/some/path/to/file/compose.yaml</code>, then your file would be next it within the same directory at <code>/some/path/to/file/mangosd.conf</code></p> <pre><code>.\n\u251c\u2500\u2500 compose.yaml\n\u251c\u2500\u2500 mangosd.conf\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 realmd.conf\n</code></pre> <p>For Windows</p> <p>On Windows, these paths will be in the form of <code>C:\\some\\path\\to\\file\\</code>, as Windows uses <code>\\</code> and MacOS/Linux use <code>\\</code> for indicating paths. Most likely your path is somewhere in your home directory like <code>C:\\Users\\LocalUser\\ThoriumLXC</code>.</p>"},{"location":"vmangos/config/mangosd/#configuration-options","title":"Configuration Options","text":"<p>Here are a few commonly used settings from the <code>mangosd.conf</code> file, as examples of what is within this file. You should look at each individual project for the specific project options.</p> Config Key Description <code>RealmID</code> A unique numeric identifier for your realm. If you have multiple realms, each needs a different ID. <code>DataDir</code> The file system path where your game data is stored. Example: <code>/usr/local/cmangos/data/</code> <code>WorldDatabaseInfo</code> The connection details for your World database. Includes host, port, username, password, and database name. Example: <code>127.0.0.1;3306;root;password;cmangos_world</code> <code>Rates.Health</code> Adjusts how quickly players regenerate health. A higher value means faster regeneration. <code>Rates.DropMoney</code> Controls how much gold creatures drop. A lower value decreases dropped gold; a higher value increases it."},{"location":"vmangos/config/mariadb/","title":"MariaDB","text":""},{"location":"vmangos/config/realmd/","title":"RealmD Configuration Guide","text":""},{"location":"vmangos/config/realmd/#what-is-realmdconf","title":"What is <code>realmd.conf</code>","text":"<p>The <code>realmd.conf</code> file is the primary configuration file for the authentication server in the emulator server. It handles user logins and connections, specifying settings such as database connections, IP bindings, and security options.</p>"},{"location":"vmangos/config/realmd/#example-configuration","title":"Example Configuration","text":"<p>The <code>realmd.conf</code> is made available in the predefined git repositories, setting alongside a docker compose <code>compose.yaml</code>. These are \"mounted\" into the containers, making the configuration files available to the server.</p> <p>Below is a basic example of how the mounting of the <code>realmd.conf</code> file into a Docker Compose container works:</p> <pre><code>services:\n  mangos:\n    image: thoriumlxc/mockserver:latest\n    volumes:\n      - ./realmd.conf:/opt/mangos/realmd.conf\n    # Additional environment variables or configurations can go here\n</code></pre> <p>This works by working relative to the path of the <code>compose.yaml</code> file. So if you file is located at <code>/some/path/to/file/compose.yaml</code>, then your file would be next it within the same directory at <code>/some/path/to/file/realmd.conf</code></p> <pre><code>.\n\u251c\u2500\u2500 compose.yaml\n\u251c\u2500\u2500 mangosd.conf\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 realmd.conf\n</code></pre> <p>For Windows</p> <p>On Windows, these paths will be in the form of <code>C:\\some\\path\\to\\file\\</code>, as Windows uses <code>\\</code> and MacOS/Linux use <code>\\</code> for indicating paths. Most likely your path is somewhere in your home directory like <code>C:\\Users\\LocalUser\\ThoriumLXC</code>.</p>"},{"location":"vmangos/config/realmd/#configuration-options","title":"Configuration Options","text":"<p>Here are a few commonly used settings from the <code>realmd.conf</code> file, as examples of what is within this file. You should look at each individual project for the specific project options.</p> Config Key Description <code>LoginDatabaseInfo</code> Sets the database connection details for the authentication server. <code>ListenHost</code> Defines the IP address the server listens on. <code>ListenPort</code> Specifies the port for incoming connections. <code>MaxPingTime</code> Determines the maximum time to wait for client responses. <code>LogLevel</code> Controls the verbosity of logs for troubleshooting purposes."}]}