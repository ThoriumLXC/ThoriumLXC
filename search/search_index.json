{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ThoriumLXC","text":"<p>Welcome to cMaNGOS.</p> <p>Classic</p> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>TBC</p> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>WOTLK</p> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"cmangos-classic/client-data/","title":"Understanding Client Data in VMangos","text":""},{"location":"cmangos-classic/client-data/#concept-of-client-data","title":"Concept of Client Data","text":"<p>Client data refers to the game files extracted from the World of Warcraft client, including essential elements like maps and VMAP data. This data is crucial for the server to accurately replicate the game environment.</p>"},{"location":"cmangos-classic/client-data/#extracting-client-data","title":"Extracting Client Data","text":"<p>To extract client data, you typically run a command in a terminal environment. Here's a simplified example:</p> <pre><code>docker run --rm \\\n  -v /path/to/client:/client \\\n  -v /path/to/output:/output \\\n  vmap-extractor\n</code></pre> <p>In this command: - <code>/path/to/client</code> is the directory containing the game client. - <code>/path/to/output</code> is where the extracted data will be stored.</p>"},{"location":"cmangos-classic/client-data/#client-data-in-docker","title":"Client Data in Docker","text":"<p>In Docker, client data can be stored in named volumes, which simplifies management and transfer. This approach makes it easy to share the extracted data between different systems or Docker containers.</p>"},{"location":"cmangos-classic/clients/","title":"Supported Clients","text":"<p>Supported Clients</p>"},{"location":"cmangos-classic/installation/","title":"Installing cMaNGOS Classic","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"cmangos-classic/installation/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"cmangos-classic/installation/#sample-title","title":"Sample Title","text":"<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Ctrl+Alt+Del</p>"},{"location":"cmangos-classic/installation/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"cmangos-classic/overview/","title":"cMaNGOS Classic","text":"<p>This guide explains how to acquire a Docker Compose configuration for the Mangos World of Warcraft emulation server, and then run the server. It assumes that Docker and Docker Compose are already installed on your system\u2014if you have not installed them yet, please visit the official Docker website to download and set them up first. All commands shown here should be typed into a Terminal if you are on macOS or Linux, or a Command Prompt/PowerShell if you are on Windows.</p> <p>In this README, you can jump to different sections by clicking on the links below.</p>"},{"location":"cmangos-classic/overview/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have Docker and Docker Compose installed and configured on your machine. Running the command below confirms that Docker is accessible:</p> <pre><code>docker --version\n</code></pre> <p>If this command does not show a valid Docker version, refer to the official documentation on Docker\u2019s website to install and set up Docker correctly. You can also verify Docker Compose similarly:</p> <pre><code>docker-compose --version\n</code></pre> <p>Confirming both means you are ready to proceed.</p>"},{"location":"cmangos-classic/overview/#downloading-the-project","title":"Downloading the Project","text":"<p>To get the files for this Mangos Docker Compose setup, visit the repository on GitHub. Under the green \u201cCode\u201d button (or in the \u201cReleases\u201d section, if one is provided), you will see an option to download a ZIP archive of the code. Download and save the ZIP archive to a location on your computer, then extract its contents. You will end up with a folder that includes the <code>docker-compose.yml</code> file and other necessary files for the Mangos server.</p> <p>After extracting, open your Terminal or Command Prompt and navigate to the newly created folder. For instance, you could type something like:</p> <pre><code>cd /path/to/unzipped/folder\n</code></pre> <p>Adjust the command above to match the folder location where you extracted the archive. Once you are inside this folder, the Docker Compose commands explained in the rest of this document will apply.</p>"},{"location":"cmangos-classic/overview/#pulling-docker-images","title":"Pulling Docker Images","text":"<p>When you are in the project folder, you can download the images that the Docker Compose configuration requires by typing:</p> <pre><code>docker-compose pull\n</code></pre> <p>This command fetches all the images declared in the <code>docker-compose.yml</code> file and stores them on your machine. If you already have a compatible version of these images, Docker may skip downloading or perform a quick update check. Think of Docker images as the building blocks that your containers will be created from.</p>"},{"location":"cmangos-classic/overview/#starting-the-server","title":"Starting the Server","text":"<p>Once the images are ready, you can start the Mangos server by typing:</p> <pre><code>docker-compose up\n</code></pre> <p>This action starts each container specified in the <code>docker-compose.yml</code> file. The Terminal will display output that shows the server initiating. If you want the server to keep running in the background so you can use the same Terminal window for other tasks, you can add the <code>-d</code> flag:</p> <pre><code>docker-compose up -d\n</code></pre> <p>By adding <code>-d</code>, you instruct Docker Compose to run in \u201cdetached\u201d mode, meaning the containers keep running until you stop them, even if you close your Terminal window.</p>"},{"location":"cmangos-classic/overview/#stopping-the-server","title":"Stopping the Server","text":"<p>If you need to pause the running server without removing the containers, you can type:</p> <pre><code>docker-compose stop\n</code></pre> <p>Stopping works well if you plan to resume operations soon and would like to avoid recreating containers. It halts the running processes but leaves them on your system in a stopped state.</p>"},{"location":"cmangos-classic/overview/#removing-containers","title":"Removing Containers","text":"<p>To remove the containers completely and free up any resources they consume, you can type:</p> <pre><code>docker-compose down\n</code></pre> <p>Removing containers can be useful if you want a clean environment each time you start the server. When you run <code>down</code>, Docker Compose not only stops the containers but also deletes them from your system.</p>"},{"location":"cmangos-classic/overview/#full-cleanup","title":"Full Cleanup","text":"<p>If you wish to remove all the containers and the underlying images they depend on, you can type:</p> <pre><code>docker-compose down --rmi all\n</code></pre> <p>This command fully cleans everything associated with this project\u2019s Docker environment, including the images. Keep in mind that if you run this command and later choose to start the server again, Docker will need to pull the images once more, which may take some time depending on your internet speed.</p>"},{"location":"cmangos-classic/overview/#viewing-logs","title":"Viewing Logs","text":"<p>While the server is running, you can inspect its logs by typing:</p> <pre><code>docker-compose logs\n</code></pre> <p>This command shows the output generated by the containers. If you want to follow the logs in real time and watch new entries as they appear, add the <code>-f</code> flag:</p> <pre><code>docker-compose logs -f\n</code></pre> <p>Viewing the logs is a practical way to troubleshoot any issues or just keep track of what the server is doing.</p>"},{"location":"cmangos-classic/overview/#further-reading","title":"Further Reading","text":"<p>If you want to learn more about Docker and Docker Compose, the official Docker documentation is an excellent place to start. You may also consult community forums or official Mangos resources for additional tips, configurations, and troubleshooting help. This project is intended to provide a solid foundation, but you are welcome to customize the <code>docker-compose.yml</code> file or related scripts to suit your own environment.</p>"},{"location":"cmangos-classic/versions/","title":"Versions","text":"<p>Versions</p>"},{"location":"cmangos-classic/bots/ahbot/","title":"AH Bots","text":""},{"location":"cmangos-classic/bots/playerbots/","title":"Playerbots","text":""},{"location":"cmangos-classic/build/building/","title":"Building","text":"<p>Building</p>"},{"location":"cmangos-classic/build/deps/","title":"BuildDeps","text":"<p>BuildDeps</p>"},{"location":"cmangos-classic/build/overview/","title":"Overview","text":""},{"location":"cmangos-classic/config/accounts/","title":"Accounts","text":"<p>Accounts</p>"},{"location":"cmangos-classic/config/commands/","title":"Accounts","text":"<p>Accounts</p>"},{"location":"cmangos-classic/config/mangosd/","title":"Mangosd","text":""},{"location":"cmangos-classic/config/mariadb/","title":"MariaDB","text":""},{"location":"cmangos-classic/config/realmd/","title":"RealmD","text":""},{"location":"cmangos-tbc/client-data/","title":"Client Data","text":""},{"location":"cmangos-tbc/clients/","title":"Supported Clients","text":"<p>Supported Clients</p>"},{"location":"cmangos-tbc/installation/","title":"Installing cMaNGOS Classic","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"cmangos-tbc/installation/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"cmangos-tbc/installation/#sample-title","title":"Sample Title","text":"<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Ctrl+Alt+Del</p>"},{"location":"cmangos-tbc/installation/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"cmangos-tbc/overview/","title":"Getting Started with cMaNGOS Classic","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"cmangos-tbc/overview/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"cmangos-tbc/overview/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"cmangos-tbc/versions/","title":"Versions","text":"<p>Versions</p>"},{"location":"cmangos-tbc/bots/ahbot/","title":"AH Bots","text":""},{"location":"cmangos-tbc/bots/playerbots/","title":"Playerbots","text":""},{"location":"cmangos-tbc/build/building/","title":"Building","text":"<p>Building</p>"},{"location":"cmangos-tbc/build/deps/","title":"BuildDeps","text":"<p>BuildDeps</p>"},{"location":"cmangos-tbc/build/overview/","title":"Overview","text":""},{"location":"cmangos-tbc/config/accounts/","title":"Accounts","text":"<p>Accounts</p>"},{"location":"cmangos-tbc/config/commands/","title":"Accounts","text":"<p>Accounts</p>"},{"location":"cmangos-tbc/config/mangosd/","title":"Mangosd","text":""},{"location":"cmangos-tbc/config/mariadb/","title":"MariaDB","text":""},{"location":"cmangos-tbc/config/realmd/","title":"RealmD","text":""},{"location":"cmangos-wotlk/client-data/","title":"Client Data","text":""},{"location":"cmangos-wotlk/clients/","title":"Supported Clients","text":"<p>Supported Clients</p>"},{"location":"cmangos-wotlk/installation/","title":"Installing cMaNGOS Classic","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"cmangos-wotlk/installation/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"cmangos-wotlk/installation/#sample-title","title":"Sample Title","text":"<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Ctrl+Alt+Del</p>"},{"location":"cmangos-wotlk/installation/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"cmangos-wotlk/overview/","title":"Getting Started with cMaNGOS Classic","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"cmangos-wotlk/overview/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"cmangos-wotlk/overview/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"cmangos-wotlk/versions/","title":"Versions","text":"<p>Versions</p>"},{"location":"cmangos-wotlk/bots/ahbot/","title":"AH Bots","text":""},{"location":"cmangos-wotlk/bots/playerbots/","title":"Playerbots","text":""},{"location":"cmangos-wotlk/build/building/","title":"Building","text":"<p>Building</p>"},{"location":"cmangos-wotlk/build/deps/","title":"BuildDeps","text":"<p>BuildDeps</p>"},{"location":"cmangos-wotlk/build/overview/","title":"Overview","text":""},{"location":"cmangos-wotlk/config/accounts/","title":"Accounts","text":"<p>Accounts</p>"},{"location":"cmangos-wotlk/config/commands/","title":"Accounts","text":"<p>Accounts</p>"},{"location":"cmangos-wotlk/config/mangosd/","title":"Mangosd","text":""},{"location":"cmangos-wotlk/config/mariadb/","title":"MariaDB","text":""},{"location":"cmangos-wotlk/config/realmd/","title":"RealmD","text":""},{"location":"thoriumlxc/client-data/","title":"Understanding Client Data in VMangos","text":""},{"location":"thoriumlxc/client-data/#concept-of-client-data","title":"Concept of Client Data","text":"<p>Client data refers to the game files extracted from the World of Warcraft client, including essential elements like maps and VMAP data. This data is crucial for the server to accurately replicate the game environment.</p>"},{"location":"thoriumlxc/client-data/#extracting-client-data","title":"Extracting Client Data","text":"<p>To extract client data, you typically run a command in a terminal environment. Here's a simplified example:</p> <pre><code>docker run --rm \\\n  -v /path/to/client:/client \\\n  -v /path/to/output:/output \\\n  vmap-extractor\n</code></pre> <p>In this command: - <code>/path/to/client</code> is the directory containing the game client. - <code>/path/to/output</code> is where the extracted data will be stored.</p>"},{"location":"thoriumlxc/client-data/#client-data-in-docker","title":"Client Data in Docker","text":"<p>In Docker, client data can be stored in named volumes, which simplifies management and transfer. This approach makes it easy to share the extracted data between different systems or Docker containers.</p>"},{"location":"thoriumlxc/compose/","title":"Mangos Docker Compose Setup","text":"<p>This guide explains how to acquire a Docker Compose configuration for the Mangos World of Warcraft emulation server, and then run the server. It assumes that Docker and Docker Compose are already installed on your system\u2014if you have not installed them yet, please visit the official Docker website to download and set them up first. All commands shown here should be typed into a Terminal if you are on macOS or Linux, or a Command Prompt/PowerShell if you are on Windows.</p>"},{"location":"thoriumlxc/compose/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have Docker and Docker Compose installed and configured on your machine. Running the command below confirms that Docker is accessible:</p> <pre><code>docker --version\n</code></pre> <p>If this command does not show a valid Docker version, refer to the official documentation on Docker\u2019s website to install and set up Docker correctly. You can also verify Docker Compose similarly:</p> <pre><code>docker-compose --version\n</code></pre> <p>Confirming both means you are ready to proceed.</p>"},{"location":"thoriumlxc/compose/#downloading-the-project","title":"Downloading the Project","text":"<p>To get the files for this Mangos Docker Compose setup, visit the repository on GitHub. Under the green \u201cCode\u201d button (or in the \u201cReleases\u201d section, if one is provided), you will see an option to download a ZIP archive of the code. Download and save the ZIP archive to a location on your computer, then extract its contents. You will end up with a folder that includes the <code>docker-compose.yml</code> file and other necessary files for the Mangos server.</p> <p>After extracting, open your Terminal or Command Prompt and navigate to the newly created folder. For instance, you could type something like:</p> <pre><code>cd /path/to/unzipped/folder\n</code></pre> <p>Adjust the command above to match the folder location where you extracted the archive. Once you are inside this folder, the Docker Compose commands explained in the rest of this document will apply.</p>"},{"location":"thoriumlxc/compose/#pulling-docker-images","title":"Pulling Docker Images","text":"<p>When you are in the project folder, you can download the images that the Docker Compose configuration requires by typing:</p> <pre><code>docker-compose pull\n</code></pre> <p>This command fetches all the images declared in the <code>docker-compose.yml</code> file and stores them on your machine. If you already have a compatible version of these images, Docker may skip downloading or perform a quick update check. Think of Docker images as the building blocks that your containers will be created from.</p>"},{"location":"thoriumlxc/compose/#starting-the-server","title":"Starting the Server","text":"<p>Once the images are ready, you can start the Mangos server by typing:</p> <pre><code>docker-compose up\n</code></pre> <p>This action starts each container specified in the <code>docker-compose.yml</code> file. The Terminal will display output that shows the server initiating. If you want the server to keep running in the background so you can use the same Terminal window for other tasks, you can add the <code>-d</code> flag:</p> <pre><code>docker-compose up -d\n</code></pre> <p>By adding <code>-d</code>, you instruct Docker Compose to run in \u201cdetached\u201d mode, meaning the containers keep running until you stop them, even if you close your Terminal window.</p>"},{"location":"thoriumlxc/compose/#stopping-the-server","title":"Stopping the Server","text":"<p>If you need to pause the running server without removing the containers, you can type:</p> <pre><code>docker-compose stop\n</code></pre> <p>Stopping works well if you plan to resume operations soon and would like to avoid recreating containers. It halts the running processes but leaves them on your system in a stopped state.</p>"},{"location":"thoriumlxc/compose/#removing-containers","title":"Removing Containers","text":"<p>To remove the containers completely and free up any resources they consume, you can type:</p> <pre><code>docker-compose down\n</code></pre> <p>Removing containers can be useful if you want a clean environment each time you start the server. When you run <code>down</code>, Docker Compose not only stops the containers but also deletes them from your system.</p>"},{"location":"thoriumlxc/compose/#full-cleanup","title":"Full Cleanup","text":"<p>If you wish to remove all the containers and the underlying images they depend on, you can type:</p> <pre><code>docker-compose down --rmi all\n</code></pre> <p>This command fully cleans everything associated with this project\u2019s Docker environment, including the images. Keep in mind that if you run this command and later choose to start the server again, Docker will need to pull the images once more, which may take some time depending on your internet speed.</p>"},{"location":"thoriumlxc/compose/#viewing-logs","title":"Viewing Logs","text":"<p>While the server is running, you can inspect its logs by typing:</p> <pre><code>docker-compose logs\n</code></pre> <p>This command shows the output generated by the containers. If you want to follow the logs in real time and watch new entries as they appear, add the <code>-f</code> flag:</p> <pre><code>docker-compose logs -f\n</code></pre> <p>Viewing the logs is a practical way to troubleshoot any issues or just keep track of what the server is doing.</p>"},{"location":"thoriumlxc/getting-started/","title":"Getting Started","text":"<p>Welcome to Mangos Docker Images! These are an opinionated set of container images designed to run CMangos, VMangos, and similar projects within Docker containers. These builds aim to provide a straightforward and consistent environment, ensuring the desired results for your project.</p>"},{"location":"thoriumlxc/getting-started/#prerequisite-installation","title":"Prerequisite Installation","text":"<p>Before diving into the specifics, ensure you have completed the prerequisite installation steps outlined in the Installation Guide. These steps are essential for setting up your environment.</p>"},{"location":"thoriumlxc/getting-started/#projects","title":"Projects","text":"vMaNGOScMaNGOS ClassiccMaNGOS TBCcMaNGOS WOTLKAzerothCore <p> vMaNGOS is an open-source project devoted to accurately recreating an earlier era of a classic fantasy MMO. Building on established frameworks, it offers a stable environment for enthusiasts who want to explore, preserve, or customize the original game content, staying true to the core gameplay and features.</p> <p> cMaNGOS Classic is an open-source project focused on recreating the gameplay and world from a well-known classic fantasy MMO era. It provides a stable, community-driven environment for enthusiasts who want to preserve and explore earlier game mechanics. With its emphasis on authenticity, cMaNGOS-Classic ensures that the original content\u2014quests, zones, and core systems\u2014remain as accurate as possible to their roots.</p> <p> cMaNGOS TBC is an open-source project dedicated to preserving and recreating the second major era of a classic fantasy MMO. Building on the foundation of earlier versions, cMaNGOS TBC incorporates new zones, gameplay improvements, and additional features while maintaining authenticity and stability, allowing enthusiasts to experience the progression of content in its earlier form.</p> <p> cMaNGOS WOTLK is an open-source project focused on recreating the third major era of a classic fantasy MMO. It expands on the previous content with new zones, storyline developments, and updated mechanics, while maintaining accuracy and stability. This allows enthusiasts to explore and experience the progression and features introduced during this iconic period.</p> <p> AzerothCore is an open-source MMO server framework that aims to provide a robust, flexible, and actively maintained environment for creating and running your own game worlds. It supports a variety of features and expansions, offering a strong base for developers and communities to build upon and customize.</p>"},{"location":"thoriumlxc/installation/","title":"Installation Guide","text":""},{"location":"thoriumlxc/installation/#installing-docker","title":"Installing Docker","text":"<p>Follow the instructions below to install Docker on your operating system:</p> Operating System Installation Guide Windows Install Docker on Windows MacOS Install Docker on MacOS Linux Install Docker on Linux"},{"location":"thoriumlxc/installation/#ensuring-a-terminal-environment","title":"Ensuring a Terminal Environment","text":"<p>Ensure you have a terminal environment installed:</p> <ul> <li>Windows: Use Windows Terminal.</li> <li>MacOS: The default Terminal app is sufficient.</li> <li>Linux: Most distributions include a terminal by default.</li> </ul> <p>You can verify the terminal is working by running:</p> <pre><code>echo \"Hello\"\n</code></pre>"},{"location":"thoriumlxc/installation/#verifying-the-docker-installation","title":"Verifying the Docker Installation","text":"<p>Once Docker is installed, verify the installation using the \"Hello World\" container:</p> <pre><code>docker run hello-world\n</code></pre> <p>If the installation was successful, you should see a message confirming that Docker is working correctly.</p>"},{"location":"thoriumlxc/mangosd/","title":"CMangos Configuration Guide","text":""},{"location":"thoriumlxc/mangosd/#what-is-mangosdconf","title":"What is <code>mangosd.conf</code>?","text":"<p>The <code>mangosd.conf</code> file is the main configuration file for the CMangos server. It contains settings that control how the server operates, including server name, rates, logging, and more.</p> <p>Think of it as the \u201ccontrol center\u201d for your CMangos instance: if you need to tweak gameplay rates or connect to your database, you\u2019ll find the relevant settings here.</p>"},{"location":"thoriumlxc/mangosd/#example-using-mangosdconf-with-docker-compose","title":"Example: Using <code>mangosd.conf</code> with Docker Compose","text":"<p>Below is a basic example of how to mount the <code>mangosd.conf</code> file into a Docker Compose container. Replace the placeholder paths and image tags with your actual configuration:</p> <pre><code>version: '3.8'\nservices:\n  cmangos:\n    image: cmangos/server:latest\n    volumes:\n      - ./mangosd.conf:/etc/cmangos/mangosd.conf\n    ports:\n      - \"8085:8085\"\n    # Additional environment variables or configurations can go here\n</code></pre> <p>This works by working relative to the path of the <code>docker-compose.yaml</code> file. So if you file is located at <code>/some/path/to/file/docker-compose.yaml</code>, then your file would be next it within the same directory at <code>/some/path/to/file/mangosd.conf</code></p> <pre><code>-\n-\n-\n-\n</code></pre>"},{"location":"thoriumlxc/mangosd/#configuration-options","title":"Configuration Options","text":"<p>Here are a few commonly used settings from the <code>mangosd.conf</code> file. You can add more as needed:</p> <ul> <li><code>RealmID</code></li> <li> <p>A unique numeric identifier for your realm. If you have multiple realms, each needs a different ID.</p> </li> <li> <p><code>DataDir</code></p> </li> <li> <p>The file system path where your game data is stored. For example: <code>/usr/local/cmangos/data/</code></p> </li> <li> <p><code>WorldDatabaseInfo</code></p> </li> <li> <p>The connection details for your World database. Typically includes the host, port, username, password, and database name.   Example: <code>127.0.0.1;3306;root;password;cmangos_world</code></p> </li> <li> <p><code>Rates.Health</code></p> </li> <li> <p>Adjusts how quickly players regenerate health. A higher value means faster regeneration.</p> </li> <li> <p><code>Rates.DropMoney</code></p> </li> <li>Controls how much gold creatures drop. A lower value decreases dropped gold; a higher value increases it.</li> </ul> <p>Feel free to expand on these options or add new ones based on your project\u2019s needs. You can find more detailed documentation and community support in the official CMangos GitHub repository and forums.</p>"},{"location":"thoriumlxc/mariadb/","title":"MariaDB","text":"<p>MariaDB is an open-source database system, much like MySQL, and is used to store and manage data. In the context of CMangos, it acts as the backbone for storing game data, including characters, items, and world information.</p>"},{"location":"thoriumlxc/mariadb/#how-mariadb-fits-with-cmangos","title":"How MariaDB Fits with CMangos","text":"<p>MariaDB serves as the database backend for CMangos, storing all the persistent game data. CMangos communicates with MariaDB to retrieve and store this information, ensuring the game world operates smoothly and consistently.</p>"},{"location":"thoriumlxc/mariadb/#connection-details-in-cmangos","title":"Connection Details in CMangos","text":"<p>The connection between CMangos and MariaDB is defined in configuration files. These files include details like the database server address, user credentials, and database names, allowing CMangos to access and manage game data.</p>"},{"location":"thoriumlxc/mariadb/#managing-data-with-phpmyadmin","title":"Managing Data with phpMyAdmin","text":"<p>phpMyAdmin is a tool that provides a web interface for managing MariaDB databases. It allows you to view, edit, and manage the database contents without needing advanced technical skills. This can be particularly useful for making changes or troubleshooting the database.</p>"},{"location":"thoriumlxc/realmd/","title":"realmd.conf Overview","text":"<p>The <code>realmd.conf</code> file is the primary configuration file for the authentication server in CMangos. It handles user logins and connections, specifying settings such as database connections, IP bindings, and security options.</p>"},{"location":"thoriumlxc/realmd/#example-configuration","title":"Example Configuration","text":"<p>To use <code>realmd.conf</code> with Docker Compose, you can create a custom configuration file and mount it into the Docker container:</p> <pre><code>version: '3'\nservices:\n  realmd:\n    image: cmangos/realmd\n    volumes:\n      - ./realmd.conf:/etc/cmangos/realmd.conf\n    ports:\n      - \"3724:3724\"\n</code></pre> <p>This works by working relative to the path of the <code>docker-compose.yaml</code> file. So if you file is located at <code>/some/path/to/file/docker-compose.yaml</code>, then your file would be next it within the same directory at <code>/some/path/to/file/realmd.conf</code></p> <pre><code>-\n-\n-\n-\n</code></pre>"},{"location":"thoriumlxc/realmd/#configuration-options","title":"Configuration Options","text":"<ul> <li><code>LoginDatabaseInfo</code>: Sets the database connection details for the authentication server.</li> <li><code>ListenHost</code>: Defines the IP address the server listens on.</li> <li><code>ListenPort</code>: Specifies the port for incoming connections.</li> <li><code>MaxPingTime</code>: Determines the maximum time to wait for client responses.</li> <li><code>LogLevel</code>: Controls the verbosity of logs for troubleshooting purposes. [media pointer=\"sediment://file_b3dac2fe39f0303c16a1c5ab521b4b49395159a8cb10a5b7ba7dcc96e8dcc9b1df462079404e2aa8e6e8de6740b5d9d4\"]</li> </ul>"},{"location":"thoriumlxc/thoriumlxc/","title":"ThoriumLXC","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"thoriumlxc/thoriumlxc/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"thoriumlxc/thoriumlxc/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"thoriumlxc/database/backups/","title":"Database Backups","text":"<p>When using Docker Compose with Docker and MariaDB, you can create a simple setup for database backups. Essentially, Docker Compose helps manage multi-container applications, and MariaDB is the database server. To back up the database, you'll use a tool like <code>mysqldump</code>, which is commonly used for creating backups of MySQL/MariaDB databases.</p>"},{"location":"thoriumlxc/database/backups/#docker-compose-example","title":"Docker Compose Example","text":"<p>Let's create a <code>docker-compose.yml</code> file with two main services: the MariaDB server and a backup service.</p> <pre><code>version: '3.8'\nservices:\n  mariadb:\n    image: mariadb:latest\n    environment:\n      MARIADB_ROOT_PASSWORD: example_password\n      MARIADB_DATABASE: example_db\n    volumes:\n      - db_data:/var/lib/mysql\n\n  backup:\n    image: mariadb:latest\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./backups:/backups\n    command: &gt;\n      bash -c \"mysqldump -uroot -pexample_password example_db &gt; /backups/backup.sql\"\n\nvolumes:\n  db_data:\n    driver: local\n</code></pre>"},{"location":"thoriumlxc/database/backups/#explanation-of-example","title":"Explanation of Example","text":"<ol> <li>MariaDB Service:</li> <li>This service (<code>mariadb</code>) runs a MariaDB container.</li> <li><code>MARIADB_ROOT_PASSWORD</code> sets the root password for the database.</li> <li><code>MARIADB_DATABASE</code> creates a new database named <code>example_db</code>.</li> <li> <p>The volume <code>db_data</code> persists the database data.</p> </li> <li> <p>Backup Service:</p> </li> <li>This service (<code>backup</code>) uses the same image as MariaDB to use the <code>mysqldump</code> tool.</li> <li>It mounts the <code>db_data</code> volume to access the database files.</li> <li>It also mounts a <code>./backups</code> folder from the host to store backups.</li> <li>The <code>command</code> field uses <code>mysqldump</code> to export the database to a file named <code>backup.sql</code> inside the <code>backups</code> folder.</li> </ol>"},{"location":"thoriumlxc/design/overview/","title":"Overview","text":"<p>ThoriumLXC is a project focused on providing container images that can be used to spin up cMaNGOS/vMaNGOS server environments without needing to modify the base OS.</p>"},{"location":"thoriumlxc/design/overview/#docker","title":"Docker","text":"<p>Docker is a tool that packages software into self-contained \u201ccontainers,\u201d which include everything needed to run an application\u2014its libraries, tools, and any system dependencies. You can think of each container as a portable box that remains the same regardless of where it\u2019s opened. This consistency makes it easier to avoid those frustrating moments where something works on one computer but not another.</p> <p>By relying on Docker, setting up software becomes more straightforward because you only need to pull the container instead of installing several tools by hand. Updates are also simpler: if a new version of the application is released, you just download the latest container, which helps you avoid the messy cleanup or leftover files that sometimes occur with traditional upgrade processes. Similarly, fixing misconfigurations is less of a headache because you can remove a troublesome container entirely and start fresh.</p> <p>I chose Docker for ThoriumLXC because it simplfied spinning up and down servers in my homeserver. Using different Docker Compose files allowed managing different server versions without worrying about the base OS libraries (e.g. libmysqlclient). Plus, it provided a great opportunity to experiment with building container images, and patterns like the BuildDeps, Builder, Runtime and Final images.</p>"},{"location":"thoriumlxc/design/overview/#docker-compose","title":"Docker Compose","text":"<p>When a project depends on several containers, Docker Compose ensures they all work together smoothly. Rather than juggling multiple commands or manually wiring each container to the right place, you can define the entire setup in a single file. This configuration tells Docker exactly which containers you need, how they communicate with one another, and any resources they need to share. In this sense, Docker Compose acts like a coordinator, launching and managing all the containers at once, so you can focus on the actual application instead of spending time on the underlying infrastructure.</p>"},{"location":"thoriumlxc/design/overview/#bazel","title":"Bazel","text":"<p>I opted for Bazel in this project primarily to explore <code>rules_oci</code>, which offered a more refined approach compared to the earlier <code>rules_docker</code>. The previous ruleset had challenges with unexpected behaviors and complex internals (go dependencies), making it cumbersome in a number of ways.</p> <p>In contrast, <code>rules_oci</code> promised a simplified, streamlined interface as it dropped support for things like <code>container_run_and_extract</code>, and other rules that added a lot of dependency to them. When building with <code>rules_oci</code>, I inteneded up taking the approach of the build-deps, builder, runtime, and final image pattern as I felt it allowed me to leverage <code>docker run</code>, while still orchestrating everything with Bazel.</p> <p>The potential for hermetic builds is nice as well, as it meant that the same source code always produced bit-wise identical images.</p>"},{"location":"vmangos/client-data/","title":"Client Data","text":""},{"location":"vmangos/clients/","title":"Supported Clients","text":"<p>Supported Clients</p>"},{"location":"vmangos/installation/","title":"Installing cMaNGOS Classic","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"vmangos/installation/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"vmangos/installation/#sample-title","title":"Sample Title","text":"<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Ctrl+Alt+Del</p>"},{"location":"vmangos/installation/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"vmangos/overview/","title":"Getting Started with cMaNGOS Classic","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"vmangos/overview/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"vmangos/overview/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"vmangos/versions/","title":"Versions","text":"<p>Versions</p>"},{"location":"vmangos/bots/ahbot/","title":"AH Bots","text":""},{"location":"vmangos/bots/playerbots/","title":"Playerbots","text":""},{"location":"vmangos/build/building/","title":"Building","text":"<p>Building</p>"},{"location":"vmangos/build/deps/","title":"BuildDeps","text":"<p>BuildDeps</p>"},{"location":"vmangos/build/overview/","title":"Overview","text":""},{"location":"vmangos/config/accounts/","title":"Accounts","text":"<p>Accounts</p>"},{"location":"vmangos/config/commands/","title":"Accounts","text":"<p>Accounts</p>"},{"location":"vmangos/config/mangosd/","title":"Mangosd","text":""},{"location":"vmangos/config/mariadb/","title":"MariaDB","text":""},{"location":"vmangos/config/realmd/","title":"RealmD","text":""}]}